{"remainingRequest":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/src/views/share-vue-template/excel/excel.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/src/views/share-vue-template/excel/excel.vue","mtime":1579165050580},{"path":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["excel.vue"],"names":[],"mappingsfile":"excel.vue","sourceRoot":"src/views/share-vue-template/excel","sourcesContent":["<style lang=\"less\">\n@import \"../../../styles/table-common.less\";\n</style>\n<template>\n  <div class=\"search\">\n    <Card>\n      <Row class=\"operation\">\n        <Button @click=\"exportSelectData\" icon=\"md-cloud-upload\">导出所选数据</Button>\n        <Button @click=\"exportAll\" icon=\"ios-cloud-upload\">导出全部数据</Button>\n        <Button @click=\"importModalVisible=true\" icon=\"ios-download\">导入数据</Button>\n        <Button type=\"dashed\" @click=\"openTip=!openTip\">{{openTip ? \"关闭提示\" : \"开启提示\"}}</Button>\n      </Row>\n      <Row v-show=\"openTip\">\n        <Alert show-icon>\n          已选择\n          <span class=\"select-count\">{{selectCount}}</span> 项\n          <a class=\"select-clear\" @click=\"clearSelectAll\">清空</a>\n        </Alert>\n      </Row>\n      <Row>\n        <Table\n          :loading=\"loading\"\n          border\n          :columns=\"columns\"\n          :data=\"data\"\n          sortable=\"custom\"\n          @on-sort-change=\"changeSort\"\n          @on-selection-change=\"showSelect\"\n          ref=\"table\"\n        ></Table>\n      </Row>\n      <Row type=\"flex\" justify=\"end\" class=\"page\">\n        <Page\n          :current=\"searchForm.pageNumber\"\n          :total=\"total\"\n          :page-size=\"searchForm.pageSize\"\n          @on-change=\"changePage\"\n          @on-page-size-change=\"changePageSize\"\n          :page-size-opts=\"[10,20,50]\"\n          size=\"small\"\n          show-total\n          show-elevator\n          show-sizer\n        ></Page>\n      </Row>\n    </Card>\n\n    <!-- 自定义导出数据 -->\n    <Modal\n      v-model=\"exportModalVisible\"\n      :title=\"exportTitle\"\n      :loading=\"loadingExport\"\n      @on-ok=\"exportCustomData\"\n    >\n      <Form ref=\"exportForm\" :label-width=\"100\">\n        <FormItem label=\"导出文件名\">\n          <Input v-model=\"filename\" />\n        </FormItem>\n        <FormItem label=\"自定义导出列\">\n          <CheckboxGroup v-model=\"chooseColumns\">\n            <Checkbox\n              v-for=\"(item, i) in exportColumns\"\n              :label=\"item.title\"\n              :key=\"i\"\n              :value=\"item.checked\"\n              :disabled=\"item.disabled\"\n            ></Checkbox>\n          </CheckboxGroup>\n        </FormItem>\n      </Form>\n    </Modal>\n    <Drawer title=\"导入数据\" closable v-model=\"importModalVisible\" width=\"1000\">\n      <div style=\"display:flex;justify-content: space-between;align-items: center;\">\n        <Upload action :before-upload=\"beforeUploadImport\" accept=\".xls, .xlsx\">\n          <Button\n            :loading=\"reading\"\n            icon=\"ios-cloud-upload-outline\"\n            style=\"margin-right:10px\"\n          >上传Excel文件</Button>\n          <span v-if=\"uploadfile.name\">当前选择文件：{{ uploadfile.name }}</span>\n        </Upload>\n        <Button @click=\"clearImportData\" icon=\"md-trash\">清空数据</Button>\n      </div>\n      <Alert type=\"warning\" show-icon>导入前请下载查看导入模版数据文件，确保数据格式正确，不得修改列英文名称。</Alert>\n      <Table\n        :columns=\"importColumns\"\n        border\n        :height=\"height\"\n        :data=\"importTableData\"\n        ref=\"importTable\"\n      ></Table>\n      <div class=\"drawer-footer\">\n        <Button @click=\"downloadTemple\" type=\"info\" style=\"position:absolute;left:15px;\">下载导入模板</Button>\n        <Button @click=\"importModalVisible=false\">关闭</Button>\n        <Button\n          :loading=\"importLoading\"\n          :disabled=\"importTableData.length<=0\"\n          @click=\"importData\"\n          style=\"margin-left:5px\"\n          type=\"primary\"\n        >\n          确认导入\n          <span v-if=\"importTableData.length>0\">{{importTableData.length}} 条数据</span>\n        </Button>\n      </div>\n    </Drawer>\n  </div>\n</template>\n\n<script>\n// 模版导入文件表数据\nimport { userColumns, userData } from \"@/libs/importTemplate\";\n// excel转换工具类\nimport excel from \"@/libs/excel\";\nexport default {\n  name: \"excel\",\n  data() {\n    return {\n      openTip: true, // 显示提示\n      reading: false, // 读取中\n      height: 510, // 高度\n      loading: true, // 表单加载状态\n      importLoading: false, // 导入加载状态\n      loadingExport: true, // 导出加载状态\n      exportModalVisible: false, // 自定义导出显示\n      importModalVisible: false, // 导入显示\n      selectCount: 0, // 多选计数\n      selectList: [], // 多选数据\n      searchForm: {\n        pageNumber: 1,\n        pageSize: 10,\n        sort: \"createTime\",\n        order: \"desc\"\n      },\n      columns: [\n        // 表头\n        {\n          type: \"selection\",\n          width: 60,\n          align: \"center\"\n        },\n        {\n          type: \"index\",\n          width: 60,\n          align: \"center\"\n        },\n        {\n          title: \"名称\",\n          key: \"name\",\n          sortable: true\n        },\n        {\n          title: \"手机\",\n          key: \"mobile\",\n          sortable: true\n        },\n        {\n          title: \"创建时间\",\n          key: \"createTime\",\n          sortable: true,\n          sortType: \"desc\"\n        },\n        {\n          title: \"更新时间\",\n          key: \"updateTime\",\n          sortable: true\n        },\n        {\n          title: \"操作\",\n          key: \"action\",\n          align: \"center\",\n          width: 200,\n          render: (h, params) => {\n            return h(\"div\", [\n              h(\n                \"Button\",\n                {\n                  props: {\n                    type: \"primary\",\n                    size: \"small\",\n                    icon: \"ios-create-outline\"\n                  },\n                  style: {\n                    marginRight: \"5px\"\n                  },\n                  on: {\n                    click: () => {\n                      this.$Message.info(\"点击了编辑\");\n                    }\n                  }\n                },\n                \"编辑\"\n              ),\n              h(\n                \"Button\",\n                {\n                  props: {\n                    type: \"error\",\n                    size: \"small\",\n                    icon: \"md-trash\"\n                  },\n                  on: {\n                    click: () => {\n                      this.$Message.info(\"点击了删除\");\n                    }\n                  }\n                },\n                \"删除\"\n              )\n            ]);\n          }\n        }\n      ],\n      exportColumns: [\n        // 导出列\n        {\n          title: \"名称\",\n          key: \"name\",\n          sortable: true\n        },\n        {\n          title: \"手机\",\n          key: \"mobile\",\n          sortable: true\n        },\n        {\n          title: \"创建时间\",\n          key: \"createTime\",\n          sortable: true,\n          sortType: \"desc\"\n        },\n        {\n          title: \"更新时间\",\n          key: \"updateTime\",\n          sortable: true\n        }\n      ],\n      chooseColumns: [],\n      filename: \"数据\",\n      exportTitle: \"确认导出\",\n      exportType: \"\",\n      importTableData: [],\n      importColumns: [],\n      uploadfile: {\n        name: \"\"\n      },\n      tempColumns: userColumns,\n      tempData: userData,\n      data: [],\n      exportData: [],\n      total: 0\n    };\n  },\n  methods: {\n    init() {\n      this.getDataList();\n      // 初始化导出列数据\n      let array = [];\n      this.exportColumns.forEach(e => {\n        // 指定列限制权限\n        if (\n          !this.getStore(\"roles\").includes(\"ROLE_ADMIN\") &&\n          e.key == \"mobile\"\n        ) {\n          e.title = \"[无权导出] \" + e.title;\n          e.disabled = true;\n        } else {\n          e.disabled = false;\n        }\n        array.push(e.title);\n      });\n      this.chooseColumns = array;\n    },\n    changePage(v) {\n      this.searchForm.pageNumber = v;\n      this.getDataList();\n      this.clearSelectAll();\n    },\n    changePageSize(v) {\n      this.searchForm.pageSize = v;\n      this.getDataList();\n    },\n    selectDateRange(v) {\n      if (v) {\n        this.searchForm.startDate = v[0];\n        this.searchForm.endDate = v[1];\n      }\n    },\n    getDataList() {\n      this.loading = true;\n      let params = {\n        pageNumber: this.pageNumber,\n        pageSize: this.pageSize,\n        sort: this.sortColumn,\n        order: this.sortType\n      };\n      // 请求后端获取表单数据 请自行修改接口\n      // this.getRequest(\"请求路径\", params).then(res => {\n      //   this.loading = false;\n      //   if (res.success) {\n      //     this.data = res.result.content;\n      //     this.total = res.result.totalElements;\n      //   }\n      // });\n      // 以下为模拟数据\n      this.data = [\n        {\n          id: \"1\",\n          name: \"XBoot\",\n          mobile: \"12345678901\",\n          createTime: \"2018-08-08 00:08:00\",\n          updateTime: \"2018-08-08 00:08:00\"\n        },\n        {\n          id: \"2\",\n          name: \"Daiv\",\n          mobile: \"12345678901\",\n          createTime: \"2018-08-08 00:08:00\",\n          updateTime: \"2018-08-08 00:08:00\"\n        }\n      ];\n      this.total = this.data.length;\n      this.loading = false;\n    },\n    handleSearch() {\n      this.searchForm.pageNumber = 1;\n      this.searchForm.pageSize = 10;\n      this.getDataList();\n    },\n    handleReset() {\n      this.$refs.searchForm.resetFields();\n      this.searchForm.pageNumber = 1;\n      this.searchForm.pageSize = 10;\n      // 重新加载数据\n      this.getDataList();\n    },\n    changeSort(e) {\n      this.searchForm.sort = e.key;\n      this.searchForm.order = e.order;\n      if (e.order == \"normal\") {\n        this.searchForm.order = \"\";\n      }\n      this.getDataList();\n    },\n    exportSelectData() {\n      if (this.selectCount <= 0) {\n        this.$Message.warning(\"您还未选择要导出的数据\");\n        return;\n      }\n      this.exportType = \"part\";\n      this.exportModalVisible = true;\n      this.exportTitle = \"确认导出 \" + this.selectCount + \" 条数据\";\n    },\n    exportAll() {\n      this.exportType = \"all\";\n      this.exportModalVisible = true;\n      this.exportTitle = \"确认导出全部 \" + this.total + \" 条数据\";\n      // 请求后端获取全部数据 请自行修改接口\n      // this.getRequest(\"请求路径\", params).then(res => {\n      //   if (res.success) {\n      //     this.exportData = res.result;\n      //   }\n      // });\n      // 以下为模拟数据\n      this.exportData = [\n        {\n          id: \"1\",\n          name: \"XBoot\",\n          mobile: \"12345678901\",\n          createTime: \"2018-08-08 00:08:00\",\n          updateTime: \"2018-08-08 00:08:00\"\n        },\n        {\n          id: \"2\",\n          name: \"Daiv\",\n          mobile: \"12345678901\",\n          createTime: \"2018-08-08 00:08:00\",\n          updateTime: \"2018-08-08 00:08:00\"\n        }\n      ];\n    },\n    exportCustomData() {\n      if (this.filename == \"\") {\n        this.filename = \"用户数据\";\n      }\n      // 判断勾选导出列\n      let array = [];\n      this.exportColumns.forEach(e => {\n        this.chooseColumns.forEach(c => {\n          if (e.title == c && !e.disabled) {\n            array.push(e);\n          }\n        });\n      });\n      this.exportColumns = array;\n      this.exportModalVisible = false;\n      let title = [];\n      let key = [];\n      this.exportColumns.forEach(e => {\n        title.push(e.title);\n        key.push(e.key);\n      });\n      const params = {\n        title: title,\n        key: key,\n        data: this.exportData,\n        autoWidth: true,\n        filename: this.filename\n      };\n      excel.export_array_to_excel(params);\n    },\n    beforeUploadImport(file) {\n      this.uploadfile = file;\n      const fileExt = file.name\n        .split(\".\")\n        .pop()\n        .toLocaleLowerCase();\n      if (fileExt == \"xlsx\" || fileExt == \"xls\") {\n        this.readFile(file);\n        this.file = file;\n      } else {\n        this.$Notice.warning({\n          title: \"文件类型错误\",\n          desc:\n            \"所选文件‘ \" +\n            file.name +\n            \" ’不是EXCEL文件，请选择后缀为.xlsx或者.xls的EXCEL文件。\"\n        });\n      }\n      return false;\n    },\n    // 读取文件\n    readFile(file) {\n      this.reading = true;\n      const reader = new FileReader();\n      reader.readAsArrayBuffer(file);\n      reader.onerror = e => {\n        this.reading = false;\n        this.$Message.error(\"文件读取出错\");\n      };\n      reader.onload = e => {\n        const data = e.target.result;\n        const { header, results } = excel.read(data, \"array\");\n        const tableTitle = header.map(item => {\n          return { title: item, key: item, minWidth: 100, align: \"center\" };\n        });\n        this.importTableData = results;\n        this.importColumns = tableTitle;\n        this.reading = false;\n        this.$Message.success(\"读取数据成功\");\n      };\n    },\n    downloadTemple() {\n      let title = [];\n      let key = [];\n      userColumns.forEach(e => {\n        title.push(e.title);\n        key.push(e.key);\n      });\n      const params = {\n        title: title,\n        key: key,\n        data: userData,\n        autoWidth: true,\n        filename: \"导入数据模版\"\n      };\n      excel.export_array_to_excel(params);\n    },\n    importData() {\n      this.importLoading = true;\n      // 传入导入数据 后端接收body数组列表批量导入\n      // this.importRequest(\"请求路径\", this.importTableData).then(res => {\n      //   this.importLoading = false;\n      //   if (res.success) {\n      //     this.importModalVisible = false;\n      //     this.getDataList();\n      //     this.$Modal.info({\n      //       title: \"导入结果\",\n      //       content: res.message\n      //     });\n      //   }\n      // });\n      // 模拟请求成功\n      this.importLoading = false;\n      this.importModalVisible = false;\n      this.$Modal.info({\n        title: \"导入结果\",\n        content: \"导入成功，这是假通知\"\n      });\n      this.getDataList();\n    },\n    showSelect(e) {\n      this.exportData = e;\n      this.selectList = e;\n      this.selectCount = e.length;\n    },\n    clearSelectAll() {\n      this.$refs.table.selectAll(false);\n    },\n    clearImportData() {\n      this.importTableData = [];\n      this.importColumns = [];\n      this.uploadfile = {};\n    }\n  },\n  mounted() {\n    // 计算高度\n    this.height = Number(document.documentElement.clientHeight - 230);\n    this.init();\n  }\n};\n</script>\n"]}]}