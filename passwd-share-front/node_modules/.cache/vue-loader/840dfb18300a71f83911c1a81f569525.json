{"remainingRequest":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/src/views/my-components/share/editor.vue?vue&type=style&index=0&lang=less&","dependencies":[{"path":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/src/views/my-components/share/editor.vue","mtime":1577168504909},{"path":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/less-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouZS1tZW51IHsKICB6LWluZGV4OiAxMDE7CiAgcG9zaXRpb246IGFic29sdXRlOwogIGN1cnNvcjogcG9pbnRlcjsKICBjb2xvcjogIzk5OTsKICA6aG92ZXIgewogICAgY29sb3I6ICMzMzM7CiAgfQp9Ci5lLWNvZGUgewogIHRvcDogNHB4OwogIGxlZnQ6IDY5MnB4Owp9Ci5lLXByZXZpZXcgewogIHRvcDogNHB4OwogIGxlZnQ6IDcyNnB4Owp9Ci5lLXRyYXNoIHsKICB0b3A6IDZweDsKICBsZWZ0OiA3NjBweDsKfQo="},{"version":3,"sources":["editor.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"editor.vue","sourceRoot":"src/views/my-components/share","sourcesContent":["<template>\n  <div>\n    <div style=\"position:relative\">\n      <div :id=\"id\" style=\"min-width:800px\"></div>\n      <div v-if=\"showExpand\">\n        <div class=\"e-menu e-code\" @click=\"editHTML\">\n          <Icon type=\"md-code-working\" size=\"22\" />\n        </div>\n        <div class=\"e-menu e-preview\" @click=\"fullscreenModal=true\">\n          <Icon type=\"ios-eye\" size=\"24\" />\n        </div>\n        <div class=\"e-menu e-trash\" @click=\"clear\">\n          <Icon type=\"md-trash\" size=\"18\" />\n        </div>\n      </div>\n    </div>\n\n    <Modal\n      title=\"编辑html代码\"\n      v-model=\"showHTMLModal\"\n      :mask-closable=\"false\"\n      :width=\"900\"\n      :fullscreen=\"full\"\n    >\n      <Input\n        v-if=\"!full\"\n        v-model=\"dataEdit\"\n        :rows=\"15\"\n        type=\"textarea\"\n        style=\"max-height:60vh;overflow:auto;\"\n      />\n      <Input v-if=\"full\" v-model=\"dataEdit\" :rows=\"32\" type=\"textarea\" />\n      <div slot=\"footer\">\n        <Button @click=\"full=!full\" icon=\"md-expand\">全屏开/关</Button>\n        <Button @click=\"editHTMLOk\" type=\"primary\" icon=\"md-checkmark-circle-outline\">确定保存</Button>\n      </div>\n    </Modal>\n    <Modal title=\"预览\" v-model=\"fullscreenModal\" fullscreen>\n      <div v-html=\"data\">{{data}}</div>\n      <div slot=\"footer\">\n        <Button @click=\"fullscreenModal=false\">关闭</Button>\n      </div>\n    </Modal>\n  </div>\n</template>\n\n<script>\nimport { uploadFile } from \"@/api/index\";\nimport E from \"wangeditor\";\nimport xss from \"xss\";\n// 表情包配置 自定义表情可在该js文件中统一修改\nimport { sina } from \"@/libs/emoji\";\nvar editor = null;\nexport default {\n  name: \"editor\",\n  props: {\n    id: {\n      type: String,\n      default: \"editor\"\n    },\n    value: String,\n    base64: {\n      type: Boolean,\n      default: false\n    },\n    showExpand: {\n      type: Boolean,\n      default: true\n    },\n    openXss: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    return {\n      editor: null,\n      data: this.value, // 富文本数据\n      dataEdit: \"\", // 编辑数据\n      showHTMLModal: false, // 显示html\n      full: false, // html全屏开关\n      fullscreenModal: false // 显示全屏预览\n    };\n  },\n  methods: {\n    initEditor() {\n      let that = this;\n      // 详见wangeditor3官网文档 https://www.kancloud.cn/wangfupeng/wangeditor3/332599\n      editor = new E(`#${this.id}`);\n      // 编辑内容绑定数据\n      editor.customConfig.onchange = html => {\n        if (this.openXss) {\n          this.data = xss(html);\n        } else {\n          this.data = html;\n        }\n        this.$emit(\"input\", this.data);\n        this.$emit(\"on-change\", this.data);\n      };\n      // z-index\n      editor.customConfig.zIndex = 100;\n      if (this.base64) {\n        // 使用 base64 保存图片\n        editor.customConfig.uploadImgShowBase64 = true;\n      } else {\n        // 配置上传图片服务器端地址\n        editor.customConfig.uploadImgServer = uploadFile;\n        // xboot如要header中传入token鉴权\n        editor.customConfig.uploadImgHeaders = {\n          accessToken: that.getStore(\"accessToken\")\n        };\n        editor.customConfig.uploadFileName = \"file\";\n        editor.customConfig.uploadImgHooks = {\n          before: function(xhr, editor, files) {\n            // 图片上传之前触发\n          },\n          success: function(xhr, editor, result) {\n            // 图片上传并返回结果，图片插入成功之后触发\n          },\n          fail: function(xhr, editor, result) {\n            // 图片上传并返回结果，但图片插入错误时触发\n            that.$Message.error(\"上传图片失败\");\n          },\n          error: function(xhr, editor) {\n            // 图片上传出错时触发\n            that.$Message.error(\"上传图片出错\");\n          },\n          timeout: function(xhr, editor) {\n            // 图片上传超时时触发\n            that.$Message.error(\"上传图片超时\");\n          },\n          // 如果服务器端返回的不是 {errno:0, data: [...]} 这种格式，可使用该配置\n          customInsert: function(insertImg, result, editor) {\n            if (result.success == true) {\n              let url = result.result;\n              insertImg(url);\n              that.$Message.success(\"上传图片成功\");\n            } else {\n              that.$Message.error(result.message);\n            }\n          }\n        };\n      }\n      editor.customConfig.customAlert = function(info) {\n        // info 是需要提示的内容\n        // that.$Message.info(info);\n      };\n      // 字体\n      editor.customConfig.fontNames = [\"微软雅黑\", \"宋体\", \"黑体\", \"Arial\"];\n      // 表情面板可以有多个 tab ，因此要配置成一个数组。数组每个元素代表一个 tab 的配置\n      editor.customConfig.emotions = [\n        {\n          // tab 的标题\n          title: \"新浪\",\n          // type -> 'emoji' / 'image'\n          type: \"image\",\n          // content -> 数组\n          content: sina\n        }\n      ];\n      editor.create();\n      if (this.value) {\n        if (this.openXss) {\n          editor.txt.html(xss(this.value));\n        } else {\n          editor.txt.html(this.value);\n        }\n      }\n    },\n    editHTML() {\n      this.dataEdit = this.data;\n      this.showHTMLModal = true;\n    },\n    editHTMLOk() {\n      editor.txt.html(this.dataEdit);\n      this.$emit(\"input\", this.data);\n      this.$emit(\"on-change\", this.data);\n      this.showHTMLModal = false;\n    },\n    clear() {\n      this.$Modal.confirm({\n        title: \"确认清空\",\n        content: \"确认要清空编辑器内容？清空后不能撤回\",\n        onOk: () => {\n          this.data = \"\";\n          editor.txt.html(this.data);\n          this.$emit(\"input\", this.data);\n          this.$emit(\"on-change\", this.data);\n        }\n      });\n    },\n    setData(value) {\n      if (!editor) {\n        this.initEditor();\n      }\n      if (value && value != this.data) {\n        this.data = value;\n        editor.txt.html(this.data);\n        this.$emit(\"input\", this.data);\n        this.$emit(\"on-change\", this.data);\n      }\n    }\n  },\n  watch: {\n    value(val) {\n      this.setData(val);\n    }\n  },\n  mounted() {\n    this.initEditor();\n  }\n};\n</script>\n\n<style lang=\"less\">\n.e-menu {\n  z-index: 101;\n  position: absolute;\n  cursor: pointer;\n  color: #999;\n  :hover {\n    color: #333;\n  }\n}\n.e-code {\n  top: 4px;\n  left: 692px;\n}\n.e-preview {\n  top: 4px;\n  left: 726px;\n}\n.e-trash {\n  top: 6px;\n  left: 760px;\n}\n</style>\n\n"]}]}