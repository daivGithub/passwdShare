{"remainingRequest":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/src/views/regist.vue?vue&type=style&index=0&lang=less&","dependencies":[{"path":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/src/views/regist.vue","mtime":1579164402619},{"path":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/less-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCkBpbXBvcnQgIi4vcmVnaXN0Lmxlc3MiOwo="},{"version":3,"sources":["regist.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiPA","file":"regist.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"regist\">\n    <Row type=\"flex\" justify=\"center\" align=\"middle\" @keydown.enter.native=\"submitRegist\">\n      <Col style=\"width: 368px;\">\n        <Header />\n        <Row>\n          <Form ref=\"registForm\" :model=\"form\" :rules=\"rules\" class=\"form\">\n            <span class=\"regist-title\">注册</span>\n            <FormItem prop=\"username\">\n              <Input\n                v-model=\"form.username\"\n                :maxlength=\"30\"\n                size=\"large\"\n                clearable\n                placeholder=\"请输入用户名\"\n              />\n            </FormItem>\n            <FormItem prop=\"password\">\n              <SetPassword size=\"large\" v-model=\"form.password\" @on-change=\"changeInputPass\" />\n            </FormItem>\n            <FormItem prop=\"confirmPass\">\n              <Input\n                type=\"password\"\n                :maxlength=\"20\"\n                v-model=\"form.confirmPass\"\n                size=\"large\"\n                clearable\n                placeholder=\"请再次输入确认密码\"\n              />\n            </FormItem>\n            <FormItem prop=\"mobile\">\n              <Input v-model=\"form.mobile\" size=\"large\" clearable placeholder=\"请输入手机号\">\n                <Select v-model=\"select\" slot=\"prepend\" style=\"width: 70px\">\n                  <Option value=\"86\">+86</Option>\n                </Select>\n              </Input>\n            </FormItem>\n            <FormItem prop=\"code\" :error=\"errorCode\">\n              <Row type=\"flex\" justify=\"space-between\">\n                <Input\n                  v-model=\"form.code\"\n                  size=\"large\"\n                  clearable\n                  placeholder=\"请输入短信验证码\"\n                  :maxlength=\"10\"\n                  class=\"input-verify\"\n                />\n                <CountDownButton\n                  ref=\"countDown\"\n                  @on-click=\"checkVaptcha\"\n                  :autoCountDown=\"false\"\n                  size=\"large\"\n                  :loading=\"sending\"\n                  :text=\"getSms\"\n                />\n              </Row>\n            </FormItem>\n          </Form>\n          <Row type=\"flex\" justify=\"space-between\">\n            <Button\n              class=\"regist-btn\"\n              type=\"primary\"\n              size=\"large\"\n              :loading=\"loading\"\n              @click=\"submitRegist\"\n            >\n              <span v-if=\"!loading\">注册</span>\n              <span v-else>注册中...</span>\n            </Button>\n            <router-link to=\"/login\">\n              <a class=\"to-login\">使用已有账号登录</a>\n            </router-link>\n          </Row>\n        </Row>\n        <Footer />\n      </Col>\n      <LangSwitch />\n    </Row>\n  </div>\n</template>\n\n<script>\nimport { vaptchaID, regist, sendRegistSms } from \"@/api/index\";\nimport { validateMobile, validatePassword } from \"@/libs/validate\";\nimport Header from \"@/views/main-components/header\";\nimport Footer from \"@/views/main-components/footer\";\nimport LangSwitch from \"@/views/main-components/lang-switch\";\nimport CountDownButton from \"@/views/my-components/share/count-down-button\";\nimport SetPassword from \"@/views/my-components/share/set-password\";\nvar vaptchaObject;\nexport default {\n  components: {\n    CountDownButton,\n    LangSwitch,\n    SetPassword,\n    Header,\n    Footer\n  },\n  data() {\n    const validateConfirmPass = (rule, value, callback) => {\n      if (value.length < 6) {\n        callback(new Error(\"密码长度不得小于6位\"));\n      } else if (value !== this.form.password) {\n        callback(new Error(\"两次输入的密码不一致\"));\n      } else {\n        callback();\n      }\n    };\n    return {\n      getSms: \"获取验证码\",\n      error: false,\n      loading: false,\n      sending: false,\n      select: \"86\",\n      errorCode: \"\",\n      form: {\n        username: \"\",\n        password: \"\",\n        confirmPass: \"\",\n        mobile: \"\",\n        code: \"\"\n      },\n      rules: {\n        username: [\n          {\n            required: true,\n            message: \"账号不能为空\",\n            trigger: \"blur\"\n          }\n        ],\n        password: [\n          {\n            required: true,\n            message: \"密码不能为空\",\n            trigger: \"blur\"\n          },\n          {\n            validator: validatePassword,\n            trigger: \"blur\"\n          }\n        ],\n        confirmPass: [\n          {\n            required: true,\n            message: \"确认密码不能为空\",\n            trigger: \"blur\"\n          },\n          {\n            validator: validateConfirmPass,\n            trigger: \"blur\"\n          }\n        ],\n        mobile: [\n          {\n            required: true,\n            message: \"手机号不能为空\",\n            trigger: \"blur\"\n          },\n          {\n            validator: validateMobile,\n            trigger: \"blur\"\n          }\n        ]\n      }\n    };\n  },\n  methods: {\n    initVaptcha() {\n      let that = this;\n      vaptcha({\n        //配置参数\n        vid: vaptchaID, // 验证单元id\n        type: \"invisible\", // 展现类型 隐藏式\n        offline_server: \"你的离线验证接口地址 可选但此处不能为空\"\n      }).then(function(vaptchaObj) {\n        vaptchaObject = vaptchaObj;\n        vaptchaObj.listen(\"pass\", function() {\n          that.form.token = vaptchaObj.getToken();\n          // 验证成功 发送验证码\n          that.sendSmsCode();\n        });\n      });\n    },\n    checkVaptcha() {\n      this.$refs.registForm.validate(valid => {\n        if (valid) {\n          vaptchaObject.validate(); // 若没验证验证码 开始验证\n        }\n      });\n    },\n    sendSmsCode() {\n      this.sending = true;\n      this.getSms = \"发送中\";\n      sendRegistSms(this.form.mobile, this.form).then(res => {\n        this.getSms = \"获取验证码\";\n        this.sending = false;\n        if (res.success) {\n          this.$Message.success(\"发送短信验证码成功\");\n          // 开始倒计时\n          this.$refs.countDown.startCountDown();\n        }\n      });\n    },\n    changeInputPass(v, grade, strength) {\n      this.form.passStrength = strength;\n    },\n    submitRegist() {\n      this.$refs.registForm.validate(valid => {\n        if (valid) {\n          if (!this.form.code) {\n            this.errorCode = \"验证码不能为空\";\n            return;\n          } else {\n            this.errorCode = \"\";\n          }\n          this.loading = true;\n          regist(this.form).then(res => {\n            this.loading = false;\n            if (res.success) {\n              let query = {\n                username: this.form.username\n              };\n              this.$router.push({\n                name: \"regist-result\",\n                query: query\n              });\n            } else {\n              vaptchaObject.reset();\n            }\n          });\n        }\n      });\n    }\n  },\n  mounted() {\n    this.initVaptcha();\n  }\n};\n</script>\n\n<style lang=\"less\">\n@import \"./regist.less\";\n</style>\n"]}]}