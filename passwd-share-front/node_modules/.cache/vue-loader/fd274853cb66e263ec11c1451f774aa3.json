{"remainingRequest":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/src/views/share-vue-template/tree&table/tree&table.vue?vue&type=style&index=0&lang=less&","dependencies":[{"path":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/src/views/share-vue-template/tree&table/tree&table.vue","mtime":1579165050570},{"path":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/less-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CkBpbXBvcnQgIi4uLy4uLy4uL3N0eWxlcy90cmVlJnRhYmxlLWNvbW1vbi5sZXNzIjsK"},{"version":3,"sources":["tree&table.vue"],"names":[],"mappings":";AACA","file":"tree&table.vue","sourceRoot":"src/views/share-vue-template/tree&table","sourcesContent":["<style lang=\"less\">\n@import \"../../../styles/tree&table-common.less\";\n</style>\n<template>\n  <div class=\"search\">\n    <Card>\n      <Row type=\"flex\" justify=\"space-between\">\n        <Col v-if=\"expand\" span=\"5\">\n          <Alert show-icon>\n            当前选择：\n            <span class=\"select-title\">{{editTitle}}</span>\n            <a class=\"select-clear\" v-if=\"editTitle\" @click=\"cancelEdit\">取消选择</a>\n          </Alert>\n          <Input\n            v-model=\"searchKey\"\n            suffix=\"ios-search\"\n            @on-change=\"search\"\n            placeholder=\"输入节点名搜索\"\n            clearable\n          />\n          <div class=\"tree-bar\" :style=\"{maxHeight: maxHeight}\">\n            <Tree ref=\"tree\" :data=\"treeData\" :load-data=\"loadData\" @on-select-change=\"selectTree\"></Tree>\n            <Spin size=\"large\" fix v-if=\"treeLoading\"></Spin>\n          </div>\n        </Col>\n        <div class=\"expand\">\n          <Icon :type=\"expandIcon\" size=\"16\" class=\"icon\" @click=\"changeExpand\"/>\n        </div>\n        <Col :span=\"span\">\n          <Row>\n            <Form ref=\"searchForm\" :model=\"searchForm\" inline :label-width=\"50\">\n              <Form-item label=\"名称\" prop=\"name\">\n                <Input\n                  type=\"text\"\n                  v-model=\"searchForm.name\"\n                  placeholder=\"请输入\"\n                  clearable\n                  style=\"width: 200px\"\n                />\n              </Form-item>\n              <Form-item label=\"状态\" prop=\"status\">\n                <Select\n                  v-model=\"searchForm.status\"\n                  placeholder=\"请选择\"\n                  clearable\n                  style=\"width: 200px\"\n                >\n                  <Option value=\"0\">正常</Option>\n                  <Option value=\"-1\">禁用</Option>\n                </Select>\n              </Form-item>\n              <Form-item style=\"margin-left:-35px;\" class=\"br\">\n                <Button @click=\"handleSearch\" type=\"primary\" icon=\"ios-search\">搜索</Button>\n                <Button @click=\"handleReset\">重置</Button>\n              </Form-item>\n            </Form>\n          </Row>\n          <Row class=\"operation\">\n            <Button @click=\"add\" type=\"primary\" icon=\"md-add\">添加</Button>\n            <Button @click=\"delAll\" icon=\"md-trash\">批量删除</Button>\n            <Button @click=\"getDataList\" icon=\"md-refresh\">刷新</Button>\n          </Row>\n          <Row>\n            <Alert show-icon>\n              已选择\n              <span class=\"select-count\">{{selectCount}}</span> 项\n              <a class=\"select-clear\" @click=\"clearSelectAll\">清空</a>\n            </Alert>\n          </Row>\n          <Row>\n            <Table\n              :loading=\"loading\"\n              border\n              :columns=\"columns\"\n              :data=\"data\"\n              sortable=\"custom\"\n              @on-sort-change=\"changeSort\"\n              @on-selection-change=\"showSelect\"\n              ref=\"table\"\n            ></Table>\n          </Row>\n          <Row type=\"flex\" justify=\"end\" class=\"page\">\n            <Page\n              :current=\"searchForm.pageNumber\"\n              :total=\"total\"\n              :page-size=\"searchForm.pageSize\"\n              @on-change=\"changePage\"\n              @on-page-size-change=\"changePageSize\"\n              :page-size-opts=\"[10,20,50]\"\n              size=\"small\"\n              show-total\n              show-elevator\n              show-sizer\n            ></Page>\n          </Row>\n        </Col>\n      </Row>\n    </Card>\n\n    <Modal\n      :title=\"modalTitle\"\n      v-model=\"modalVisible\"\n      :mask-closable=\"false\"\n      :width=\"500\"\n      :styles=\"{top: '30px'}\"\n    >\n      <Form ref=\"form\" :model=\"form\" :label-width=\"70\" :rules=\"formValidate\">\n        <FormItem label=\"名称\" prop=\"name\">\n          <Input v-model=\"form.name\"/>\n        </FormItem>\n      </Form>\n      <div slot=\"footer\">\n        <Button type=\"text\" @click=\"modalVisible=false\">取消</Button>\n        <Button type=\"primary\" :loading=\"submitLoading\" @click=\"handelSubmit\">提交</Button>\n      </div>\n    </Modal>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"treeAndTable\",\n  data() {\n    return {\n      treeLoading: false, // 树加载状态\n      maxHeight: \"500px\",\n      loading: false, // 表加载状态\n      editTitle: \"\", // 编辑节点名称\n      searchKey: \"\", // 搜索树\n      expand: true,\n      span: 18,\n      expandIcon: \"ios-arrow-back\",\n      selectNode: {},\n      treeData: [], // 树数据\n      selectCount: 0, // 多选计数\n      selectList: [], // 多选数据\n      searchForm: {\n        // 搜索框对应data对象\n        name: \"\",\n        status: \"\",\n        pageNumber: 1, // 当前页数\n        pageSize: 10, // 页面大小\n        sort: \"createTime\", // 默认排序字段\n        order: \"desc\" // 默认排序方式\n      },\n      modalType: 0, // 添加或编辑标识\n      modalVisible: false, // 添加或编辑显示\n      modalTitle: \"\", // 添加或编辑标题\n      form: {\n        // 添加或编辑表单对象初始化数据\n        name: \"\",\n        sex: 1,\n        type: 0\n      },\n      formValidate: {\n        // 表单验证规则\n        name: [{ required: true, message: \"不能为空\", trigger: \"blur\" }]\n      },\n      columns: [\n        // 表头\n        {\n          type: \"selection\",\n          width: 60,\n          align: \"center\",\n          fixed: \"left\"\n        },\n        {\n          type: \"index\",\n          width: 60,\n          align: \"center\",\n          fixed: \"left\"\n        },\n        {\n          title: \"名称\",\n          key: \"name\",\n          minWidth: 150,\n          sortable: true,\n          fixed: \"left\"\n        },\n        {\n          title: \"描述\",\n          key: \"description\",\n          width: 200,\n          sortable: true\n        },\n        {\n          title: \"状态\",\n          key: \"status\",\n          align: \"center\",\n          width: 150,\n          render: (h, params) => {\n            let re = \"\";\n            if (params.row.status == 0) {\n              return h(\"div\", [\n                h(\"Badge\", {\n                  props: {\n                    status: \"success\",\n                    text: \"正常启用\"\n                  }\n                })\n              ]);\n            } else if (params.row.status == -1) {\n              return h(\"div\", [\n                h(\"Badge\", {\n                  props: {\n                    status: \"error\",\n                    text: \"禁用\"\n                  }\n                })\n              ]);\n            }\n          }\n        },\n        {\n          title: \"创建时间\",\n          key: \"createTime\",\n          width: 200,\n          sortable: true,\n          sortType: \"desc\"\n        },\n        {\n          title: \"操作\",\n          key: \"action\",\n          width: 200,\n          align: \"center\",\n          fixed: \"right\",\n          render: (h, params) => {\n            return h(\"div\", [\n              h(\n                \"Button\",\n                {\n                  props: {\n                    type: \"primary\",\n                    size: \"small\"\n                  },\n                  style: {\n                    marginRight: \"5px\"\n                  },\n                  on: {\n                    click: () => {\n                      this.edit(params.row);\n                    }\n                  }\n                },\n                \"编辑\"\n              ),\n              h(\n                \"Button\",\n                {\n                  props: {\n                    type: \"error\",\n                    size: \"small\"\n                  },\n                  on: {\n                    click: () => {\n                      this.remove(params.row);\n                    }\n                  }\n                },\n                \"删除\"\n              )\n            ]);\n          }\n        }\n      ],\n      submitLoading: false, // 添加或编辑提交状态\n      data: [], //表单数据\n      total: 0 // 表单数据总数\n    };\n  },\n  methods: {\n    init() {\n      // 初始化一级节点\n      this.getParentList();\n      // 获取表单数据\n      this.getDataList();\n    },\n    getParentList() {\n      // this.treeLoading = true;\n      // this.getRequest(\"一级数据请求路径，如/tree/getByParentId/0\").then(res => {\n      //   this.treeLoading = false;\n      //   if (res.success) {\n      //     res.result.forEach(function(e) {\n      //       if (e.isParent) {\n      //         e.loading = false;\n      //         e.children = [];\n      //       }\n      //     });\n      //     this.treeData = res.result;\n      //   }\n      // });\n      // 模拟请求成功\n      this.treeData = [\n        {\n          title: \"一级1\",\n          id: \"1\",\n          parentId: \"0\",\n          parentTitle: \"一级节点\",\n          status: 0,\n          loading: false,\n          children: [\n            {\n              title: \"二级1\",\n              id: \"2\",\n              parentId: \"1\",\n              status: 0,\n              parentTitle: \"一级1\"\n            }\n          ]\n        },\n        {\n          title: \"一级2\",\n          id: \"3\",\n          parentId: \"0\",\n          parentTitle: \"一级节点\",\n          status: 0\n        }\n      ];\n    },\n    loadData(item, callback) {\n      // 异步加载树子节点数据\n      // this.getRequest(\"请求路径，如/tree/getByParentId/\" + item.id).then(res => {\n      //   if (res.success) {\n      //     res.result.forEach(function(e) {\n      //       if (e.isParent) {\n      //         e.loading = false;\n      //         e.children = [];\n      //       }\n      //     });\n      //     callback(res.result);\n      //   }\n      // });\n    },\n    search() {\n      // 搜索树\n      if (this.searchKey) {\n        // 模拟请求\n        // this.treeLoading = true;\n        // this.getRequest(\"搜索请求路径\", { title: this.searchKey }).then(res => {\n        //   this.treeLoading = false;\n        //   if (res.success) {\n        //     this.treeData = res.result;\n        //   }\n        // });\n        // 模拟请求成功\n        this.treeData = [\n          {\n            title: \"这里需要请求后台接口\",\n            id: \"1\",\n            parentId: \"0\",\n            parentTitle: \"一级节点\",\n            status: 0\n          },\n          {\n            title: \"所以这里是假数据\",\n            id: \"4\",\n            parentId: \"0\",\n            parentTitle: \"一级节点\",\n            status: 0\n          },\n          {\n            title: \"我是被禁用的节点\",\n            id: \"5\",\n            parentId: \"0\",\n            parentTitle: \"一级节点\",\n            status: -1\n          }\n        ];\n      } else {\n        // 为空重新加载\n        this.getParentList();\n      }\n    },\n    selectTree(v) {\n      if (v.length > 0) {\n        // 转换null为\"\"\n        for (let attr in v[0]) {\n          if (v[0][attr] == null) {\n            v[0][attr] = \"\";\n          }\n        }\n        let str = JSON.stringify(v[0]);\n        let data = JSON.parse(str);\n        this.selectNode = data;\n        this.editTitle = data.title;\n        // 重新加载表\n        this.getDataList();\n      } else {\n        this.cancelEdit();\n      }\n    },\n    cancelEdit() {\n      let data = this.$refs.tree.getSelectedNodes()[0];\n      if (data) {\n        data.selected = false;\n      }\n      // 取消选择后获取全部数据\n      this.selectNode = {};\n      this.editTitle = \"\";\n      this.getDataList();\n    },\n    changeSelect(v) {\n      this.selectCount = v.length;\n      this.selectList = v;\n    },\n    changeExpand() {\n      this.expand = !this.expand;\n      if (this.expand) {\n        this.expandIcon = \"ios-arrow-back\";\n        this.span = 18;\n      } else {\n        this.expandIcon = \"ios-arrow-forward\";\n        this.span = 23;\n      }\n    },\n    changePage(v) {\n      this.searchForm.pageNumber = v;\n      this.getDataList();\n      this.clearSelectAll();\n    },\n    changePageSize(v) {\n      this.searchForm.pageSize = v;\n      this.getDataList();\n    },\n    getDataList() {\n      this.loading = true;\n      // 根据用户选择树加载表数据\n      this.searchForm.selectId = this.selectNode.id;\n      // 带多条件搜索参数获取表单数据 请自行修改接口\n      // this.getRequest(\"请求路径\", this.searchForm).then(res => {\n      //   this.loading = false;\n      //   if (res.success) {\n      //     this.data = res.result.content;\n      //     this.total = res.result.totalElements;\n      //   }\n      // });\n      // 模拟表格变化 模拟数据\n      if (!this.selectNode.id) {\n        // id为null获取全部数据\n        this.data = [\n          {\n            id: \"1\",\n            name: \"XBoot\",\n            description: \"我是一级1的数据\",\n            status: 0,\n            createTime: \"2018-08-08 00:08:00\"\n          },\n          {\n            id: \"2\",\n            name: \"Daiv\",\n            description: \"我是二级1的数据\",\n            status: 0,\n            createTime: \"2018-08-08 00:08:00\"\n          },\n          {\n            id: \"3\",\n            name: \"XBoot\",\n            description: \"我是一级2的数据\",\n            status: -1,\n            createTime: \"2018-08-08 00:08:00\"\n          }\n        ];\n      } else if (this.selectNode.id == \"1\") {\n        this.data = [\n          {\n            id: \"1\",\n            name: \"XBoot\",\n            description: \"我是一级1的数据\",\n            status: 0,\n            createTime: \"2018-08-08 00:08:00\"\n          }\n        ];\n      } else if (this.selectNode.id == \"2\") {\n        this.data = [\n          {\n            id: \"2\",\n            name: \"Daiv\",\n            description: \"我是二级1的数据\",\n            status: 0,\n            createTime: \"2018-08-08 00:08:00\"\n          }\n        ];\n      } else if (this.selectNode.id == \"3\") {\n        this.data = [\n          {\n            id: \"3\",\n            name: \"Present By Daiv\",\n            description: \"我是一级2的数据\",\n            status: -1,\n            createTime: \"2018-08-08 00:08:00\"\n          }\n        ];\n      }\n      this.total = this.data.length;\n      this.loading = false;\n    },\n    handleSearch() {\n      this.searchForm.pageNumber = 1;\n      this.searchForm.pageSize = 10;\n      this.getDataList();\n    },\n    handleReset() {\n      this.$refs.searchForm.resetFields();\n      this.searchForm.pageNumber = 1;\n      this.searchForm.pageSize = 10;\n      // 重新加载数据\n      this.getDataList();\n    },\n    changeSort(e) {\n      this.searchForm.sort = e.key;\n      this.searchForm.order = e.order;\n      if (e.order == \"normal\") {\n        this.searchForm.order = \"\";\n      }\n      this.getDataList();\n    },\n    showSelect(e) {\n      this.selectList = e;\n      this.selectCount = e.length;\n    },\n    clearSelectAll() {\n      this.$refs.table.selectAll(false);\n    },\n    add() {\n      this.modalType = 0;\n      this.modalTitle = \"添加\";\n      this.$refs.form.resetFields();\n      this.modalVisible = true;\n    },\n    edit(v) {\n      this.modalType = 1;\n      this.modalTitle = \"编辑\";\n      this.$refs.form.resetFields();\n      // 转换null为\"\"\n      for (let attr in v) {\n        if (v[attr] == null) {\n          v[attr] = \"\";\n        }\n      }\n      let str = JSON.stringify(v);\n      let data = JSON.parse(str);\n      this.form = data;\n      this.modalVisible = true;\n    },\n    handelSubmit() {\n      this.$refs.form.validate(valid => {\n        if (valid) {\n          this.submitLoading = true;\n          if (this.modalType == 0) {\n            // 添加 避免编辑后传入id等数据 记得删除\n            delete this.form.id;\n            delete this.form.status;\n            // this.postRequest(\"请求路径\", this.form).then(res => {\n            //   this.submitLoading = false;\n            //   if (res.success) {\n            //     this.$Message.success(\"操作成功\");\n            //     this.getDataList();\n            //     this.modalVisible = false;\n            //   }\n            // });\n            // 模拟成功\n            this.submitLoading = false;\n            this.$Message.success(\"操作成功\");\n            this.modalVisible = false;\n          } else if (this.modalType == 1) {\n            // 编辑\n            // this.postRequest(\"请求路径\", this.form).then(res => {\n            //   this.submitLoading = false;\n            //   if (res.success) {\n            //     this.$Message.success(\"操作成功\");\n            //     this.getDataList();\n            //     this.modalVisible = false;\n            //   }\n            // });\n            // 模拟成功\n            this.submitLoading = false;\n            this.$Message.success(\"操作成功\");\n            this.modalVisible = false;\n          }\n        }\n      });\n    },\n    remove(v) {\n      this.$Modal.confirm({\n        title: \"确认删除\",\n        // 记得确认修改此处\n        content: \"您确认要删除 \" + v.name + \" ?\",\n        loading: true,\n        onOk: () => {\n          // 删除\n          // this.deleteRequest(\"请求地址，如/deleteByIds/\" + v.id).then(res => {\n          //   this.$Modal.remove();\n          //   if (res.success) {\n          //     this.$Message.success(\"操作成功\");\n          //     this.getDataList();\n          //   }\n          // });\n          // 模拟请求成功\n          this.$Message.success(\"操作成功\");\n          this.$Modal.remove();\n          this.getDataList();\n        }\n      });\n    },\n    delAll() {\n      if (this.selectCount <= 0) {\n        this.$Message.warning(\"您还未选择要删除的数据\");\n        return;\n      }\n      this.$Modal.confirm({\n        title: \"确认删除\",\n        content: \"您确认要删除所选的 \" + this.selectCount + \" 条数据?\",\n        loading: true,\n        onOk: () => {\n          let ids = \"\";\n          this.selectList.forEach(function(e) {\n            ids += e.id + \",\";\n          });\n          ids = ids.substring(0, ids.length - 1);\n          // 批量删除\n          // this.deleteRequest(\"请求地址，如/deleteByIds/\" + ids).then(res => {\n          //   this.$Modal.remove();\n          //   if (res.success) {\n          //     this.$Message.success(\"操作成功\");\n          //     this.clearSelectAll();\n          //     this.getDataList();\n          //   }\n          // });\n          // 模拟请求成功\n          this.$Message.success(\"操作成功\");\n          this.$Modal.remove();\n          this.clearSelectAll();\n          this.getDataList();\n        }\n      });\n    }\n  },\n  mounted() {\n    // 计算高度\n    let height = document.documentElement.clientHeight;\n    this.maxHeight = Number(height - 287) + \"px\";\n    this.init();\n  }\n};\n</script>\n"]}]}