{"remainingRequest":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/src/views/share-vue-generator/treeGenerator.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/src/views/share-vue-generator/treeGenerator.vue","mtime":1579164167560},{"path":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["treeGenerator.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"treeGenerator.vue","sourceRoot":"src/views/share-vue-generator","sourcesContent":["<style lang=\"less\">\n@import \"../../styles/tree&table-common.less\";\n.search {\n  .preview {\n    font-weight: 600;\n    color: #40a9ff;\n    cursor: pointer;\n  }\n}\n</style>\n<template>\n  <div class=\"search\">\n    <Card>\n      <Row class=\"operation\">\n        <span>组件名：</span>\n        <Input v-model=\"vueName\" clearable style=\"width:150px;margin-right:10px\" />\n        <span>表单显示：</span>\n        <Select v-model=\"rowNum\" style=\"width:150px;margin-right:10px\">\n          <Option value=\"1\">一行一列</Option>\n          <Option value=\"2\">一行两列</Option>\n          <Option value=\"3\">一行三列</Option>\n          <Option value=\"4\">一行四列</Option>\n        </Select>\n        <Button @click=\"add\" type=\"primary\" icon=\"md-add\">添加字段</Button>\n        <Button @click=\"entityModal=true\" type=\"warning\" icon=\"md-barcode\">根据实体类配置</Button>\n        <Button @click=\"generate\" :loading=\"loading\" type=\"success\" icon=\"md-send\">生成代码</Button>\n        <Button @click=\"clear\" icon=\"md-trash\">清空全部</Button>\n      </Row>\n      <Row>\n        <Alert show-icon>\n          提示：将生成的代码复制粘贴至XBoot前端新建的空白组件中，再做少许修改并自行调通接口即可\n          <span @click=\"preview\" class=\"preview\">树形结构预览</span>\n        </Alert>\n        <Alert show-icon type=\"warning\">注意：以下字段无需填入，将自动生成：title、parentId、sortOrder、parentTitle</Alert>\n      </Row>\n      <Row>\n        <Table border :columns=\"columns\" :data=\"data\" ref=\"table\">\n          <template slot-scope=\"{ row }\" slot=\"field\">\n            <Input v-model=\"row.field\" @on-blur=\"changeField(row, $event)\" />\n          </template>\n          <template slot-scope=\"{ row }\" slot=\"name\">\n            <Input v-model=\"row.name\" @on-blur=\"changeName(row, $event)\" />\n          </template>\n          <template slot-scope=\"{ row }\" slot=\"editable\">\n            <i-switch v-model=\"row.editable\" @on-change=\"changeEditable(row, $event)\">\n              <span slot=\"open\">开</span>\n              <span slot=\"close\">关</span>\n            </i-switch>\n          </template>\n          <template slot-scope=\"{ row }\" slot=\"type\">\n            <Select\n              v-model=\"row.type\"\n              :disabled=\"!row.editable\"\n              @on-change=\"changeType(row, $event)\"\n              transfer\n            >\n              <Option value=\"text\">文本输入框</Option>\n              <Option value=\"select\">选择下拉框</Option>\n              <Option value=\"number\">数字输入框</Option>\n              <Option value=\"daterange\">日期范围选择器</Option>\n              <Option value=\"upload\">XBoot图片上传组件</Option>\n              <Option value=\"switch\">Switch开关</Option>\n              <Option value=\"radio\">Radio单选框</Option>\n              <Option value=\"date\">日期选择器</Option>\n              <Option value=\"time\">时间选择器</Option>\n              <Option value=\"area\">省市县级联</Option>\n              <Option value=\"slider\">Slider滑块</Option>\n            </Select>\n          </template>\n          <template slot-scope=\"{ row }\" slot=\"validate\">\n            <i-switch\n              v-model=\"row.validate\"\n              @on-change=\"changeValidate(row, $event)\"\n              :disabled=\"!row.editable\"\n            >\n              <span slot=\"open\">开</span>\n              <span slot=\"close\">关</span>\n            </i-switch>\n          </template>\n          <template slot-scope=\"{ row }\" slot=\"action\">\n            <Button size=\"small\" style=\"margin-right: 5px\" @click=\"edit(row)\">编辑</Button>\n            <Button type=\"error\" size=\"small\" @click=\"remove(row)\">删除</Button>\n          </template>\n        </Table>\n      </Row>\n    </Card>\n\n    <Modal :title=\"modalTitle\" v-model=\"modalVisible\" :mask-closable=\"false\" :width=\"500\">\n      <Form ref=\"form\" :model=\"form\" :label-width=\"100\" :rules=\"formValidate\">\n        <FormItem label=\"排序值\" prop=\"sortOrder\">\n          <InputNumber v-model=\"form.sortOrder\"></InputNumber>\n        </FormItem>\n        <FormItem label=\"字段英文名\" prop=\"field\" class=\"block-tool\">\n          <Tooltip placement=\"right\" content=\"与后台实体字段匹配\">\n            <Input v-model=\"form.field\" />\n          </Tooltip>\n        </FormItem>\n        <FormItem label=\"名称\" prop=\"name\">\n          <Input v-model=\"form.name\" />\n        </FormItem>\n        <FormItem label=\"可添加编辑\" prop=\"editable\">\n          <i-switch v-model=\"form.editable\">\n            <span slot=\"open\">开</span>\n            <span slot=\"close\">关</span>\n          </i-switch>\n        </FormItem>\n        <FormItem label=\"字段表单类型\" prop=\"type\" v-show=\"form.editable\">\n          <Select v-model=\"form.type\">\n            <Option value=\"text\">文本输入框</Option>\n            <Option value=\"select\">选择下拉框</Option>\n            <Option value=\"number\">数字输入框</Option>\n            <Option value=\"daterange\">日期范围选择器</Option>\n            <Option value=\"upload\">XBoot图片上传组件</Option>\n            <Option value=\"switch\">Switch开关</Option>\n            <Option value=\"radio\">Radio单选框</Option>\n            <Option value=\"date\">日期选择器</Option>\n            <Option value=\"time\">时间选择器</Option>\n            <Option value=\"area\">省市县级联</Option>\n            <Option value=\"slider\">Slider滑块</Option>\n          </Select>\n        </FormItem>\n        <FormItem label=\"显示级别\" prop=\"level\" v-show=\"form.type=='area'\">\n          <Select v-model=\"form.level\">\n            <Option value=\"0\">仅显示省</Option>\n            <Option value=\"1\">显示省和县</Option>\n            <Option value=\"2\">显示省市县</Option>\n            <Option value=\"3\">显示省市县街道</Option>\n          </Select>\n        </FormItem>\n        <FormItem label=\"表单非空验证\" prop=\"validate\" v-show=\"form.editable\">\n          <i-switch v-model=\"form.validate\">\n            <span slot=\"open\">开</span>\n            <span slot=\"close\">关</span>\n          </i-switch>\n        </FormItem>\n      </Form>\n      <div slot=\"footer\">\n        <Button type=\"text\" @click=\"modalVisible=false\">取消</Button>\n        <Button type=\"primary\" @click=\"handleSubmit\">提交</Button>\n      </div>\n    </Modal>\n    <Modal title=\"生成代码\" v-model=\"codeModal\" :width=\"900\" :fullscreen=\"full\">\n      <Input\n        v-if=\"!full\"\n        v-model=\"code\"\n        type=\"textarea\"\n        autosize\n        style=\"max-height:60vh;overflow:auto;\"\n      />\n      <Input v-if=\"full\" v-model=\"code\" :rows=\"32\" type=\"textarea\" />\n      <div slot=\"footer\">\n        <Button @click=\"full=!full\" icon=\"md-expand\">全屏开/关</Button>\n        <Button\n          v-clipboard:copy=\"code\"\n          v-clipboard:success=\"onCopy\"\n          v-clipboard:error=\"onError\"\n          type=\"primary\"\n          icon=\"md-copy\"\n        >复制代码</Button>\n      </div>\n    </Modal>\n    <Modal title=\"根据实体类配置\" v-model=\"entityModal\" :width=\"700\" :fullscreen=\"fullEntity\">\n      <Alert show-icon>说明：输入实体类的引用路径，将自动读取其字段生成所需JSON配置数据，免去手动配置添加字段</Alert>\n      <Form ref=\"entityForm\" :model=\"entityForm\" :label-width=\"130\" :rules=\"entityFormValidate\">\n        <FormItem label=\"实体类引用路径\" prop=\"path\">\n          <Row type=\"flex\" justify=\"space-between\">\n            <Input\n              v-model=\"entityForm.path\"\n              placeholder=\"例如：User\"\n              clearable\n              style=\"width:410px\"\n            />\n            <Button type=\"warning\" icon=\"md-play\" @click=\"generateEntityData\">读取字段</Button>\n          </Row>\n        </FormItem>\n      </Form>\n      <Input\n        v-if=\"!fullEntity\"\n        v-model=\"entityData\"\n        type=\"textarea\"\n        autosize\n        style=\"max-height:50vh;overflow:auto;\"\n        placeholder=\"生成结果\"\n      />\n      <Input v-if=\"fullEntity\" v-model=\"entityData\" :rows=\"32\" type=\"textarea\" />\n      <div slot=\"footer\">\n        <Button @click=\"fullEntity=!fullEntity\" icon=\"md-expand\">全屏开/关</Button>\n        <Button type=\"primary\" icon=\"md-checkmark-circle-outline\" @click=\"submitEntityData\">确认更新字段值</Button>\n      </div>\n    </Modal>\n  </div>\n</template>\n\n<script>\nimport { generateTree, getEntityData } from \"@/api/index\";\nexport default {\n  name: \"tree-generator\",\n  data() {\n    return {\n      entityModal: false,\n      fullEntity: false,\n      entityData: \"\",\n      entityForm: {\n        path: \"\"\n      },\n      loading: false,\n      code: \"\",\n      vueName: \"\",\n      rowNum: \"1\",\n      full: false,\n      codeModal: false,\n      modalVisible: false,\n      modalType: 0,\n      modalTitle: \"\",\n      form: {\n        sortOrder: 0,\n        field: \"\",\n        name: \"\",\n        level: \"2\",\n        editable: true,\n        type: \"text\",\n        validate: true\n      },\n      formValidate: {\n        field: [{ required: true, message: \"不能为空\", trigger: \"blur\" }],\n        name: [{ required: true, message: \"不能为空\", trigger: \"blur\" }]\n      },\n      entityFormValidate: {\n        path: [{ required: true, message: \"不能为空\", trigger: \"blur\" }]\n      },\n      columns: [\n        // 表头\n        {\n          title: \"排序\",\n          key: \"sortOrder\",\n          sortType: \"asc\",\n          sortable: true,\n          align: \"center\",\n          minWidth: 80\n        },\n        {\n          title: \"字段英文名\",\n          slot: \"field\",\n          minWidth: 150\n        },\n        {\n          title: \"名称\",\n          slot: \"name\",\n          minWidth: 150\n        },\n        {\n          title: \"可添加编辑\",\n          slot: \"editable\",\n          minWidth: 100\n        },\n        {\n          title: \"表单类型\",\n          slot: \"type\",\n          minWidth: 200\n        },\n        {\n          title: \"表单非空验证\",\n          slot: \"validate\",\n          minWidth: 110\n        },\n        {\n          title: \"操作\",\n          slot: \"action\",\n          align: \"center\",\n          minWidth: 130\n        }\n      ],\n      data: []\n    };\n  },\n  methods: {\n    init() {\n      // 取缓存数据\n      let data = this.getStore(\"treeData\");\n      let vueName = this.getStore(\"treeVueName\");\n      let rowNum = this.getStore(\"treeRowNum\");\n      if (data && data != \"undefined\") {\n        this.data = JSON.parse(data);\n      }\n      if (vueName && vueName != \"undefined\") {\n        this.vueName = vueName;\n      }\n    },\n    generateEntityData() {\n      this.$refs.entityForm.validate(valid => {\n        if (valid) {\n          getEntityData(this.entityForm.path).then(res => {\n            if (res.success) {\n              this.entityData = res.result;\n            }\n          });\n        }\n      });\n    },\n    submitEntityData() {\n      if (!this.entityData) {\n        this.$Message.warning(\"请先输入实体类引用路径生成JSON数据\");\n        return;\n      }\n      try {\n        let data = JSON.parse(this.entityData);\n        this.data = data.data;\n        this.entityModal = false;\n      } catch (e) {\n        this.$Message.error(\"请确保JSON数据格式正确\");\n      }\n    },\n    preview() {\n      this.$router.push({\n        name: \"tree\"\n      });\n    },\n    changeField(row, v) {\n      for (let attr in row) {\n        if (row[attr] == null) {\n          row[attr] = \"\";\n        }\n      }\n      let str = JSON.stringify(row);\n      let data = JSON.parse(str);\n      data.field = v.target.value;\n      this.data.splice(row._index, 1, data);\n      this.save();\n    },\n    changeName(row, v) {\n      for (let attr in row) {\n        if (row[attr] == null) {\n          row[attr] = \"\";\n        }\n      }\n      let str = JSON.stringify(row);\n      let data = JSON.parse(str);\n      data.name = v.target.value;\n      this.data.splice(row._index, 1, data);\n      this.save();\n    },\n    changeType(row, v) {\n      for (let attr in row) {\n        if (row[attr] == null) {\n          row[attr] = \"\";\n        }\n      }\n      let str = JSON.stringify(row);\n      let data = JSON.parse(str);\n      data.type = v;\n      this.data.splice(row._index, 1, data);\n      this.save();\n    },\n    changeEditable(row, v) {\n      for (let attr in row) {\n        if (row[attr] == null) {\n          row[attr] = \"\";\n        }\n      }\n      let str = JSON.stringify(row);\n      let data = JSON.parse(str);\n      data.editable = v;\n      this.data.splice(row._index, 1, data);\n      this.save();\n    },\n    changeValidate(row, v) {\n      for (let attr in row) {\n        if (row[attr] == null) {\n          row[attr] = \"\";\n        }\n      }\n      let str = JSON.stringify(row);\n      let data = JSON.parse(str);\n      data.validate = v;\n      this.data.splice(row._index, 1, data);\n      this.save();\n    },\n    handleSubmit() {\n      this.$refs.form.validate(valid => {\n        if (valid) {\n          // 转换null为\"\"\n          let v = this.form;\n          for (let attr in v) {\n            if (v[attr] == null) {\n              v[attr] = \"\";\n            }\n          }\n          let str = JSON.stringify(v);\n          let data = JSON.parse(str);\n          if (this.modalType == 0) {\n            this.data.push(data);\n            this.data = this.data;\n          } else {\n            this.data.splice(v._index, 1, data);\n          }\n          this.save();\n          this.modalVisible = false;\n        }\n      });\n    },\n    add() {\n      this.modalType = 0;\n      this.modalTitle = \"添加字段\";\n      this.$refs.form.resetFields();\n      this.modalVisible = true;\n    },\n    edit(v) {\n      this.modalType = 1;\n      this.modalTitle = \"编辑字段\";\n      // 转换null为\"\"\n      for (let attr in v) {\n        if (v[attr] == null) {\n          v[attr] = \"\";\n        }\n      }\n      let str = JSON.stringify(v);\n      let data = JSON.parse(str);\n      this.form = data;\n      this.modalVisible = true;\n    },\n    remove(v) {\n      this.data.splice(v._index, 1);\n      this.save();\n      this.$Message.success(\"操作成功\");\n    },\n    clear() {\n      this.$Modal.confirm({\n        title: \"确认清空\",\n        content: \"您确认要清空所有数据 ?\",\n        onOk: () => {\n          this.data = [];\n          this.vueName = \"\";\n          this.rowNum = \"1\";\n          this.save();\n          this.$Message.success(\"操作成功\");\n        }\n      });\n    },\n    generate() {\n      if (!this.vueName) {\n        this.$Message.warning(\"请输入组件名\");\n        return;\n      }\n      this.loading = true;\n      // 判断是否有重复字段\n      let flag = false;\n      this.data.forEach(e => {\n        if (\n          e.field == \"title\" ||\n          e.field == \"parentId\" ||\n          e.field == \"sortOrder\" ||\n          e.field == \"parentTitle\"\n        ) {\n          flag = true;\n        }\n      });\n      if (flag) {\n        this.loading = false;\n        this.$Modal.confirm({\n          title: \"无效字段提示\",\n          content:\n            \"您添加的字段中包含以下无效的重复字段：title、parentId、sortOrder、parentTitle，确认后将自动过滤生成?\",\n          onOk: () => {\n            this.loading = true;\n            this.data = this.data.filter(e => {\n              return (\n                e.field != \"title\" &&\n                e.field != \"parentId\" &&\n                e.field != \"sortOrder\" &&\n                e.field != \"parentTitle\"\n              );\n            });\n            generateTree(this.vueName, this.rowNum, this.data).then(res => {\n              this.loading = false;\n              if (res.success) {\n                this.code = res.result;\n                this.codeModal = true;\n                this.save();\n              }\n            });\n          }\n        });\n      } else {\n        generateTree(this.vueName, this.rowNum, this.data).then(res => {\n          this.loading = false;\n          if (res.success) {\n            this.code = res.result;\n            this.codeModal = true;\n            this.save();\n          }\n        });\n      }\n    },\n    onCopy() {\n      this.$Message.success(\"复制成功\");\n      this.codeModal = false;\n    },\n    onError() {\n      this.$Message.warning(\"复制失败，请手动复制\");\n    },\n    save() {\n      this.setStore(\"treeData\", JSON.stringify(this.data));\n      this.setStore(\"treeVueName\", this.vueName);\n      this.setStore(\"treeRowNum\", this.rowNum);\n    }\n  },\n  mounted() {\n    this.init();\n  }\n};\n</script>\n"]}]}