{"remainingRequest":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/src/views/activiti/model-manage/modelManage.vue?vue&type=style&index=0&lang=less&","dependencies":[{"path":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/src/views/activiti/model-manage/modelManage.vue","mtime":1577168504901},{"path":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/less-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CkBpbXBvcnQgIi4uLy4uLy4uL3N0eWxlcy90YWJsZS1jb21tb24ubGVzcyI7CkBpbXBvcnQgIi4vbW9kZWxNYW5hZ2UubGVzcyI7Cg=="},{"version":3,"sources":["modelManage.vue"],"names":[],"mappings":";AACA;AACA","file":"modelManage.vue","sourceRoot":"src/views/activiti/model-manage","sourcesContent":["<style lang=\"less\">\n@import \"../../../styles/table-common.less\";\n@import \"./modelManage.less\";\n</style>\n<template>\n  <div class=\"search\">\n    <Card>\n      <Row v-show=\"openSearch\" @keydown.enter.native=\"handleSearch\">\n        <Form ref=\"searchForm\" :model=\"searchForm\" inline :label-width=\"70\">\n          <Form-item label=\"模型名称\" prop=\"name\">\n            <Input\n              type=\"text\"\n              v-model=\"searchForm.name\"\n              placeholder=\"请输入名称\"\n              clearable\n              style=\"width: 200px\"\n            />\n          </Form-item>\n          <Form-item label=\"标识Key\" prop=\"modelKey\">\n            <Input\n              type=\"text\"\n              v-model=\"searchForm.modelKey\"\n              placeholder=\"请输入标识\"\n              clearable\n              style=\"width: 200px\"\n            />\n          </Form-item>\n          <Form-item style=\"margin-left:-35px;\" class=\"br\">\n            <Button @click=\"handleSearch\" type=\"primary\" icon=\"ios-search\">搜索</Button>\n            <Button @click=\"handleReset\">重置</Button>\n          </Form-item>\n        </Form>\n      </Row>\n      <Row class=\"operation\">\n        <Button @click=\"add\" type=\"primary\" icon=\"md-add\">添加空白模型</Button>\n        <Button @click=\"delAll\" icon=\"md-trash\">批量删除</Button>\n        <Button @click=\"getDataList\" icon=\"md-refresh\">刷新</Button>\n        <Button type=\"dashed\" @click=\"openSearch=!openSearch\">{{openSearch ? \"关闭搜索\" : \"开启搜索\"}}</Button>\n        <Button type=\"dashed\" @click=\"openTip=!openTip\">{{openTip ? \"关闭提示\" : \"开启提示\"}}</Button>\n      </Row>\n      <Row v-show=\"openTip\">\n        <Alert show-icon>\n          已选择\n          <span class=\"select-count\">{{selectCount}}</span> 项\n          <a class=\"select-clear\" @click=\"clearSelectAll\">清空</a>\n        </Alert>\n      </Row>\n      <Row>\n        <Table\n          :loading=\"loading\"\n          border\n          :columns=\"columns\"\n          :data=\"data\"\n          sortable=\"custom\"\n          @on-sort-change=\"changeSort\"\n          @on-selection-change=\"showSelect\"\n          ref=\"table\"\n        ></Table>\n      </Row>\n      <Row type=\"flex\" justify=\"end\" class=\"page\">\n        <Page\n          :current=\"searchForm.pageNumber\"\n          :total=\"total\"\n          :page-size=\"searchForm.pageSize\"\n          @on-change=\"changePage\"\n          @on-page-size-change=\"changePageSize\"\n          :page-size-opts=\"[10,20,50]\"\n          size=\"small\"\n          show-total\n          show-elevator\n          show-sizer\n        ></Page>\n      </Row>\n    </Card>\n\n    <Modal :title=\"modalTitle\" v-model=\"modalVisible\" :mask-closable=\"false\" :width=\"500\">\n      <Form ref=\"form\" :model=\"form\" :label-width=\"80\" :rules=\"formValidate\">\n        <FormItem label=\"名称\" prop=\"name\">\n          <Input v-model=\"form.name\" />\n        </FormItem>\n        <FormItem label=\"标识Key\" prop=\"modelKey\">\n          <Input v-model=\"form.modelKey\" />\n        </FormItem>\n        <FormItem label=\"备注\" prop=\"description\">\n          <Input v-model=\"form.description\" />\n        </FormItem>\n      </Form>\n      <div slot=\"footer\">\n        <Button type=\"text\" @click=\"handelCancel\">取消</Button>\n        <Button type=\"primary\" :loading=\"submitLoading\" @click=\"handelSubmit\">提交</Button>\n      </div>\n    </Modal>\n\n    <Modal\n      :closable=\"false\"\n      @on-cancel=\"handleClose\"\n      v-model=\"showModeler\"\n      :mask-closable=\"false\"\n      footer-hide\n      fullscreen\n      class=\"modeler\"\n    >\n      <div slot=\"header\">\n        <div class=\"ivu-modal-header-inner\">Activiti工作流在线流程设计编辑</div>\n        <a @click=\"handleClose\" class=\"ivu-modal-close\">\n          <Icon type=\"ios-close\" size=\"31\" class=\"ivu-icon-ios-close\" />\n        </a>\n      </div>\n      <div style=\"position:relative;height: 100%;\">\n        <iframe\n          id=\"iframe\"\n          :src=\"modelerUrl\"\n          frameborder=\"0\"\n          width=\"100%\"\n          height=\"100%\"\n          scrolling=\"auto\"\n        ></iframe>\n        <Spin fix size=\"large\" v-if=\"modelerLoading\"></Spin>\n      </div>\n    </Modal>\n  </div>\n</template>\n\n<script>\nimport {\n  getModelDataList,\n  addModel,\n  deployModel,\n  exportModel,\n  deleteModel\n} from \"@/api/activiti\";\nimport { getOtherSet } from \"@/api/index\";\nexport default {\n  name: \"model-manage\",\n  data() {\n    return {\n      openSearch: true,\n      openTip: true,\n      showModeler: false,\n      modelerLoading: false,\n      domain: \"\",\n      modelerUrl: \"\",\n      loading: true, // 表单加载状态\n      selectCount: 0, // 多选计数\n      selectList: [], // 多选数据\n      searchForm: {\n        // 搜索框对应data对象\n        name: \"\",\n        modelKey: \"\",\n        pageNumber: 1, // 当前页数\n        pageSize: 10, // 页面大小\n        sort: \"createTime\", // 默认排序字段\n        order: \"desc\" // 默认排序方式\n      },\n      modalType: 0, // 添加或编辑标识\n      modalVisible: false, // 添加或编辑显示\n      modalTitle: \"\", // 添加或编辑标题\n      form: {\n        name: \"\",\n        modelKey: \"\",\n        description: \"\"\n      },\n      formValidate: {\n        // 表单验证规则\n        name: [{ required: true, message: \"不能为空\", trigger: \"blur\" }],\n        modelKey: [{ required: true, message: \"不能为空\", trigger: \"blur\" }]\n      },\n      submitLoading: false, // 添加或编辑提交状态\n      columns: [\n        // 表头\n        {\n          type: \"selection\",\n          width: 60,\n          align: \"center\",\n          fixed: \"left\"\n        },\n        {\n          type: \"index\",\n          width: 60,\n          align: \"center\",\n          fixed: \"left\"\n        },\n        {\n          title: \"名称\",\n          key: \"name\",\n          minWidth: 180,\n          sortable: true,\n          fixed: \"left\"\n        },\n        {\n          title: \"标识Key\",\n          key: \"modelKey\",\n          width: 150,\n          sortable: true\n        },\n        {\n          title: \"备注描述\",\n          key: \"description\",\n          width: 150,\n          sortable: true\n        },\n        {\n          title: \"版本\",\n          key: \"version\",\n          width: 130,\n          align: \"center\",\n          sortable: true,\n          render: (h, params) => {\n            let re = \"\";\n            if (params.row.version) {\n              re = \"v.\" + params.row.version;\n            }\n            return h(\"div\", re);\n          }\n        },\n        {\n          title: \"创建时间\",\n          key: \"createTime\",\n          width: 180,\n          sortable: true,\n          sortType: \"desc\"\n        },\n        {\n          title: \"更新时间\",\n          key: \"updateTime\",\n          width: 180,\n          sortable: true\n        },\n        {\n          title: \"操作\",\n          key: \"action\",\n          width: 335,\n          align: \"center\",\n          fixed: \"right\",\n          render: (h, params) => {\n            return h(\"div\", [\n              h(\n                \"Button\",\n                {\n                  props: {\n                    type: \"warning\",\n                    size: \"small\",\n                    icon: \"md-create\"\n                  },\n                  style: {\n                    marginRight: \"5px\"\n                  },\n                  on: {\n                    click: () => {\n                      this.edit(params.row);\n                    }\n                  }\n                },\n                \"在线设计\"\n              ),\n              h(\n                \"Button\",\n                {\n                  props: {\n                    type: \"info\",\n                    size: \"small\"\n                  },\n                  style: {\n                    marginRight: \"5px\"\n                  },\n                  on: {\n                    click: () => {\n                      this.deploy(params.row);\n                    }\n                  }\n                },\n                \"部署发布\"\n              ),\n              h(\n                \"Button\",\n                {\n                  props: {\n                    size: \"small\"\n                  },\n                  style: {\n                    marginRight: \"5px\"\n                  },\n                  on: {\n                    click: () => {\n                      this.export(params.row);\n                    }\n                  }\n                },\n                \"导出XML\"\n              ),\n              h(\n                \"Button\",\n                {\n                  props: {\n                    type: \"error\",\n                    size: \"small\"\n                  },\n                  on: {\n                    click: () => {\n                      this.remove(params.row);\n                    }\n                  }\n                },\n                \"删除\"\n              )\n            ]);\n          }\n        }\n      ],\n      data: [], // 表单数据\n      total: 0 // 表单数据总数\n    };\n  },\n  methods: {\n    init() {\n      this.getDataList();\n      this.getDomain();\n    },\n    getDomain() {\n      getOtherSet().then(res => {\n        if (res.result) {\n          this.domain = res.result.domain;\n        }\n      });\n    },\n    changePage(v) {\n      this.searchForm.pageNumber = v;\n      this.getDataList();\n      this.clearSelectAll();\n    },\n    changePageSize(v) {\n      this.searchForm.pageSize = v;\n      this.getDataList();\n    },\n    getDataList() {\n      this.loading = true;\n      getModelDataList(this.searchForm).then(res => {\n        this.loading = false;\n        if (res.success) {\n          this.data = res.result.content;\n          this.total = res.result.totalElements;\n        }\n      });\n    },\n    handleSearch() {\n      this.searchForm.pageNumber = 1;\n      this.searchForm.pageSize = 10;\n      this.getDataList();\n    },\n    handleReset() {\n      this.$refs.searchForm.resetFields();\n      this.searchForm.pageNumber = 1;\n      this.searchForm.pageSize = 10;\n      // 重新加载数据\n      this.getDataList();\n    },\n    changeSort(e) {\n      this.searchForm.sort = e.key;\n      this.searchForm.order = e.order;\n      if (e.order == \"normal\") {\n        this.searchForm.order = \"\";\n      }\n      this.getDataList();\n    },\n    handelCancel() {\n      this.modalVisible = false;\n    },\n    handelSubmit() {\n      this.$refs.form.validate(valid => {\n        if (valid) {\n          this.submitLoading = true;\n          if (this.modalType == 0) {\n            // 添加 避免编辑后传入id等数据 记得删除\n            delete this.form.id;\n            addModel(this.form).then(res => {\n              this.submitLoading = false;\n              if (res.success) {\n                this.$Message.success(\"操作成功\");\n                this.getDataList();\n                this.modalVisible = false;\n              }\n            });\n          }\n        }\n      });\n    },\n    add() {\n      this.modalType = 0;\n      this.modalTitle = \"添加空白模型\";\n      this.$refs.form.resetFields();\n      this.modalVisible = true;\n    },\n    edit(v) {\n      if (!this.domain) {\n        this.$Modal.confirm({\n          title: \"您还未配置访问域名\",\n          content: \"您还未配置应用部署访问域名，是否现在立即去配置?\",\n          onOk: () => {\n            this.$router.push({\n              name: \"setting\",\n              query: { name: \"other\" }\n            });\n          }\n        });\n        return;\n      }\n      this.modelerUrl = `${this.domain}/modeler.html?modelId=${\n        v.id\n      }&accessToken=${this.getStore(\"accessToken\")}&time=${new Date()}`;\n      this.showModeler = true;\n      this.modelerLoading = true;\n      let that = this;\n      // 判断iframe是否加载完毕\n      let iframe = document.getElementById(\"iframe\");\n      if (iframe.attachEvent) {\n        iframe.attachEvent(\"onload\", function() {\n          //iframe加载完成后你需要进行的操作\n          that.modelerLoading = false;\n        });\n      } else {\n        iframe.onload = function() {\n          //iframe加载完成后你需要进行的操作\n          that.modelerLoading = false;\n        };\n      }\n    },\n    handleClose() {\n      this.$Modal.confirm({\n        title: \"确认关闭\",\n        content: \"请记得点击左上角保存按钮，确定关闭编辑器?\",\n        onOk: () => {\n          this.getDataList();\n          this.showModeler = false;\n        }\n      });\n    },\n    deploy(v) {\n      let that = this;\n      this.$Modal.confirm({\n        title: \"确认部署发布\",\n        content: \"您确认要部署发布模型 \" + v.name + \" ?\",\n        loading: true,\n        onOk: () => {\n          deployModel(v.id).then(res => {\n            this.$Modal.remove();\n            if (res.success) {\n              setTimeout(function() {\n                that.showJump();\n              }, 300);\n            }\n          });\n        }\n      });\n    },\n    showJump() {\n      this.$Modal.confirm({\n        title: \"部署发布成功\",\n        content:\n          \"建议立即去分配审批节点人员并编辑流程信息，是否立即跳转查看该流程?\",\n        onOk: () => {\n          this.$router.push({\n            name: \"process-manage\"\n          });\n        }\n      });\n    },\n    export(v) {\n      window.open(\n        exportModel + v.id + \"?accessToken=\" + this.getStore(\"accessToken\")\n      );\n    },\n    remove(v) {\n      this.$Modal.confirm({\n        title: \"确认删除\",\n        content: \"您确认要删除 \" + v.name + \" ?\",\n        loading: true,\n        onOk: () => {\n          deleteModel(v.id).then(res => {\n            this.$Modal.remove();\n            if (res.success) {\n              this.$Message.success(\"操作成功\");\n              this.getDataList();\n            }\n          });\n        }\n      });\n    },\n    showSelect(e) {\n      this.selectList = e;\n      this.selectCount = e.length;\n    },\n    clearSelectAll() {\n      this.$refs.table.selectAll(false);\n    },\n    delAll() {\n      if (this.selectCount <= 0) {\n        this.$Message.warning(\"您还未选择要删除的数据\");\n        return;\n      }\n      this.$Modal.confirm({\n        title: \"确认删除\",\n        content: \"您确认要删除所选的 \" + this.selectCount + \" 条数据?\",\n        loading: true,\n        onOk: () => {\n          let ids = \"\";\n          this.selectList.forEach(function(e) {\n            ids += e.id + \",\";\n          });\n          ids = ids.substring(0, ids.length - 1);\n          deleteModel(ids).then(res => {\n            this.$Modal.remove();\n            if (res.success) {\n              this.$Message.success(\"操作成功\");\n              this.clearSelectAll();\n              this.getDataList();\n            }\n          });\n        }\n      });\n    }\n  },\n  mounted() {\n    this.init();\n  },\n  watch: {\n    // 监听路由变化\n    $route(to, from) {\n      if (to.name == \"model-manage\") {\n        this.getDataList();\n      }\n    }\n  }\n};\n</script>"]}]}