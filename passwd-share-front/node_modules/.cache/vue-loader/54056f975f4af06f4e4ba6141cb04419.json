{"remainingRequest":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/src/views/share-vue-template/complex-table/complexTable.vue?vue&type=style&index=0&lang=less&","dependencies":[{"path":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/src/views/share-vue-template/complex-table/complexTable.vue","mtime":1579165050560},{"path":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/less-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CkBpbXBvcnQgIi4uLy4uLy4uL3N0eWxlcy90YWJsZS1jb21tb24ubGVzcyI7Cg=="},{"version":3,"sources":["complexTable.vue"],"names":[],"mappings":";AACA","file":"complexTable.vue","sourceRoot":"src/views/share-vue-template/complex-table","sourcesContent":["<style lang=\"less\">\n@import \"../../../styles/table-common.less\";\n</style>\n<template>\n  <div class=\"search\">\n    <Card>\n      <Row v-show=\"openSearch\" @keydown.enter.native=\"handleSearch\">\n        <Form ref=\"searchForm\" :model=\"searchForm\" inline :label-width=\"70\">\n          <Form-item label=\"名称\" prop=\"name\">\n            <Input\n              type=\"text\"\n              v-model=\"searchForm.name\"\n              placeholder=\"请输入\"\n              clearable\n              style=\"width: 200px\"\n            />\n          </Form-item>\n          <Form-item label=\"所属类别\" prop=\"category\">\n            <Cascader\n              v-model=\"selectCat\"\n              :data=\"category\"\n              :load-data=\"loadData\"\n              @on-change=\"handleChangeCat\"\n              change-on-select\n              filterable\n              placeholder=\"请选择或输入搜索类别\"\n              style=\"width: 200px\"\n            ></Cascader>\n          </Form-item>\n          <span v-if=\"drop\">\n            <Form-item label=\"状态\" prop=\"status\">\n              <Select v-model=\"searchForm.status\" placeholder=\"请选择\" clearable style=\"width: 200px\">\n                <Option value=\"0\">正常</Option>\n                <Option value=\"-1\">禁用</Option>\n              </Select>\n            </Form-item>\n            <Form-item label=\"创建时间\">\n              <DatePicker\n                v-model=\"selectDate\"\n                type=\"daterange\"\n                format=\"yyyy-MM-dd\"\n                clearable\n                @on-change=\"selectDateRange\"\n                placeholder=\"选择起始时间\"\n                style=\"width: 200px\"\n              ></DatePicker>\n            </Form-item>\n          </span>\n          <Form-item style=\"margin-left:-35px;\" class=\"br\">\n            <Button @click=\"handleSearch\" type=\"primary\" icon=\"ios-search\">搜索</Button>\n            <Button @click=\"handleReset\">重置</Button>\n            <a class=\"drop-down\" @click=\"dropDown\">\n              {{dropDownContent}}\n              <Icon :type=\"dropDownIcon\"></Icon>\n            </a>\n          </Form-item>\n        </Form>\n      </Row>\n      <Row class=\"operation\">\n        <Button @click=\"add\" type=\"primary\" icon=\"md-add\">添加</Button>\n        <Button @click=\"delAll\" icon=\"md-trash\">批量删除</Button>\n        <Dropdown @on-click=\"handleDropdown\">\n          <Button>\n            更多操作\n            <Icon type=\"md-arrow-dropdown\" />\n          </Button>\n          <DropdownMenu slot=\"list\">\n            <DropdownItem name=\"refresh\">刷新</DropdownItem>\n            <DropdownItem name=\"exportData\">导出所选数据</DropdownItem>\n            <DropdownItem name=\"exportAll\">导出全部数据</DropdownItem>\n          </DropdownMenu>\n        </Dropdown>\n        <Button type=\"dashed\" @click=\"openSearch=!openSearch\">{{openSearch ? \"关闭搜索\" : \"开启搜索\"}}</Button>\n        <Button type=\"dashed\" @click=\"openTip=!openTip\">{{openTip ? \"关闭提示\" : \"开启提示\"}}</Button>\n      </Row>\n      <Row v-show=\"openTip\">\n        <Alert show-icon>\n          已选择\n          <span class=\"select-count\">{{selectCount}}</span> 项\n          <a class=\"select-clear\" @click=\"clearSelectAll\">清空</a>\n        </Alert>\n      </Row>\n      <Row>\n        <Table\n          :loading=\"loading\"\n          border\n          :columns=\"columns\"\n          :data=\"data\"\n          sortable=\"custom\"\n          @on-sort-change=\"changeSort\"\n          @on-selection-change=\"showSelect\"\n          ref=\"table\"\n        ></Table>\n        <Table :columns=\"exportColumns\" :data=\"exportData\" ref=\"exportTable\" style=\"display:none\"></Table>\n      </Row>\n      <Row type=\"flex\" justify=\"end\" class=\"page\">\n        <Page\n          :current=\"searchForm.pageNumber\"\n          :total=\"total\"\n          :page-size=\"searchForm.pageSize\"\n          @on-change=\"changePage\"\n          @on-page-size-change=\"changePageSize\"\n          :page-size-opts=\"[10,20,50]\"\n          size=\"small\"\n          show-total\n          show-elevator\n          show-sizer\n        ></Page>\n      </Row>\n    </Card>\n\n    <Modal :title=\"modalTitle\" v-model=\"modalVisible\" :mask-closable=\"false\" :width=\"500\">\n      <Form ref=\"form\" :model=\"form\" :label-width=\"70\" :rules=\"formValidate\">\n        <FormItem label=\"名称\" prop=\"name\">\n          <Input v-model=\"form.name\" autocomplete=\"off\" />\n        </FormItem>\n        <FormItem label=\"密码\" prop=\"password\" v-if=\"modalType==0\" :error=\"errorPass\">\n          <Input type=\"password\" v-model=\"form.password\" autocomplete=\"off\" />\n        </FormItem>\n        <Form-item label=\"头像\" prop=\"avatar\">\n          <upload-pic-input v-model=\"form.avatar\" ref=\"upload\"></upload-pic-input>\n        </Form-item>\n        <Form-item label=\"所属类别\" prop=\"categoryTitle\" class=\"block-pop\">\n          <Poptip trigger=\"click\" placement=\"right\" title=\"选择类别\" width=\"250\">\n            <div style=\"display:flex;\">\n              <Input v-model=\"form.categoryTitle\" readonly style=\"margin-right:10px;\" />\n              <Button icon=\"md-trash\" @click=\"clearSelectCat\">清空已选</Button>\n            </div>\n            <div slot=\"content\">\n              <Tree :data=\"dataCat\" :load-data=\"loadDataTree\" @on-select-change=\"selectTree\"></Tree>\n              <Spin size=\"large\" fix v-if=\"loading\"></Spin>\n            </div>\n          </Poptip>\n        </Form-item>\n        <FormItem label=\"类型\" prop=\"type\">\n          <Select v-model=\"form.type\" placeholder=\"请选择\">\n            <Option :value=\"0\">类型1</Option>\n            <Option :value=\"1\">类型2</Option>\n          </Select>\n        </FormItem>\n      </Form>\n      <div slot=\"footer\">\n        <Button type=\"text\" @click=\"handleCancel\">取消</Button>\n        <Button type=\"primary\" :loading=\"submitLoading\" @click=\"handleSubmit\">提交</Button>\n      </div>\n    </Modal>\n    <Modal v-model=\"modalExportAll\" title=\"确认导出\" :loading=\"loadingExport\" @on-ok=\"exportAll\">\n      <p>您确认要导出全部 {{total}} 条数据？</p>\n    </Modal>\n  </div>\n</template>\n\n<script>\nimport uploadPicInput from \"@/views/my-components/share/upload-pic-input\";\nexport default {\n  name: \"complex-table\",\n  components: {\n    uploadPicInput\n  },\n  data() {\n    const validatePassword = (rule, value, callback) => {\n      if (value.length < 6) {\n        callback(new Error(\"密码长度不得小于6位\"));\n      } else {\n        callback();\n      }\n    };\n    return {\n      openSearch: true, // 显示搜索\n      openTip: true, // 显示提示\n      loading: true, // 表单加载状态\n      modalExportAll: false, // 显示导出全部数据\n      loadingExport: true, // 导出全部数据状态\n      drop: false, // 搜索展开标识\n      dropDownContent: \"展开\", // 搜索展开标识文字\n      dropDownIcon: \"ios-arrow-down\", //搜索展开图标\n      selectCount: 0, // 多选计数\n      selectList: [], // 多选数据\n      viewImage: false, // 图片预览标识\n      category: [\n        // 搜索类别数据\n      ],\n      selectCat: [], // 搜索选择类别modal\n      dataCat: [], // 编辑添加类别数据\n      searchForm: {\n        // 搜索框对应data对象\n        name: \"\",\n        categoryId: \"\",\n        status: \"\",\n        pageNumber: 1, // 当前页数\n        pageSize: 10, // 页面大小\n        sort: \"createTime\", // 默认排序字段\n        order: \"desc\", // 默认排序方式\n        startDate: \"\", // 起始时间\n        endDate: \"\" // 终止时间\n      },\n      selectDate: null, // 选择日期绑定modal\n      modalType: 0, // 添加或编辑标识\n      modalVisible: false, // 添加或编辑显示\n      modalTitle: \"\", // 添加或编辑标题\n      form: {\n        // 添加或编辑表单对象初始化数据\n        type: 0,\n        avatar: \"https://s1.ax1x.com/2018/05/19/CcdVQP.png\",\n        categoryId: \"\",\n        categoryTitle: \"\"\n      },\n      errorPass: \"\", // 密码错误提示\n      formValidate: {\n        // 表单验证规则\n        name: [{ required: true, message: \"不能为空\", trigger: \"blur\" }]\n      },\n      submitLoading: false, // 添加或编辑提交状态\n      columns: [\n        {\n          type: \"selection\",\n          width: 60,\n          align: \"center\",\n          fixed: \"left\"\n        },\n        {\n          type: \"index\",\n          width: 60,\n          align: \"center\",\n          fixed: \"left\"\n        },\n        {\n          title: \"名称\",\n          key: \"name\",\n          minWidth: 150,\n          sortable: true,\n          fixed: \"left\"\n        },\n        {\n          title: \"头像\",\n          key: \"avatar\",\n          width: 150,\n          align: \"center\",\n          render: (h, params) => {\n            return h(\"Avatar\", {\n              props: {\n                src: params.row.avatar\n              }\n            });\n          }\n        },\n        {\n          title: \"所属类别\",\n          key: \"categoryTitle\",\n          width: 150\n        },\n        {\n          title: \"类型\",\n          key: \"type\",\n          align: \"center\",\n          width: 150,\n          render: (h, params) => {\n            let re = \"\";\n            if (params.row.type == 0) {\n              re = \"类型1\";\n            } else if (params.row.type == 1) {\n              re = \"类型2\";\n            }\n            return h(\"div\", re);\n          }\n        },\n        {\n          title: \"状态\",\n          key: \"status\",\n          align: \"center\",\n          width: 150,\n          render: (h, params) => {\n            let re = \"\";\n            if (params.row.status == 0) {\n              return h(\"div\", [\n                h(\"Badge\", {\n                  props: {\n                    status: \"success\",\n                    text: \"正常启用\"\n                  }\n                })\n              ]);\n            } else if (params.row.status == -1) {\n              return h(\"div\", [\n                h(\"Badge\", {\n                  props: {\n                    status: \"error\",\n                    text: \"禁用\"\n                  }\n                })\n              ]);\n            }\n          },\n          filters: [\n            {\n              label: \"正常启用\",\n              value: 0\n            },\n            {\n              label: \"禁用\",\n              value: -1\n            }\n          ],\n          filterMultiple: false,\n          filterMethod(value, row) {\n            if (value == 0) {\n              return row.status == 0;\n            } else if (value == -1) {\n              return row.status == -1;\n            }\n          }\n        },\n        {\n          title: \"创建时间\",\n          key: \"createTime\",\n          sortable: true,\n          sortType: \"desc\",\n          width: 180\n        },\n        {\n          title: \"操作\",\n          key: \"action\",\n          width: 230,\n          align: \"center\",\n          fixed: \"right\",\n          render: (h, params) => {\n            let enableOrDisable = \"\";\n            if (params.row.status == 0) {\n              enableOrDisable = h(\n                \"Button\",\n                {\n                  props: {\n                    size: \"small\"\n                  },\n                  style: {\n                    marginRight: \"5px\"\n                  },\n                  on: {\n                    click: () => {\n                      this.disable(params.row);\n                    }\n                  }\n                },\n                \"禁用\"\n              );\n            } else {\n              enableOrDisable = h(\n                \"Button\",\n                {\n                  props: {\n                    type: \"success\",\n                    size: \"small\"\n                  },\n                  style: {\n                    marginRight: \"5px\"\n                  },\n                  on: {\n                    click: () => {\n                      this.enable(params.row);\n                    }\n                  }\n                },\n                \"启用\"\n              );\n            }\n            return h(\"div\", [\n              h(\n                \"Button\",\n                {\n                  props: {\n                    type: \"primary\",\n                    size: \"small\"\n                  },\n                  style: {\n                    marginRight: \"5px\"\n                  },\n                  on: {\n                    click: () => {\n                      this.edit(params.row);\n                    }\n                  }\n                },\n                \"编辑\"\n              ),\n              enableOrDisable,\n              h(\n                \"Button\",\n                {\n                  props: {\n                    type: \"error\",\n                    size: \"small\"\n                  },\n                  on: {\n                    click: () => {\n                      this.remove(params.row);\n                    }\n                  }\n                },\n                \"删除\"\n              )\n            ]);\n          }\n        }\n      ],\n      exportColumns: [\n        {\n          title: \"名称\",\n          key: \"name\"\n        },\n        {\n          title: \"头像\",\n          key: \"avatar\"\n        },\n        {\n          title: \"所属类别\",\n          key: \"categoryTitle\"\n        },\n        {\n          title: \"类型\",\n          key: \"type\"\n        },\n        {\n          title: \"状态\",\n          key: \"status\"\n        },\n        {\n          title: \"创建时间\",\n          key: \"createTime\"\n        }\n      ],\n      data: [], // 表单数据\n      exportData: [], // 导出数据\n      total: 0 // 表单数据总数\n    };\n  },\n  methods: {\n    init() {\n      this.getDataList();\n      // 初始化搜索框级联分类数据\n      this.initCategoryData();\n      // 初始化编辑添加树形分类数据\n      this.initCategoryForEdit();\n    },\n    initCategoryData() {\n      // this.getRequest(\"级联一级数据请求路径，如/category/getByParentId/0\").then(res => {\n      //   if (res.success) {\n      //     res.result.forEach(function(e) {\n      //       if (e.isParent) {\n      //         e.value = e.id;\n      //         e.label = e.title;\n      //         e.loading = false;\n      //         e.children = [];\n      //       } else {\n      //         e.value = e.id;\n      //         e.label = e.title;\n      //       }\n      //     });\n      //     this.category = res.result;\n      //   }\n      // });\n      // 模拟请求成功\n      this.category = [\n        {\n          label: \"分类1\",\n          value: \"1\",\n          loading: false,\n          children: [\n            {\n              label: \"二级分类\",\n              value: \"1.1\"\n            }\n          ]\n        },\n        {\n          label: \"分类2\",\n          value: \"2\"\n        }\n      ];\n    },\n    initCategoryForEdit() {\n      // this.getRequest(\"树形一级数据请求路径，如/category/getByParentId/0\").then(res => {\n      //   if (res.success) {\n      //     res.result.forEach(function(e) {\n      //       if (e.isParent) {\n      //         e.loading = false;\n      //         e.children = [];\n      //       }\n      //     });\n      //     this.dataCat = res.result;\n      //   }\n      // });\n      // 模拟请求成功\n      this.dataCat = [\n        {\n          title: \"分类1\",\n          id: \"1\",\n          loading: false,\n          children: [\n            {\n              title: \"二级分类\",\n              id: \"2\"\n            }\n          ]\n        },\n        {\n          title: \"分类2\",\n          id: \"3\"\n        }\n      ];\n    },\n    loadData(item, callback) {\n      // 异步加载搜索框级联类别子节点数据\n      // item.loading = true;\n      // this.getRequest(\"请求路径，如/category/getByParentId/\" + item.value).then(res => {\n      //   item.loading = false;\n      //   if (res.success) {\n      //     res.result.forEach(function(e) {\n      //       if (e.isParent) {\n      //         e.value = e.id;\n      //         e.label = e.title;\n      //         e.loading = false;\n      //         e.children = [];\n      //       } else {\n      //         e.value = e.id;\n      //         e.label = e.title;\n      //       }\n      //       if (e.status == -1) {\n      //         e.label = \"[已禁用] \" + e.label;\n      //         e.disabled = true;\n      //       }\n      //     });\n      //     item.children = res.result;\n      //     callback();\n      //   }\n      // });\n    },\n    loadDataTree(item, callback) {\n      // 异步加载编辑添加选择类别树子节点数据\n      // this.getRequest(\"请求路径，如/category/getByParentId/\" + item.id).then(res => {\n      //   if (res.success) {\n      //     res.result.forEach(function(e) {\n      //       if (e.isParent) {\n      //         e.loading = false;\n      //         e.children = [];\n      //       }\n      //     });\n      //     callback(res.result);\n      //   }\n      // });\n    },\n    selectTree(v) {\n      if (v.length > 0) {\n        // 转换null为\"\"\n        for (let attr in v[0]) {\n          if (v[0][attr] == null) {\n            v[0][attr] = \"\";\n          }\n        }\n        let str = JSON.stringify(v[0]);\n        let data = JSON.parse(str);\n        this.form.categoryId = data.id;\n        this.form.categoryTitle = data.title;\n      }\n    },\n    clearSelectCat() {\n      this.form.categoryId = \"\";\n      this.form.categoryTitle = \"\";\n    },\n    handleChangeCat(value, selectedData) {\n      // 获取最后一个值\n      if (value && value.length > 0) {\n        this.searchForm.categoryId = value[value.length - 1];\n      } else {\n        this.searchForm.categoryId = \"\";\n      }\n    },\n    handleChangeUserFormDep(value, selectedData) {\n      // 获取最后一个值\n      if (value && value.length > 0) {\n        this.form.categoryId = value[value.length - 1];\n      } else {\n        this.form.categoryId = \"\";\n      }\n    },\n    changePage(v) {\n      this.searchForm.pageNumber = v;\n      this.getDataList();\n      this.clearSelectAll();\n    },\n    changePageSize(v) {\n      this.searchForm.pageSize = v;\n      this.getDataList();\n    },\n    selectDateRange(v) {\n      if (v) {\n        this.searchForm.startDate = v[0];\n        this.searchForm.endDate = v[1];\n      }\n    },\n    getDataList() {\n      // 多条件搜索获取表格数据\n      this.loading = true;\n      // this.getRequest(\"请求路径\", this.searchForm).then(res => {\n      //   this.loading = false;\n      //   if (res.success) {\n      //     this.data = res.result.content;\n      //     this.total = res.result.totalElements;\n      //   }\n      // });\n      // 以下为模拟数据\n      this.data = [\n        {\n          id: \"1\",\n          name: \"XBoot\",\n          avatar: \"https://s1.ax1x.com/2018/05/19/CcdVQP.png\",\n          categoryTitle: \"分类1\",\n          categoryId: 1,\n          type: 0,\n          status: 0,\n          createTime: \"2018-08-08 00:08:00\"\n        },\n        {\n          id: \"2\",\n          name: \"Daiv\",\n          avatar: \"https://s1.ax1x.com/2018/05/19/CcdVQP.png\",\n          categoryTitle: \"分类2\",\n          categoryId: 2,\n          type: 1,\n          status: -1,\n          createTime: \"2018-08-08 00:08:00\"\n        }\n      ];\n      this.exportData = this.data;\n      this.total = this.data.length;\n      this.loading = false;\n    },\n    handleSearch() {\n      this.searchForm.pageNumber = 1;\n      this.searchForm.pageSize = 10;\n      this.getDataList();\n    },\n    handleReset() {\n      this.$refs.searchForm.resetFields();\n      this.searchForm.pageNumber = 1;\n      this.searchForm.pageSize = 10;\n      this.selectDate = null;\n      this.searchForm.startDate = \"\";\n      this.searchForm.endDate = \"\";\n      this.selectCat = [];\n      this.searchForm.categoryId = \"\";\n      // 重新加载数据\n      this.getDataList();\n    },\n    changeSort(e) {\n      this.searchForm.sort = e.key;\n      this.searchForm.order = e.order;\n      if (e.order == \"normal\") {\n        this.searchForm.order = \"\";\n      }\n      this.getDataList();\n    },\n    handleDropdown(name) {\n      if (name == \"refresh\") {\n        this.getDataList();\n      } else if (name == \"exportData\") {\n        if (this.selectCount <= 0) {\n          this.$Message.warning(\"您还未选择要导出的数据\");\n          return;\n        }\n        this.$Modal.confirm({\n          title: \"确认导出\",\n          content: \"您确认要导出所选 \" + this.selectCount + \" 条数据?\",\n          onOk: () => {\n            this.$refs.exportTable.exportCsv({\n              filename: \"导出数据\"\n            });\n          }\n        });\n      } else if (name == \"exportAll\") {\n        this.modalExportAll = true;\n      }\n    },\n    exportAll() {\n      // this.getRequest(\"请求获取全部数据接口路径\").then(res => {\n      //   this.modalExportAll = false;\n      //   if (res.success) {\n      //     this.exportData = res.result;\n      //     setTimeout(() => {\n      //       this.$refs.exportTable.exportCsv({\n      //         filename: \"用户全部数据\"\n      //       });\n      //     }, 1000);\n      //   }\n      // });\n      // 模拟成功\n      this.modalExportAll = false;\n      this.$refs.exportTable.exportCsv({\n        filename: \"用户全部数据\"\n      });\n    },\n    handleCancel() {\n      this.modalVisible = false;\n    },\n    handleSubmit() {\n      this.$refs.form.validate(valid => {\n        if (valid) {\n          if (this.modalType == 0) {\n            // 添加 避免编辑后传入id等数据 记得删除\n            delete this.form.id;\n            delete this.form.status;\n            if (this.form.password == \"\" || this.form.password == undefined) {\n              this.errorPass = \"密码不能为空\";\n              return;\n            }\n            if (this.form.password.length < 6) {\n              this.errorPass = \"密码长度不得少于6位\";\n              return;\n            }\n            this.submitLoading = true;\n            // this.postRequest(\"请求路径\", this.form).then(res => {\n            //   this.submitLoading = false;\n            //   if (res.success) {\n            //     this.$Message.success(\"操作成功\");\n            //     this.getDataList();\n            //     this.modalVisible = false;\n            //   }\n            // });\n            // 模拟成功\n            this.submitLoading = false;\n            this.$Message.success(\"操作成功\");\n            this.modalVisible = false;\n          } else if (this.modalType == 1) {\n            // 编辑\n            this.submitLoading = true;\n            // this.postRequest(\"请求路径\", this.form).then(res => {\n            //   this.submitLoading = false;\n            //   if (res.success) {\n            //     this.$Message.success(\"操作成功\");\n            //     this.getDataList();\n            //     this.modalVisible = false;\n            //   }\n            // });\n            // 模拟成功\n            this.submitLoading = false;\n            this.$Message.success(\"操作成功\");\n            this.modalVisible = false;\n          }\n        }\n      });\n    },\n    handleUpload(v) {\n      this.form.avatar = v;\n    },\n    add() {\n      this.modalType = 0;\n      this.modalTitle = \"添加\";\n      this.$refs.form.resetFields();\n      this.modalVisible = true;\n    },\n    edit(v) {\n      this.modalType = 1;\n      this.modalTitle = \"编辑\";\n      this.$refs.form.resetFields();\n      // 转换null为\"\"\n      for (let attr in v) {\n        if (v[attr] == null) {\n          v[attr] = \"\";\n        }\n      }\n      let str = JSON.stringify(v);\n      let data = JSON.parse(str);\n      this.form = data;\n      this.modalVisible = true;\n    },\n    enable(v) {\n      this.$Modal.confirm({\n        title: \"确认启用\",\n        // 记得确认修改此处\n        content: \"您确认要启用 \" + v.name + \" ?\",\n        loading: true,\n        onOk: () => {\n          // this.postRequest(\"请求路径/\" + v.id).then(res => {\n          //   this.$Modal.remove();\n          //   if (res.success) {\n          //     this.$Message.success(\"操作成功\");\n          //     this.getDataList();\n          //   }\n          // });\n          //模拟成功\n          this.$Message.success(\"操作成功\");\n          this.$Modal.remove();\n          this.getDataList();\n        }\n      });\n    },\n    disable(v) {\n      this.$Modal.confirm({\n        title: \"确认禁用\",\n        // 记得确认修改此处\n        content: \"您确认要禁用 \" + v.name + \" ?\",\n        loading: true,\n        onOk: () => {\n          // this.postRequest(\"请求路径/\" + v.id).then(res => {\n          //   this.$Modal.remove();\n          //   if (res.success) {\n          //     this.$Message.success(\"操作成功\");\n          //     this.getDataList();\n          //   }\n          // });\n          //模拟成功\n          this.$Message.success(\"操作成功\");\n          this.$Modal.remove();\n          this.getDataList();\n        }\n      });\n    },\n    remove(v) {\n      this.$Modal.confirm({\n        title: \"确认删除\",\n        // 记得确认修改此处\n        content: \"您确认要删除 \" + v.name + \" ?\",\n        loading: true,\n        onOk: () => {\n          // 删除\n          // this.deleteRequest(\"请求地址，如/deleteByIds/\" + v.id).then(res => {\n          //   this.$Modal.remove();\n          //   if (res.success) {\n          //     this.$Message.success(\"操作成功\");\n          //     this.getDataList();\n          //   }\n          // });\n          // 模拟请求成功\n          this.$Message.success(\"操作成功\");\n          this.$Modal.remove();\n          this.getDataList();\n        }\n      });\n    },\n    dropDown() {\n      if (this.drop) {\n        this.dropDownContent = \"展开\";\n        this.dropDownIcon = \"ios-arrow-down\";\n      } else {\n        this.dropDownContent = \"收起\";\n        this.dropDownIcon = \"ios-arrow-up\";\n      }\n      this.drop = !this.drop;\n    },\n    showSelect(e) {\n      this.exportData = e;\n      this.selectList = e;\n      this.selectCount = e.length;\n    },\n    clearSelectAll() {\n      this.$refs.table.selectAll(false);\n    },\n    delAll() {\n      if (this.selectCount <= 0) {\n        this.$Message.warning(\"您还未选择要删除的数据\");\n        return;\n      }\n      this.$Modal.confirm({\n        title: \"确认删除\",\n        content: \"您确认要删除所选的 \" + this.selectCount + \" 条数据?\",\n        loading: true,\n        onOk: () => {\n          let ids = \"\";\n          this.selectList.forEach(function(e) {\n            ids += e.id + \",\";\n          });\n          ids = ids.substring(0, ids.length - 1);\n          // 批量删除\n          // this.deleteRequest(\"请求地址，如/deleteByIds/\" + ids).then(res => {\n          //   this.$Modal.remove();\n          //   if (res.success) {\n          //     this.$Message.success(\"操作成功\");\n          //     this.clearSelectAll();\n          //     this.getDataList();\n          //   }\n          // });\n          // 模拟请求成功\n          this.$Message.success(\"操作成功\");\n          this.$Modal.remove();\n          this.clearSelectAll();\n          this.getDataList();\n        }\n      });\n    }\n  },\n  mounted() {\n    this.init();\n  }\n};\n</script>\n"]}]}