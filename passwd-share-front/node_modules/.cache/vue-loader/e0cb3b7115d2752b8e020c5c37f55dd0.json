{"remainingRequest":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/src/views/activiti/todo-manage/todoManage.vue?vue&type=style&index=0&lang=less&","dependencies":[{"path":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/src/views/activiti/todo-manage/todoManage.vue","mtime":1577168504903},{"path":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/less-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CkBpbXBvcnQgIi4uLy4uLy4uL3N0eWxlcy90YWJsZS1jb21tb24ubGVzcyI7CkBpbXBvcnQgIi4vdG9kb01hbmFnZS5sZXNzIjsK"},{"version":3,"sources":["todoManage.vue"],"names":[],"mappings":";AACA;AACA","file":"todoManage.vue","sourceRoot":"src/views/activiti/todo-manage","sourcesContent":["<style lang=\"less\">\n@import \"../../../styles/table-common.less\";\n@import \"./todoManage.less\";\n</style>\n<template>\n  <div class=\"search\">\n    <Card>\n      <Row v-show=\"openSearch\" @keydown.enter.native=\"handleSearch\">\n        <Form ref=\"searchForm\" :model=\"searchForm\" inline :label-width=\"70\">\n          <Form-item label=\"任务名称\" prop=\"name\">\n            <Input\n              type=\"text\"\n              v-model=\"searchForm.name\"\n              placeholder=\"请输入\"\n              clearable\n              style=\"width: 200px\"\n            />\n          </Form-item>\n          <Form-item style=\"margin-left:-35px;\" class=\"br\">\n            <Button @click=\"handleSearch\" type=\"primary\" icon=\"ios-search\">搜索</Button>\n            <Button @click=\"handleReset\">重置</Button>\n          </Form-item>\n        </Form>\n      </Row>\n      <Row class=\"operation\">\n        <Button @click=\"passAll\" icon=\"md-checkmark-circle-outline\">批量通过</Button>\n        <Button @click=\"backAll\" icon=\"md-close\">批量驳回</Button>\n        <Button @click=\"getDataList\" icon=\"md-refresh\">刷新</Button>\n        <Button type=\"dashed\" @click=\"openSearch=!openSearch\">{{openSearch ? \"关闭搜索\" : \"开启搜索\"}}</Button>\n        <Button type=\"dashed\" @click=\"openTip=!openTip\">{{openTip ? \"关闭提示\" : \"开启提示\"}}</Button>\n      </Row>\n      <Row v-show=\"openTip\">\n        <Alert show-icon>\n          已选择\n          <span class=\"select-count\">{{selectCount}}</span> 项\n          <a class=\"select-clear\" @click=\"clearSelectAll\">清空</a>\n        </Alert>\n      </Row>\n      <Row>\n        <Table\n          :loading=\"loading\"\n          border\n          :columns=\"columns\"\n          sortable=\"custom\"\n          :data=\"data\"\n          @on-sort-change=\"changeSort\"\n          @on-selection-change=\"showSelect\"\n          ref=\"table\"\n        ></Table>\n      </Row>\n      <Row type=\"flex\" justify=\"end\" class=\"page\">\n        <Page\n          :current=\"searchForm.pageNumber\"\n          :total=\"total\"\n          :page-size=\"searchForm.pageSize\"\n          @on-change=\"changePage\"\n          @on-page-size-change=\"changePageSize\"\n          :page-size-opts=\"[10,20,50]\"\n          size=\"small\"\n          show-total\n          show-elevator\n          show-sizer\n        ></Page>\n      </Row>\n    </Card>\n\n    <!-- 审批操作 -->\n    <Modal :title=\"modalTaskTitle\" v-model=\"modalTaskVisible\" :mask-closable=\"false\" :width=\"500\">\n      <Form ref=\"form\" :model=\"form\" :label-width=\"75\" :rules=\"formValidate\">\n        <FormItem label=\"审批意见\" prop=\"reason\">\n          <Input type=\"textarea\" v-model=\"form.comment\" :rows=\"4\" />\n        </FormItem>\n        <FormItem label=\"下一审批人\" prop=\"assignees\" v-show=\"showAssign\" :error=\"error\">\n          <Select\n            v-model=\"form.assignees\"\n            placeholder=\"请选择或输入搜索\"\n            filterable\n            clearable\n            multiple\n            :loading=\"userLoading\"\n          >\n            <Option v-for=\"(item, i) in assigneeList\" :key=\"i\" :value=\"item.id\">{{item.username}}</Option>\n          </Select>\n        </FormItem>\n        <FormItem label=\"下一审批人\" v-show=\"isEG\">\n          <span v-show=\"isEG\">分支网关处暂不支持自定义选择下一审批人，将发送给下一节点所有人</span>\n        </FormItem>\n        <div v-show=\"form.type==1\">\n          <FormItem label=\"驳回至\">\n            <Select\n              v-model=\"form.backTaskKey\"\n              filterable\n              :loading=\"backLoading\"\n              @on-change=\"changeBackTask\"\n            >\n              <Option v-for=\"(item, i) in backList\" :key=\"i\" :value=\"item.key\">{{item.name}}</Option>\n            </Select>\n          </FormItem>\n          <FormItem label=\"指定原节点审批人\" prop=\"assignees\" v-show=\"form.backTaskKey!=-1\" :error=\"error\">\n            <Select\n              v-model=\"form.assignees\"\n              placeholder=\"请选择或输入搜索\"\n              filterable\n              clearable\n              multiple\n              :loading=\"userLoading\"\n            >\n              <Option v-for=\"(item, i) in assigneeList\" :key=\"i\" :value=\"item.id\">{{item.username}}</Option>\n            </Select>\n          </FormItem>\n        </div>\n        <FormItem label=\"选择委托人\" prop=\"userId\" :error=\"error\" v-show=\"form.type==2\">\n          <Select\n            v-model=\"form.userId\"\n            placeholder=\"请输入用户名搜索选择用户\"\n            filterable\n            remote\n            :remote-method=\"searchUser\"\n            :loading=\"userLoading\"\n          >\n            <Option v-for=\"(item, i) in userList\" :value=\"item.id\" :key=\"i\">{{item.username}}</Option>\n          </Select>\n        </FormItem>\n        <FormItem label=\"消息通知\">\n          <Checkbox v-model=\"form.sendMessage\">站内消息通知</Checkbox>\n          <Checkbox v-model=\"form.sendSms\">短信通知</Checkbox>\n          <Checkbox v-model=\"form.sendEmail\">邮件通知</Checkbox>\n        </FormItem>\n      </Form>\n      <div slot=\"footer\">\n        <Button type=\"text\" @click=\"modalTaskVisible=false\">取消</Button>\n        <Button type=\"primary\" :loading=\"submitLoading\" @click=\"handelSubmit\">提交</Button>\n      </div>\n    </Modal>\n  </div>\n</template>\n\n<script>\nimport {\n  todoList,\n  pass,\n  back,\n  getBackList,\n  backToTask,\n  delegate,\n  getNextNode,\n  getNode,\n  passAll,\n  backAll,\n  deleteTask\n} from \"@/api/activiti\";\nimport { searchUserByName, getDictDataByType } from \"@/api/index\";\nexport default {\n  name: \"todo-manage\",\n  data() {\n    return {\n      openSearch: true,\n      openTip: true,\n      loading: true, // 表单加载状态\n      modalTaskVisible: false,\n      userLoading: false,\n      backLoading: false,\n      userList: [],\n      selectCount: 0, // 多选计数\n      selectList: [], // 多选数据\n      assigneeList: [],\n      backList: [\n        {\n          key: \"-1\",\n          name: \"发起人\"\n        }\n      ],\n      error: \"\",\n      showAssign: false,\n      searchForm: {\n        // 搜索框对应data对象\n        name: \"\",\n        pageNumber: 1, // 当前页数\n        pageSize: 10 // 页面大小\n      },\n      modalTaskTitle: \"\",\n      modalTitle: \"\", // 添加或编辑标题\n      form: {\n        id: \"\",\n        userId: \"\",\n        procInstId: \"\",\n        comment: \"\",\n        type: 0,\n        assignees: [],\n        backTaskKey: \"-1\",\n        sendMessage: true,\n        sendSms: true,\n        sendEmail: true\n      },\n      formValidate: {\n        // 表单验证规则\n      },\n      submitLoading: false, // 添加或编辑提交状态\n      columns: [\n        // 表头\n        {\n          type: \"selection\",\n          width: 60,\n          align: \"center\"\n        },\n        {\n          type: \"index\",\n          width: 60,\n          align: \"center\"\n        },\n        {\n          title: \"任务名称\",\n          key: \"name\",\n          minWidth: 160\n        },\n        {\n          title: \"所属流程\",\n          key: \"processName\",\n          width: 150\n        },\n        {\n          title: \"委托代办人\",\n          key: \"owner\",\n          width: 130\n        },\n        {\n          title: \"流程发起人\",\n          key: \"applyer\",\n          width: 130\n        },\n        {\n          title: \"优先级\",\n          key: \"priority\",\n          width: 100,\n          sortable: true,\n          render: (h, params) => {\n            let text = \"无\",\n              color = \"\";\n            if (params.row.priority == 0) {\n              color = \"green\";\n            } else if (params.row.priority == 1) {\n              color = \"orange\";\n            } else if (params.row.priority == 2) {\n              color = \"red\";\n            } else {\n              color = \"default\";\n            }\n            this.dictPriority.forEach(e => {\n              if (e.value == params.row.priority) {\n                text = e.title;\n              }\n            });\n            return h(\"div\", [\n              h(\n                \"Tag\",\n                {\n                  props: {\n                    color: color\n                  }\n                },\n                text\n              )\n            ]);\n          }\n        },\n        {\n          title: \"状态\",\n          key: \"isSuspended\",\n          align: \"center\",\n          width: 110,\n          render: (h, params) => {\n            if (!params.row.isSuspended) {\n              return h(\"div\", [\n                h(\"Badge\", {\n                  props: {\n                    status: \"success\",\n                    text: \"已激活\"\n                  }\n                })\n              ]);\n            } else if (params.row.isSuspended) {\n              return h(\"div\", [\n                h(\"Badge\", {\n                  props: {\n                    status: \"error\",\n                    text: \"已挂起\"\n                  }\n                })\n              ]);\n            }\n          },\n          filters: [\n            {\n              label: \"已激活\",\n              value: false\n            },\n            {\n              label: \"已挂起\",\n              value: true\n            }\n          ],\n          filterMultiple: false,\n          filterMethod(value, row) {\n            if (value) {\n              return row.isSuspended == true;\n            } else if (!value) {\n              return row.isSuspended == false;\n            }\n          }\n        },\n        {\n          title: \"创建时间\",\n          key: \"createTime\",\n          width: 180,\n          sortType: \"desc\",\n          sortable: true\n        },\n        {\n          title: \"操作\",\n          key: \"action\",\n          align: \"center\",\n          width: 320,\n          fixed: \"right\",\n          render: (h, params) => {\n            return h(\"div\", [\n              h(\n                \"Button\",\n                {\n                  props: {\n                    type: \"primary\",\n                    size: \"small\"\n                  },\n                  style: {\n                    marginRight: \"5px\"\n                  },\n                  on: {\n                    click: () => {\n                      this.detail(params.row);\n                    }\n                  }\n                },\n                \"申请详情\"\n              ),\n              h(\n                \"Button\",\n                {\n                  props: {\n                    size: \"small\",\n                    type: \"success\"\n                  },\n                  style: {\n                    marginRight: \"5px\"\n                  },\n                  on: {\n                    click: () => {\n                      this.passTask(params.row);\n                    }\n                  }\n                },\n                \"通过\"\n              ),\n              h(\n                \"Button\",\n                {\n                  props: {\n                    size: \"small\",\n                    type: \"warning\"\n                  },\n                  style: {\n                    marginRight: \"5px\"\n                  },\n                  on: {\n                    click: () => {\n                      this.backTask(params.row);\n                    }\n                  }\n                },\n                \"驳回\"\n              ),\n              h(\n                \"Button\",\n                {\n                  props: {\n                    size: \"small\"\n                  },\n                  style: {\n                    marginRight: \"5px\"\n                  },\n                  on: {\n                    click: () => {\n                      this.delegateTask(params.row);\n                    }\n                  }\n                },\n                \"委托\"\n              ),\n              h(\n                \"Button\",\n                {\n                  props: {\n                    size: \"small\",\n                    type: \"info\"\n                  },\n                  style: {\n                    marginRight: \"5px\"\n                  },\n                  on: {\n                    click: () => {\n                      this.history(params.row);\n                    }\n                  }\n                },\n                \"历史\"\n              )\n            ]);\n          }\n        }\n      ],\n      data: [], // 表单数据\n      total: 0, // 表单数据总数\n      dictPriority: [],\n      isEG: false\n    };\n  },\n  methods: {\n    init() {\n      this.getDictDataType();\n      this.getDataList();\n    },\n    getDictDataType() {\n      getDictDataByType(\"priority\").then(res => {\n        if (res.success) {\n          this.dictPriority = res.result;\n        }\n      });\n    },\n    searchUser(v) {\n      if (!v) {\n        return;\n      }\n      this.userLoading = true;\n      searchUserByName(v).then(res => {\n        this.userLoading = false;\n        if (res.success) {\n          this.userList = res.result;\n        }\n      });\n    },\n    changeSort(e) {\n      this.searchForm.sort = e.key;\n      this.searchForm.order = e.order;\n      if (e.order == \"normal\") {\n        this.searchForm.order = \"\";\n      }\n      this.getDataList();\n    },\n    changePage(v) {\n      this.searchForm.pageNumber = v;\n      this.getDataList();\n      this.clearSelectAll();\n    },\n    changePageSize(v) {\n      this.searchForm.pageSize = v;\n      this.getDataList();\n    },\n    getDataList() {\n      this.loading = true;\n      todoList(this.searchForm).then(res => {\n        this.loading = false;\n        if (res.success) {\n          this.data = res.result.content;\n          this.total = res.result.totalElements;\n        }\n      });\n    },\n    handleSearch() {\n      this.searchForm.pageNumber = 1;\n      this.searchForm.pageSize = 10;\n      this.getDataList();\n    },\n    handleReset() {\n      this.$refs.searchForm.resetFields();\n      this.searchForm.pageNumber = 1;\n      this.searchForm.pageSize = 10;\n      // 重新加载数据\n      this.getDataList();\n    },\n    showSelect(e) {\n      this.selectList = e;\n      this.selectCount = e.length;\n    },\n    clearSelectAll() {\n      this.$refs.table.selectAll(false);\n    },\n    handelSubmit() {\n      this.submitLoading = true;\n      if (this.form.type == 0) {\n        // 通过\n        if (this.showAssign && this.form.assignees.length < 1) {\n          this.error = \"请至少选择一个审批人\";\n          this.submitLoading = false;\n          return;\n        } else {\n          this.error = \"\";\n        }\n        pass(this.form).then(res => {\n          this.submitLoading = false;\n          if (res.success) {\n            this.$Message.success(\"操作成功\");\n            this.modalTaskVisible = false;\n            this.getDataList();\n          }\n        });\n      } else if (this.form.type == 1) {\n        // 驳回\n        if (this.form.backTaskKey == \"-1\") {\n          // 驳回至发起人\n          back(this.form).then(res => {\n            this.submitLoading = false;\n            if (res.success) {\n              this.$Message.success(\"操作成功\");\n              this.modalTaskVisible = false;\n              this.getDataList();\n            }\n          });\n        } else {\n          // 自定义驳回\n          if (this.form.backTaskKey != \"-1\" && this.form.assignees.length < 1) {\n            this.error = \"请至少选择一个审批人\";\n            this.submitLoading = false;\n            return;\n          } else {\n            this.error = \"\";\n          }\n          backToTask(this.form).then(res => {\n            this.submitLoading = false;\n            if (res.success) {\n              this.$Message.success(\"操作成功\");\n              this.modalTaskVisible = false;\n              this.getDataList();\n            }\n          });\n        }\n      } else if (this.form.type == 2) {\n        // 委托\n        if (!this.form.userId) {\n          this.error = \"请搜索选择一委托人\";\n          this.submitLoading = false;\n          return;\n        } else {\n          this.error = \"\";\n        }\n        delegate(this.form).then(res => {\n          this.submitLoading = false;\n          if (res.success) {\n            this.$Message.success(\"操作成功\");\n            this.modalTaskVisible = false;\n            this.getDataList();\n          }\n        });\n      }\n    },\n    detail(v) {\n      let query = {\n        id: v.tableId,\n        type: 3,\n        backRoute: this.$route.name\n      };\n      this.$router.push({\n        name: v.routeName,\n        query: query\n      });\n    },\n    passTask(v) {\n      this.modalTaskTitle = \"审批通过\";\n      this.form.id = v.id;\n      this.form.procInstId = v.procInstId;\n      this.form.priority = v.priority;\n      this.form.type = 0;\n      this.modalTaskVisible = true;\n      this.userLoading = true;\n      getNextNode(v.procInstId).then(res => {\n        this.userLoading = false;\n        if (res.success) {\n          if (res.result.type == 3) {\n            this.isEG = true;\n            this.showAssign = false;\n            return;\n          }\n          this.isEG = false;\n          if (res.result.users && res.result.users.length > 0) {\n            this.assigneeList = res.result.users;\n            // 默认勾选\n            let ids = [];\n            res.result.users.forEach(e => {\n              ids.push(e.id);\n            });\n            this.form.assignees = ids;\n            this.showAssign = true;\n          } else {\n            this.showAssign = false;\n          }\n        }\n      });\n    },\n    changeBackTask(v) {\n      if (v == \"-1\") {\n        return;\n      }\n      this.userLoading = true;\n      getNode(v).then(res => {\n        this.userLoading = false;\n        if (res.success) {\n          if (res.result.users && res.result.users.length > 0) {\n            this.assigneeList = res.result.users;\n            // 默认勾选\n            let ids = [];\n            res.result.users.forEach(e => {\n              ids.push(e.id);\n            });\n            this.form.assignees = ids;\n          }\n        }\n      });\n    },\n    backTask(v) {\n      this.modalTaskTitle = \"审批驳回\";\n      this.form.id = v.id;\n      this.form.procInstId = v.procInstId;\n      this.form.procDefId = v.procDefId;\n      this.form.priority = v.priority;\n      this.form.type = 1;\n      this.showAssign = false;\n      this.modalTaskVisible = true;\n      // 获取可驳回节点\n      this.backList = [\n        {\n          key: \"-1\",\n          name: \"发起人\"\n        }\n      ];\n      this.form.backTaskKey = \"-1\";\n      this.backLoading = true;\n      getBackList(v.procInstId).then(res => {\n        this.backLoading = false;\n        if (res.success) {\n          res.result.forEach(e => {\n            this.backList.push(e);\n          });\n        }\n      });\n    },\n    delegateTask(v) {\n      this.modalTaskTitle = \"委托他人代办\";\n      this.form.id = v.id;\n      this.form.procInstId = v.procInstId;\n      this.form.type = 2;\n      this.showAssign = false;\n      this.modalTaskVisible = true;\n    },\n    history(v) {\n      let query = { id: v.procInstId, backRoute: this.$route.name };\n      this.$router.push({\n        name: \"historic_detail\",\n        query: query\n      });\n    },\n    passAll() {\n      if (this.selectCount <= 0) {\n        this.$Message.warning(\"您还未选择要通过的数据\");\n        return;\n      }\n      // 批量通过\n      this.modalVisible = true;\n      this.$Modal.confirm({\n        title: \"确认通过\",\n        content:\n          \"您确认要通过所选的 \" +\n          this.selectCount +\n          \" 条数据? 注意：将默认分配给节点设定的所有可审批用户\",\n        loading: true,\n        onOk: () => {\n          let ids = \"\";\n          this.selectList.forEach(function(e) {\n            ids += e.id + \",\";\n          });\n          ids = ids.substring(0, ids.length - 1);\n          passAll(ids).then(res => {\n            this.$Modal.remove();\n            if (res.success) {\n              this.$Message.success(\"操作成功\");\n              this.modalVisible = false;\n              this.clearSelectAll();\n              this.getDataList();\n            }\n          });\n        }\n      });\n    },\n    backAll() {\n      if (this.selectCount <= 0) {\n        this.$Message.warning(\"您还未选择要驳回的数据\");\n        return;\n      }\n      // 批量驳回\n      this.modalVisible = true;\n      this.$Modal.confirm({\n        title: \"确认驳回\",\n        content:\n          \"您确认要驳回所选的 \" +\n          this.selectCount +\n          \" 条数据? 注意：所有流程将驳回至发起人\",\n        loading: true,\n        onOk: () => {\n          let procInstIds = \"\";\n          this.selectList.forEach(function(e) {\n            procInstIds += e.procInstId + \",\";\n          });\n          procInstIds = procInstIds.substring(0, procInstIds.length - 1);\n          backAll(procInstIds).then(res => {\n            this.$Modal.remove();\n            if (res.success) {\n              this.$Message.success(\"操作成功\");\n              this.modalVisible = false;\n              this.clearSelectAll();\n              this.getDataList();\n            }\n          });\n        }\n      });\n    }\n  },\n  mounted() {\n    this.init();\n  },\n  watch: {\n    // 监听路由变化\n    $route(to, from) {\n      if (to.name == \"todo-manage\") {\n        this.getDataList();\n      }\n    }\n  }\n};\n</script>"]}]}