{"remainingRequest":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/src/views/activiti/process-manage/processManage.vue?vue&type=style&index=0&lang=less&","dependencies":[{"path":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/src/views/activiti/process-manage/processManage.vue","mtime":1577168504902},{"path":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/less-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CkBpbXBvcnQgIi4uLy4uLy4uL3N0eWxlcy90YWJsZS1jb21tb24ubGVzcyI7CkBpbXBvcnQgIi4vcHJvY2Vzc01hbmFnZS5sZXNzIjsK"},{"version":3,"sources":["processManage.vue"],"names":[],"mappings":";AACA;AACA","file":"processManage.vue","sourceRoot":"src/views/activiti/process-manage","sourcesContent":["<style lang=\"less\">\n@import \"../../../styles/table-common.less\";\n@import \"./processManage.less\";\n</style>\n<template>\n  <div class=\"search\">\n    <Card>\n      <Row v-show=\"openSearch\" @keydown.enter.native=\"handleSearch\">\n        <Form ref=\"searchForm\" :model=\"searchForm\" inline :label-width=\"70\">\n          <Form-item label=\"流程名称\" prop=\"name\">\n            <Input\n              type=\"text\"\n              v-model=\"searchForm.name\"\n              placeholder=\"请输入名称\"\n              clearable\n              style=\"width: 200px\"\n            />\n          </Form-item>\n          <Form-item label=\"标识Key\" prop=\"processKey\">\n            <Input\n              type=\"text\"\n              v-model=\"searchForm.processKey\"\n              placeholder=\"请输入标识\"\n              clearable\n              style=\"width: 200px\"\n            />\n          </Form-item>\n          <Form-item label=\"部署时间\">\n            <DatePicker\n              v-model=\"selectDate\"\n              type=\"daterange\"\n              format=\"yyyy-MM-dd\"\n              clearable\n              @on-change=\"selectDateRange\"\n              placeholder=\"选择起始时间\"\n              style=\"width: 200px\"\n            ></DatePicker>\n          </Form-item>\n          <Form-item style=\"margin-left:-35px;\" class=\"br\">\n            <Button @click=\"handleSearch\" type=\"primary\" icon=\"ios-search\">搜索</Button>\n            <Button @click=\"handleReset\">重置</Button>\n          </Form-item>\n        </Form>\n      </Row>\n      <Row class=\"operation\">\n        <Button @click=\"deploy\" type=\"primary\" icon=\"md-cloud-upload\">部署流程文件</Button>\n        <Button @click=\"delAll\" icon=\"md-trash\">批量删除</Button>\n        <Button @click=\"getDataList\" icon=\"md-refresh\">刷新</Button>\n        <i-switch\n          size=\"large\"\n          v-model=\"searchForm.showLatest\"\n          @on-change=\"getDataList\"\n          style=\"margin:0 5px\"\n        >\n          <span slot=\"open\">最新</span>\n          <span slot=\"close\">全部</span>\n        </i-switch>\n        <Button type=\"dashed\" @click=\"openSearch=!openSearch\">{{openSearch ? \"关闭搜索\" : \"开启搜索\"}}</Button>\n        <Button type=\"dashed\" @click=\"openTip=!openTip\">{{openTip ? \"关闭提示\" : \"开启提示\"}}</Button>\n      </Row>\n      <Row v-show=\"openTip\">\n        <Alert show-icon>\n          已选择\n          <span class=\"select-count\">{{selectCount}}</span> 项\n          <a class=\"select-clear\" @click=\"clearSelectAll\">清空</a>\n          <span style=\"margin-left:20px\">说明：当有多个相同标识的流程时，默认仅显示其最新版本</span>\n        </Alert>\n      </Row>\n      <Row>\n        <Table\n          :loading=\"loading\"\n          border\n          :columns=\"columns\"\n          :data=\"data\"\n          sortable=\"custom\"\n          @on-sort-change=\"changeSort\"\n          @on-selection-change=\"showSelect\"\n          ref=\"table\"\n        ></Table>\n      </Row>\n      <Row type=\"flex\" justify=\"end\" class=\"page\">\n        <Page\n          :current=\"searchForm.pageNumber\"\n          :total=\"total\"\n          :page-size=\"searchForm.pageSize\"\n          @on-change=\"changePage\"\n          @on-page-size-change=\"changePageSize\"\n          :page-size-opts=\"[10,20,50]\"\n          size=\"small\"\n          show-total\n          show-elevator\n          show-sizer\n        ></Page>\n      </Row>\n    </Card>\n\n    <!-- 部署流程文件 -->\n    <Modal title=\"部署流程文件\" footer-hide v-model=\"modalVisible\" :mask-closable=\"false\" :width=\"500\">\n      <Upload\n        :action=\"deployByFileUrl\"\n        :headers=\"accessToken\"\n        :on-success=\"handleSuccess\"\n        :on-error=\"handleError\"\n        :format=\"['zip','bar','bpmn','xml']\"\n        :max-size=\"5120\"\n        :on-format-error=\"handleFormatError\"\n        :on-exceeded-size=\"handleMaxSize\"\n        type=\"drag\"\n        ref=\"up\"\n      >\n        <div style=\"padding: 20px 0\">\n          <Icon type=\"ios-cloud-upload\" size=\"52\" style=\"color: #3399ff\"></Icon>\n          <p>点击这里或将文件拖拽到这里上传</p>请选择BPMN文件，仅支持zip、bpmn20.xml、bar、bpmn格式文件\n        </div>\n      </Upload>\n    </Modal>\n    <!-- 编辑分类或备注 -->\n    <Modal title=\"编辑流程信息\" v-model=\"editModalVisible\" :mask-closable=\"false\" :width=\"500\">\n      <Form ref=\"form\" :model=\"form\" :label-width=\"110\" :rules=\"formValidate\">\n        <FormItem label=\"流程分类\">\n          <div style=\"display:flex;\">\n            <Input\n              v-model=\"categoryTitle\"\n              readonly\n              clearable\n              @on-clear=\"clearSelectCat\"\n              style=\"margin-right:10px;\"\n            />\n            <Poptip trigger=\"click\" placement=\"right\" title=\"选择类别\" width=\"250\">\n              <Button icon=\"md-list\">选择分类</Button>\n              <div slot=\"content\">\n                <Input\n                  v-model=\"searchKey\"\n                  suffix=\"ios-search\"\n                  @on-change=\"searchCat\"\n                  placeholder=\"输入分类名搜索\"\n                  clearable\n                />\n                <div class=\"tree-list\">\n                  <Tree\n                    :data=\"dataCat\"\n                    :load-data=\"loadDataTree\"\n                    :render=\"renderContent\"\n                    @on-select-change=\"selectTree\"\n                  ></Tree>\n                  <Spin size=\"large\" fix v-if=\"catLoading\"></Spin>\n                </div>\n              </div>\n            </Poptip>\n          </div>\n        </FormItem>\n        <FormItem label=\"关联表单路由\" prop=\"routeName\">\n          <Select v-model=\"form.routeName\" placeholder=\"请选择关联业务表单前端路由名\" clearable>\n            <Option v-for=\"(item, i) in dictForm\" :key=\"i\" :value=\"item.value\" :label=\"item.title\">\n              <span style=\"margin-right:10px;\">{{ item.title }}</span>\n              <span style=\"color:#ccc;\">{{ item.value }}</span>\n            </Option>\n          </Select>\n        </FormItem>\n        <FormItem label=\"关联业务表\" prop=\"businessTable\">\n          <Select v-model=\"form.businessTable\" placeholder=\"请选择关联数据库业务表\" clearable>\n            <Option v-for=\"(item, i) in dictTable\" :key=\"i\" :value=\"item.value\" :label=\"item.title\">\n              <span style=\"margin-right:10px;\">{{ item.title }}</span>\n              <span style=\"color:#ccc;\">{{ item.value }}</span>\n            </Option>\n          </Select>\n        </FormItem>\n        <FormItem label=\"备注描述\" prop=\"description\">\n          <Input v-model=\"form.description\" />\n        </FormItem>\n      </Form>\n      <div slot=\"footer\">\n        <Button type=\"text\" @click=\"editModalVisible=false\">取消</Button>\n        <Button type=\"primary\" :loading=\"submitLoading\" @click=\"handelSubmitEdit\">提交</Button>\n      </div>\n    </Modal>\n    <!-- 图片预览 -->\n    <Modal :title=\"viewTitle\" v-model=\"viewImage\" draggable width=\"800\">\n      <img :src=\"diagramUrl\" alt=\"无效的图片链接\" style=\"width: 100%;margin: 0 auto;display: block;\" />\n      <div slot=\"footer\">\n        <Button @click=\"viewImage=false\" style=\"margin-right:5px\">关闭</Button>\n        <Button :to=\"diagramUrl\" target=\"_blank\" type=\"primary\">下载</Button>\n      </div>\n    </Modal>\n  </div>\n</template>\n\n<script>\nimport {\n  getProcessDataList,\n  updateInfo,\n  updateStatus,\n  deployByFile,\n  exportResource,\n  convertToModel,\n  deleteProcess,\n  initActCategory,\n  loadActCategory,\n  searchActCategory\n} from \"@/api/activiti\";\nimport { getDictDataByType } from \"@/api/index\";\n\nexport default {\n  name: \"process-manage\",\n\n  data() {\n    return {\n      openSearch: true,\n      openTip: true,\n      accessToken: {},\n      deployByFileUrl: \"\",\n      loading: true, // 表单加载状态\n      selectCount: 0, // 多选计数\n      selectList: [], // 多选数据\n      viewImage: false,\n      viewTitle: \"流程图片预览\",\n      diagramUrl: \"\",\n      searchForm: {\n        // 搜索框对应data对象\n        showLatest: true,\n        name: \"\",\n        processKey: \"\",\n        status: \"\",\n        pageNumber: 1, // 当前页数\n        pageSize: 10, // 页面大小\n        sort: \"createTime\", // 默认排序字段\n        order: \"desc\", // 默认排序方式\n        startDate: \"\", // 起始时间\n        endDate: \"\" // 终止时间\n      },\n      selectDate: null, // 选择日期绑定modal\n      modalVisible: false,\n      editModalVisible: false,\n      dataCat: [],\n      catLoading: false,\n      searchKey: \"\",\n      form: {\n        routeName: \"\",\n        businessTable: \"\",\n        description: \"\"\n      },\n      formValidate: {\n        routeName: [{ required: true, message: \"不能为空\", trigger: \"blur\" }],\n        businessTable: [\n          { required: true, message: \"不能为空\", trigger: \"blur\" }\n        ]\n      },\n      categoryTitle: \"\",\n      submitLoading: false, // 添加或编辑提交状态\n      columns: [\n        // 表头\n        {\n          type: \"selection\",\n          width: 60,\n          align: \"center\"\n        },\n        {\n          type: \"index\",\n          width: 60,\n          align: \"center\"\n        },\n        {\n          title: \"名称\",\n          key: \"name\",\n          minWidth: 150,\n          sortable: true\n        },\n        {\n          title: \"标识Key\",\n          key: \"processKey\",\n          width: 130,\n          sortable: true\n        },\n        {\n          title: \"版本\",\n          key: \"version\",\n          width: 90,\n          align: \"center\",\n          sortable: true,\n          render: (h, params) => {\n            let re = \"\";\n            if (params.row.version) {\n              re = \"v.\" + params.row.version;\n            }\n            return h(\"div\", re);\n          }\n        },\n        {\n          title: \"流程图片\",\n          key: \"diagramName\",\n          width: 160,\n          sortable: true,\n          render: (h, params) => {\n            return h(\"div\", [\n              h(\n                \"a\",\n                {\n                  on: {\n                    click: () => {\n                      this.showResource(1, params.row);\n                    }\n                  }\n                },\n                params.row.diagramName\n              )\n            ]);\n          }\n        },\n        {\n          title: \"流程XML\",\n          key: \"xmlName\",\n          width: 160,\n          sortable: true,\n          render: (h, params) => {\n            return h(\"div\", [\n              h(\n                \"a\",\n                {\n                  on: {\n                    click: () => {\n                      this.showResource(0, params.row);\n                    }\n                  }\n                },\n                params.row.xmlName\n              )\n            ]);\n          }\n        },\n        {\n          title: \"关联表单路由名\",\n          key: \"routeName\",\n          width: 160,\n          sortable: true,\n          render: (h, params) => {\n            let re = \"\";\n            this.dictForm.forEach(e => {\n              if (e.value == params.row.routeName) {\n                re = `${e.title} (${e.value})`;\n              }\n            });\n            return h(\"div\", re);\n          }\n        },\n        {\n          title: \"数据库业务表\",\n          key: \"businessTable\",\n          width: 170,\n          sortable: true,\n          render: (h, params) => {\n            let re = \"\";\n            this.dictTable.forEach(e => {\n              if (e.value == params.row.businessTable) {\n                re = `${e.title} (${e.value})`;\n              }\n            });\n            return h(\"div\", re);\n          }\n        },\n        {\n          title: \"所属分类\",\n          key: \"categoryTitle\",\n          width: 130,\n          sortable: true\n        },\n        {\n          title: \"状态\",\n          key: \"status\",\n          align: \"center\",\n          width: 130,\n          render: (h, params) => {\n            if (params.row.status == 1) {\n              return h(\"div\", [\n                h(\"Badge\", {\n                  props: {\n                    status: \"success\",\n                    text: \"已激活\"\n                  }\n                })\n              ]);\n            } else if (params.row.status == 0) {\n              return h(\"div\", [\n                h(\"Badge\", {\n                  props: {\n                    status: \"error\",\n                    text: \"已挂起\"\n                  }\n                })\n              ]);\n            }\n          },\n          filters: [\n            {\n              label: \"已激活\",\n              value: 1\n            },\n            {\n              label: \"已挂起\",\n              value: 0\n            }\n          ],\n          filterMultiple: false,\n          filterMethod(value, row) {\n            if (value == 0) {\n              return row.status == 0;\n            } else if (value == 1) {\n              return row.status == 1;\n            }\n          }\n        },\n        {\n          title: \"备注描述\",\n          key: \"description\",\n          width: 150,\n          sortable: true\n        },\n        {\n          title: \"部署时间\",\n          key: \"createTime\",\n          width: 180,\n          sortable: true,\n          sortType: \"desc\"\n        },\n        {\n          title: \"更新时间\",\n          key: \"updateTime\",\n          width: 180,\n          sortable: true\n        },\n        {\n          title: \"操作\",\n          key: \"action\",\n          width: 365,\n          align: \"center\",\n          fixed: \"right\",\n          render: (h, params) => {\n            let suspendOrActive = \"\";\n            if (params.row.status == 0) {\n              // 挂起可激活\n              suspendOrActive = h(\n                \"Button\",\n                {\n                  props: {\n                    type: \"success\",\n                    size: \"small\",\n                    icon: \"md-play\"\n                  },\n                  style: {\n                    marginRight: \"5px\"\n                  },\n                  on: {\n                    click: () => {\n                      this.editStatus(1, params.row);\n                    }\n                  }\n                },\n                \"激活\"\n              );\n            } else {\n              // 激活可挂起\n              suspendOrActive = h(\n                \"Button\",\n                {\n                  props: {\n                    type: \"warning\",\n                    size: \"small\",\n                    icon: \"md-pause\"\n                  },\n                  style: {\n                    marginRight: \"5px\"\n                  },\n                  on: {\n                    click: () => {\n                      this.editStatus(0, params.row);\n                    }\n                  }\n                },\n                \"挂起\"\n              );\n            }\n            return h(\"div\", [\n              suspendOrActive,\n              h(\n                \"Button\",\n                {\n                  props: {\n                    type: \"primary\",\n                    size: \"small\",\n                    icon: \"logo-buffer\"\n                  },\n                  style: {\n                    marginRight: \"5px\"\n                  },\n                  on: {\n                    click: () => {\n                      this.editNode(params.row);\n                    }\n                  }\n                },\n                \"节点设置\"\n              ),\n              h(\n                \"Button\",\n                {\n                  props: {\n                    size: \"small\"\n                  },\n                  style: {\n                    marginRight: \"5px\"\n                  },\n                  on: {\n                    click: () => {\n                      this.edit(params.row);\n                    }\n                  }\n                },\n                \"编辑\"\n              ),\n              h(\n                \"Button\",\n                {\n                  props: {\n                    type: \"info\",\n                    size: \"small\"\n                  },\n                  style: {\n                    marginRight: \"5px\"\n                  },\n                  on: {\n                    click: () => {\n                      this.convert(params.row);\n                    }\n                  }\n                },\n                \"转模型\"\n              ),\n              h(\n                \"Button\",\n                {\n                  props: {\n                    type: \"error\",\n                    size: \"small\"\n                  },\n                  on: {\n                    click: () => {\n                      this.remove(params.row);\n                    }\n                  }\n                },\n                \"删除\"\n              )\n            ]);\n          }\n        }\n      ],\n      data: [], // 表单数据\n      total: 0, // 表单数据总数\n      dictTable: [],\n      dictForm: []\n    };\n  },\n  methods: {\n    init() {\n      this.accessToken = {\n        accessToken: this.getStore(\"accessToken\")\n      };\n      this.deployByFileUrl = deployByFile;\n      this.getDataList();\n      this.initCategoryTreeData();\n      this.getDictDataType();\n    },\n    getDictDataType() {\n      getDictDataByType(\"business_table\").then(res => {\n        if (res.success) {\n          this.dictTable = res.result;\n        }\n      });\n      getDictDataByType(\"business_form\").then(res => {\n        if (res.success) {\n          this.dictForm = res.result;\n        }\n      });\n    },\n    renderContent(h, { root, node, data }) {\n      let icon = \"\";\n      if (data.type == \"0\") {\n        icon = \"md-folder-open\";\n      } else if (data.type == \"1\") {\n        icon = \"ios-bookmark-outline\";\n      }\n      return h(\n        \"span\",\n        {\n          style: {\n            display: \"inline-block\",\n            cursor: \"pointer\"\n          },\n          on: {\n            click: () => {\n              this.selectTree(data);\n            }\n          }\n        },\n        [\n          h(\"span\", [\n            h(\"Icon\", {\n              props: {\n                type: icon,\n                size: \"16\"\n              },\n              style: {\n                \"margin-right\": \"8px\",\n                \"margin-bottom\": \"3px\"\n              }\n            }),\n            h(\"span\", data.title)\n          ])\n        ]\n      );\n    },\n    initCategoryTreeData() {\n      initActCategory().then(res => {\n        if (res.success) {\n          res.result.forEach(function(e) {\n            if (e.isParent) {\n              e.loading = false;\n              e.children = [];\n            }\n            if (e.status == -1) {\n              e.title = \"[已禁用] \" + e.title;\n              e.disabled = true;\n            }\n          });\n          this.dataCat = res.result;\n        }\n      });\n    },\n    loadDataTree(item, callback) {\n      loadActCategory(item.id).then(res => {\n        if (res.success) {\n          res.result.forEach(function(e) {\n            if (e.isParent) {\n              e.loading = false;\n              e.children = [];\n            }\n            if (e.status == -1) {\n              e.title = \"[已禁用] \" + e.title;\n              e.disabled = true;\n            }\n          });\n          callback(res.result);\n        }\n      });\n    },\n    searchCat() {\n      // 搜索部门\n      if (this.searchKey) {\n        this.catLoading = true;\n        searchActCategory({ title: this.searchKey }).then(res => {\n          this.catLoading = false;\n          if (res.success) {\n            res.result.forEach(function(e) {\n              if (e.status == -1) {\n                e.title = \"[已禁用] \" + e.title;\n                e.disabled = true;\n              }\n            });\n            this.dataCat = res.result;\n          }\n        });\n      } else {\n        this.initCategoryTreeData();\n      }\n    },\n    selectTree(v) {\n      if (v) {\n        // 转换null为\"\"\n        for (let attr in v) {\n          if (v[attr] == null) {\n            v[attr] = \"\";\n          }\n        }\n        let str = JSON.stringify(v);\n        let data = JSON.parse(str);\n        if (data.type == 0) {\n          this.$Message.warning(\"请选择一个类别\");\n          return;\n        }\n        this.form.categoryId = data.id;\n        this.categoryTitle = data.title;\n      }\n    },\n    clearSelectCat() {\n      this.form.categoryId = \"\";\n      this.categoryTitle = \"\";\n    },\n    changePage(v) {\n      this.searchForm.pageNumber = v;\n      this.getDataList();\n      this.clearSelectAll();\n    },\n    changePageSize(v) {\n      this.searchForm.pageSize = v;\n      this.getDataList();\n    },\n    selectDateRange(v) {\n      if (v) {\n        this.searchForm.startDate = v[0];\n        this.searchForm.endDate = v[1];\n      }\n    },\n    getDataList() {\n      this.loading = true;\n      getProcessDataList(this.searchForm).then(res => {\n        this.loading = false;\n        if (res.success) {\n          this.data = res.result.content;\n          this.total = res.result.totalElements;\n        }\n      });\n    },\n    handleSearch() {\n      this.searchForm.pageNumber = 1;\n      this.searchForm.pageSize = 10;\n      this.getDataList();\n    },\n    handleReset() {\n      this.$refs.searchForm.resetFields();\n      this.searchForm.pageNumber = 1;\n      this.searchForm.pageSize = 10;\n      this.selectDate = null;\n      this.searchForm.startDate = \"\";\n      this.searchForm.endDate = \"\";\n      // 重新加载数据\n      this.getDataList();\n    },\n    changeSort(e) {\n      this.searchForm.sort = e.key;\n      this.searchForm.order = e.order;\n      if (e.order == \"normal\") {\n        this.searchForm.order = \"\";\n      }\n      this.getDataList();\n    },\n    deploy(v) {\n      this.modalVisible = true;\n    },\n    handleFormatError(file) {\n      this.$Notice.warning({\n        title: \"不支持的文件格式\",\n        desc:\n          \"所选文件‘ \" +\n          file.name +\n          \" ’格式不正确, 请选择 .zip .bar .bpmn .bpmn20.xml格式文件\"\n      });\n    },\n    handleMaxSize(file) {\n      this.$Notice.warning({\n        title: \"文件大小过大\",\n        desc: \"所选文件‘ \" + file.name + \" ’大小过大, 不得超过 5M.\"\n      });\n    },\n    handleSuccess(res, file) {\n      if (res.success) {\n        this.$Message.success(\"部署成功，请继续编辑完善流程信息\");\n        this.modalVisible = false;\n        this.getDataList();\n      } else {\n        this.$Message.error(res.message);\n      }\n    },\n    handleError(error, file, fileList) {\n      this.$Message.error(error.toString());\n    },\n    edit(v) {\n      this.$refs.form.resetFields();\n      // 转换null为\"\"\n      for (let attr in v) {\n        if (v[attr] == null) {\n          v[attr] = \"\";\n        }\n      }\n      let str = JSON.stringify(v);\n      let data = JSON.parse(str);\n      this.form = data;\n      this.categoryTitle = data.categoryTitle;\n      this.editModalVisible = true;\n    },\n    editNode(v) {\n      let query = { id: v.id, name: v.name, backRoute: this.$route.name };\n      this.$router.push({\n        name: \"process_node_edit\",\n        query: query\n      });\n    },\n    handelSubmitEdit() {\n      this.$refs.form.validate(valid => {\n        if (valid) {\n          this.submitLoading = true;\n          updateInfo(this.form).then(res => {\n            this.submitLoading = false;\n            if (res.success) {\n              this.$Message.success(\"操作成功\");\n              this.getDataList();\n              this.editModalVisible = false;\n            }\n          });\n        }\n      });\n    },\n    editStatus(status, v) {\n      let operation = \"\";\n      if (status == 0) {\n        operation = \"暂停挂起\";\n      } else {\n        operation = \"激活运行\";\n      }\n      this.$Modal.confirm({\n        title: \"确认\" + operation,\n        content: `您确认要${operation}流程${v.name}?`,\n        loading: true,\n        onOk: () => {\n          let params = {\n            status: status,\n            id: v.id\n          };\n          updateStatus(params).then(res => {\n            this.$Modal.remove();\n            if (res.success) {\n              this.$Message.success(\"操作成功\");\n              this.getDataList();\n            }\n          });\n        }\n      });\n    },\n    convert(v) {\n      let that = this;\n      this.$Modal.confirm({\n        title: \"确认转化\",\n        content: \"您确认要转化流程 \" + v.name + \" 为模型?\",\n        loading: true,\n        onOk: () => {\n          convertToModel(v.id).then(res => {\n            this.$Modal.remove();\n            if (res.success) {\n              setTimeout(function() {\n                that.showJump();\n              }, 300);\n            }\n          });\n        }\n      });\n    },\n    showJump() {\n      this.$Modal.confirm({\n        title: \"转化成功\",\n        content: \"是否立即跳转查看该模型?\",\n        onOk: () => {\n          this.$router.push({\n            name: \"model-manage\"\n          });\n        }\n      });\n    },\n    showResource(type, v) {\n      if (type == 0) {\n        window.open(\n          `${exportResource}?id=${\n            v.id\n          }&type=${type}&accessToken=${this.getStore(\"accessToken\")}`\n        );\n      } else if (type == 1) {\n        this.viewTitle = \"流程图片预览(\" + v.diagramName + \")\";\n        this.diagramUrl = `${exportResource}?id=${\n          v.id\n        }&type=${type}&accessToken=${this.getStore(\"accessToken\")}`;\n        this.viewImage = true;\n      }\n    },\n    remove(v) {\n      this.$Modal.confirm({\n        title: \"确认删除\",\n        content: \"您确认要删除流程 \" + v.name + \" ?\",\n        loading: true,\n        onOk: () => {\n          deleteProcess(v.id).then(res => {\n            this.$Modal.remove();\n            if (res.success) {\n              this.$Message.success(\"操作成功\");\n              this.getDataList();\n            }\n          });\n        }\n      });\n    },\n    showSelect(e) {\n      this.selectList = e;\n      this.selectCount = e.length;\n    },\n    clearSelectAll() {\n      this.$refs.table.selectAll(false);\n    },\n    delAll() {\n      if (this.selectCount <= 0) {\n        this.$Message.warning(\"您还未选择要删除的数据\");\n        return;\n      }\n      this.$Modal.confirm({\n        title: \"确认删除\",\n        content: \"您确认要删除所选的 \" + this.selectCount + \" 条数据?\",\n        loading: true,\n        onOk: () => {\n          let ids = \"\";\n          this.selectList.forEach(function(e) {\n            ids += e.id + \",\";\n          });\n          ids = ids.substring(0, ids.length - 1);\n          deleteProcess(ids).then(res => {\n            this.$Modal.remove();\n            if (res.success) {\n              this.$Message.success(\"操作成功\");\n              this.clearSelectAll();\n              this.getDataList();\n            }\n          });\n        }\n      });\n    }\n  },\n  mounted() {\n    this.init();\n  },\n  watch: {\n    // 监听路由变化\n    $route(to, from) {\n      if (to.name == \"process-manage\") {\n        this.getDataList();\n      }\n    }\n  }\n};\n</script>"]}]}