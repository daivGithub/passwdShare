{"remainingRequest":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/src/views/my-components/share/quill.vue?vue&type=style&index=0&lang=less&","dependencies":[{"path":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/src/views/my-components/share/quill.vue","mtime":1577168504910},{"path":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/less-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLnEtbWVudSB7CiAgbWFyZ2luOiAwIDNweDsKICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7CiAgY3Vyc29yOiBwb2ludGVyOwogIGNvbG9yOiAjNDQ0OwogIDpob3ZlciB7CiAgICBjb2xvcjogIzA2YzsKICB9Cn0KLnEtdHJhc2ggewogIG1hcmdpbi1ib3R0b206IDNweDsKfQoucWwtdG9vbHRpcCB7CiAgbGVmdDogMzAlICFpbXBvcnRhbnQ7Cn0K"},{"version":3,"sources":["quill.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2QA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"quill.vue","sourceRoot":"src/views/my-components/share","sourcesContent":["<template>\n  <div>\n    <div id=\"toolbar\">\n      <button class=\"ql-bold\" title=\"粗体\"></button>\n      <button class=\"ql-italic\" title=\"斜体\"></button>\n      <button class=\"ql-underline\" title=\"下划线\"></button>\n      <button class=\"ql-strike\" title=\"删除线\"></button>\n      <select class=\"ql-size\" title=\"字体大小\">\n        <option value=\"small\"></option>\n        <option selected></option>\n        <option value=\"large\"></option>\n        <option value=\"huge\"></option>\n      </select>\n      <select class=\"ql-header\" title=\"标题大小\">\n        <option value=\"1\"></option>\n        <option value=\"2\"></option>\n        <option value=\"3\"></option>\n        <option value=\"4\"></option>\n        <option value=\"5\"></option>\n        <option value=\"6\"></option>\n        <option selected></option>\n      </select>\n      <select class=\"ql-font\" title=\"字体\"></select>\n      <select class=\"ql-align\" title=\"对齐方式\"></select>\n      <select class=\"ql-color\" title=\"字体颜色\"></select>\n      <select class=\"ql-background\" title=\"背景颜色\"></select>\n      <button class=\"ql-blockquote\" title=\"引用\"></button>\n      <button class=\"ql-code-block\" title=\"代码块\"></button>\n      <button class=\"ql-list\" value=\"ordered\" title=\"数字列表\"></button>\n      <button class=\"ql-list\" value=\"bullet\" title=\"点列表\"></button>\n      <button class=\"ql-script\" value=\"sub\" title=\"右下标\"></button>\n      <button class=\"ql-script\" value=\"super\" title=\"右上标\"></button>\n      <button class=\"ql-indent\" value=\"-1\" title=\"向左缩进\"></button>\n      <button class=\"ql-indent\" value=\"+1\" title=\"向右缩进\"></button>\n      <button class=\"ql-clean\" title=\"清空样式\"></button>\n\n      <button class=\"ql-link\" title=\"链接\"></button>\n      <button class=\"ql-image\" title=\"插入图片\" v-if=\"base64\"></button>\n      <div class=\"q-menu\" title=\"插入图片\" v-if=\"!base64\">\n        <Upload\n          :action=\"uploadFileUrl\"\n          :headers=\"accessToken\"\n          :on-success=\"handleSuccess\"\n          :on-error=\"handleError\"\n          :format=\"['jpg','jpeg','png','gif','bmp']\"\n          accept=\".jpg, .jpeg, .png, .gif, .bmp\"\n          :max-size=\"5120\"\n          :on-format-error=\"handleFormatError\"\n          :on-exceeded-size=\"handleMaxSize\"\n          :before-upload=\"beforeUpload\"\n          :show-upload-list=\"false\"\n          ref=\"qup\"\n        >\n          <Icon type=\"md-images\" size=\"20\" />\n        </Upload>\n      </div>\n      <button class=\"ql-video\" title=\"插入视频链接\"></button>\n      <div class=\"q-menu\" title=\"编辑HTML代码\" @click=\"editHTML\" v-if=\"expandHtml\">\n        <Icon type=\"md-code-working\" size=\"22\" />\n      </div>\n      <div class=\"q-menu\" title=\"预览\" @click=\"fullscreenModal=true\" v-if=\"expandPreview\">\n        <Icon type=\"ios-eye\" size=\"24\" />\n      </div>\n      <div class=\"q-menu q-trash\" title=\"清空\" @click=\"clear\" v-if=\"expandClear\">\n        <Icon type=\"md-trash\" size=\"18\" style=\"display: block;\" />\n      </div>\n    </div>\n\n    <div :id=\"id\" :style=\"{minHeight: minHeight}\"></div>\n\n    <Modal\n      title=\"编辑html代码\"\n      v-model=\"showHTMLModal\"\n      :mask-closable=\"false\"\n      :width=\"900\"\n      :fullscreen=\"full\"\n    >\n      <Input\n        v-if=\"!full\"\n        v-model=\"dataEdit\"\n        :rows=\"15\"\n        type=\"textarea\"\n        style=\"max-height:60vh;overflow:auto;\"\n      />\n      <Input v-if=\"full\" v-model=\"dataEdit\" :rows=\"32\" type=\"textarea\" />\n      <div slot=\"footer\">\n        <Button @click=\"full=!full\" icon=\"md-expand\">全屏开/关</Button>\n        <Button @click=\"editHTMLOk\" type=\"primary\" icon=\"md-checkmark-circle-outline\">确定保存</Button>\n      </div>\n    </Modal>\n    <Modal title=\"预览\" v-model=\"fullscreenModal\" fullscreen>\n      <div v-html=\"data\">{{data}}</div>\n      <div slot=\"footer\">\n        <Button @click=\"fullscreenModal=false\">关闭</Button>\n      </div>\n    </Modal>\n  </div>\n</template>\n\n<script>\nimport { uploadFile } from \"@/api/index\";\nimport Quill from \"quill\";\nimport \"quill/dist/quill.snow.css\";\nimport xss from \"xss\";\nvar editor = null;\nexport default {\n  name: \"editor\",\n  props: {\n    id: {\n      type: String,\n      default: \"quill\"\n    },\n    value: String,\n    base64: {\n      type: Boolean,\n      default: false\n    },\n    minHeight: {\n      type: String,\n      default: \"300px\"\n    },\n    expandHtml: {\n      type: Boolean,\n      default: true\n    },\n    expandPreview: {\n      type: Boolean,\n      default: true\n    },\n    expandClear: {\n      type: Boolean,\n      default: true\n    },\n    openXss: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    return {\n      accessToken: {},\n      uploadFileUrl: uploadFile,\n      editor: null,\n      options: {\n        theme: \"snow\",\n        modules: {\n          toolbar: \"#toolbar\"\n        },\n        placeholder: \"在这输入内容 ...\"\n      },\n      data: this.value, // 富文本数据\n      dataEdit: \"\", // 编辑数据\n      showHTMLModal: false, // 显示html\n      full: false, // html全屏开关\n      fullscreenModal: false // 显示全屏预览\n    };\n  },\n  methods: {\n    initEditor() {\n      this.accessToken = {\n        accessToken: this.getStore(\"accessToken\")\n      };\n      editor = new Quill(`#${this.id}`, this.options);\n      let that = this;\n      if (this.value) {\n        editor.pasteHTML(this.value);\n      }\n      editor.on(\"text-change\", function(delta, oldDelta, source) {\n        let html = editor.container.firstChild.innerHTML;\n        if (that.openXss) {\n          that.data = xss(html);\n        } else {\n          that.data = html;\n        }\n        that.$emit(\"input\", that.data);\n        that.$emit(\"on-change\", that.data);\n      });\n    },\n    handleFormatError(file) {\n      this.$Notice.warning({\n        title: \"不支持的文件格式\",\n        desc:\n          \"所选文件‘ \" +\n          file.name +\n          \" ’格式不正确, 请选择 .jpg .jpeg .png .gif .bmp格式文件\"\n      });\n    },\n    handleMaxSize(file) {\n      this.$Notice.warning({\n        title: \"文件大小过大\",\n        desc: \"所选文件‘ \" + file.name + \" ’大小过大, 不得超过 5M.\"\n      });\n    },\n    beforeUpload() {\n      return true;\n    },\n    handleSuccess(res, file) {\n      if (res.success) {\n        let url = res.result;\n        // 获取光标位置\n        let range = editor.getSelection(true);\n        // 总元素\n        let delta = editor.getContents().length;\n        let index;\n        if (range) {\n          index = range.index;\n        } else {\n          index = delta;\n        }\n        // 插入元素\n        editor.insertEmbed(index, \"image\", url);\n        editor.setSelection(index + 1, 0);\n      } else {\n        this.$Message.error(res.message);\n      }\n    },\n    handleError(error, file, fileList) {\n      this.$Message.error(error.toString());\n    },\n    editHTML() {\n      this.dataEdit = this.data;\n      this.showHTMLModal = true;\n    },\n    editHTMLOk() {\n      editor.pasteHTML(this.dataEdit);\n      this.$emit(\"input\", this.data);\n      this.$emit(\"on-change\", this.data);\n      this.showHTMLModal = false;\n    },\n    clear() {\n      this.$Modal.confirm({\n        title: \"确认清空\",\n        content: \"确认要清空编辑器内容？清空后不能撤回\",\n        onOk: () => {\n          this.data = \"\";\n          editor.pasteHTML(this.data);\n          this.$emit(\"input\", this.data);\n          this.$emit(\"on-change\", this.data);\n        }\n      });\n    },\n    setData(value) {\n      if (!editor) {\n        this.initEditor();\n      }\n      if (value && value != this.data) {\n        this.data = value;\n        let index = editor.selection.savedRange.index;\n        editor.pasteHTML(this.data);\n        editor.setSelection(index, 0);\n        this.$emit(\"input\", this.data);\n        this.$emit(\"on-change\", this.data);\n      }\n    }\n  },\n  watch: {\n    value(val) {\n      this.setData(val);\n    }\n  },\n  mounted() {\n    this.initEditor();\n  }\n};\n</script>\n\n<style lang=\"less\">\n.q-menu {\n  margin: 0 3px;\n  display: inline-block;\n  cursor: pointer;\n  color: #444;\n  :hover {\n    color: #06c;\n  }\n}\n.q-trash {\n  margin-bottom: 3px;\n}\n.ql-tooltip {\n  left: 30% !important;\n}\n</style>\n\n"]}]}