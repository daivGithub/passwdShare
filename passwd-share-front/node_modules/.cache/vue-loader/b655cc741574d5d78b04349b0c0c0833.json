{"remainingRequest":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/src/views/sys/redis/redis.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/src/views/sys/redis/redis.vue","mtime":1577168504917},{"path":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7CiAgZ2V0UmVkaXNEYXRhLAogIHNhdmVSZWRpcywKICBkZWxldGVSZWRpcywKICBkZWxldGVBbGxSZWRpcywKICBnZXRSZWRpc0J5S2V5Cn0gZnJvbSAiQC9hcGkvaW5kZXgiOwppbXBvcnQgcmVkaXNNb25pdG9yIGZyb20gIi4vcmVkaXNNb25pdG9yLnZ1ZSI7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAicmVkaXMtbm90Q2FjaGUiLAogIGNvbXBvbmVudHM6IHsKICAgIHJlZGlzTW9uaXRvcgogIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIG9wZW5TZWFyY2g6IHRydWUsCiAgICAgIG9wZW5UaXA6IHRydWUsCiAgICAgIGxvYWRpbmc6IHRydWUsIC8vIOihqOWNleWKoOi9veeKtuaAgQogICAgICBtb2RhbFR5cGU6IDAsIC8vIOa3u+WKoOaIlue8lui+keagh+ivhgogICAgICBtb2RhbFZpc2libGU6IGZhbHNlLCAvLyDmt7vliqDmiJbnvJbovpHmmL7npLoKICAgICAgbW9kYWxUaXRsZTogIiIsIC8vIOa3u+WKoOaIlue8lui+keagh+mimAogICAgICBzZWFyY2hGb3JtOiB7CiAgICAgICAgLy8g5pCc57Si5qGG5Yid5aeL5YyW5a+56LGhCiAgICAgICAgcGFnZU51bWJlcjogMSwgLy8g5b2T5YmN6aG15pWwCiAgICAgICAgcGFnZVNpemU6IDEwLCAvLyDpobXpnaLlpKflsI8KICAgICAgICBzb3J0OiAiY3JlYXRlVGltZSIsIC8vIOm7mOiupOaOkuW6j+Wtl+autQogICAgICAgIG9yZGVyOiAiZGVzYyIgLy8g6buY6K6k5o6S5bqP5pa55byPCiAgICAgIH0sCiAgICAgIGZvcm06IHsKICAgICAgICAvLyDmt7vliqDmiJbnvJbovpHooajljZXlr7nosaHliJ3lp4vljJbmlbDmja4KICAgICAgICBrZXk6ICIiLAogICAgICAgIHZhbHVlOiAiIgogICAgICB9LAogICAgICAvLyDooajljZXpqozor4Hop4TliJkKICAgICAgZm9ybVZhbGlkYXRlOiB7CiAgICAgICAga2V5OiBbeyByZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogIuS4jeiDveS4uuepuiIsIHRyaWdnZXI6ICJibHVyIiB9XSwKICAgICAgICB2YWx1ZTogW3sgcmVxdWlyZWQ6IHRydWUsIG1lc3NhZ2U6ICLkuI3og73kuLrnqboiLCB0cmlnZ2VyOiAiYmx1ciIgfV0KICAgICAgfSwKICAgICAgc3VibWl0TG9hZGluZzogZmFsc2UsIC8vIOa3u+WKoOaIlue8lui+keaPkOS6pOeKtuaAgQogICAgICBzZWxlY3RMaXN0OiBbXSwgLy8g5aSa6YCJ5pWw5o2uCiAgICAgIHNlbGVjdENvdW50OiAwLCAvLyDlpJrpgInorqHmlbAKICAgICAgY29sdW1uczogWwogICAgICAgIC8vIOihqOWktAogICAgICAgIHsKICAgICAgICAgIHR5cGU6ICJzZWxlY3Rpb24iLAogICAgICAgICAgd2lkdGg6IDYwLAogICAgICAgICAgYWxpZ246ICJjZW50ZXIiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICB0eXBlOiAiaW5kZXgiLAogICAgICAgICAgd2lkdGg6IDYwLAogICAgICAgICAgYWxpZ246ICJjZW50ZXIiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICB0aXRsZTogIktleSIsCiAgICAgICAgICBrZXk6ICJrZXkiLAogICAgICAgICAgbWluV2lkdGg6IDEwMCwKICAgICAgICAgIHNvcnRhYmxlOiB0cnVlCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICB0aXRsZTogIlZhbHVlIiwKICAgICAgICAgIGtleTogInZhbHVlIiwKICAgICAgICAgIG1pbldpZHRoOiAzMDAsCiAgICAgICAgICBlbGxpcHNpczogdHJ1ZQogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgdGl0bGU6ICLmk43kvZwiLAogICAgICAgICAga2V5OiAiYWN0aW9uIiwKICAgICAgICAgIGFsaWduOiAiY2VudGVyIiwKICAgICAgICAgIHdpZHRoOiAyMDAsCiAgICAgICAgICByZW5kZXI6IChoLCBwYXJhbXMpID0+IHsKICAgICAgICAgICAgcmV0dXJuIGgoImRpdiIsIFsKICAgICAgICAgICAgICBoKAogICAgICAgICAgICAgICAgIkJ1dHRvbiIsCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgIHByb3BzOiB7CiAgICAgICAgICAgICAgICAgICAgdHlwZTogInByaW1hcnkiLAogICAgICAgICAgICAgICAgICAgIHNpemU6ICJzbWFsbCIsCiAgICAgICAgICAgICAgICAgICAgaWNvbjogImlvcy1jcmVhdGUtb3V0bGluZSIKICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgc3R5bGU6IHsKICAgICAgICAgICAgICAgICAgICBtYXJnaW5SaWdodDogIjVweCIKICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgb246IHsKICAgICAgICAgICAgICAgICAgICBjbGljazogKCkgPT4gewogICAgICAgICAgICAgICAgICAgICAgdGhpcy5lZGl0KHBhcmFtcy5yb3cpOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICLnvJbovpEiCiAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICBoKAogICAgICAgICAgICAgICAgIkJ1dHRvbiIsCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgIHByb3BzOiB7CiAgICAgICAgICAgICAgICAgICAgdHlwZTogImVycm9yIiwKICAgICAgICAgICAgICAgICAgICBzaXplOiAic21hbGwiLAogICAgICAgICAgICAgICAgICAgIGljb246ICJtZC10cmFzaCIKICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgb246IHsKICAgICAgICAgICAgICAgICAgICBjbGljazogKCkgPT4gewogICAgICAgICAgICAgICAgICAgICAgdGhpcy5yZW1vdmUocGFyYW1zLnJvdyk7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgIuWIoOmZpCIKICAgICAgICAgICAgICApCiAgICAgICAgICAgIF0pOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgXSwKICAgICAgZGF0YTogW10sIC8vIOihqOWNleaVsOaNrgogICAgICBwYWdlTnVtYmVyOiAxLCAvLyDlvZPliY3pobXmlbAKICAgICAgcGFnZVNpemU6IDEwLCAvLyDpobXpnaLlpKflsI8KICAgICAgdG90YWw6IDAgLy8g6KGo5Y2V5pWw5o2u5oC75pWwCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgaW5pdCgpIHsKICAgICAgdGhpcy5nZXREYXRhTGlzdCgpOwogICAgfSwKICAgIGhhbmRsZUNsaWNrVGFiKG5hbWUpIHsKICAgICAgaWYgKG5hbWUgPT0gIm1vbml0b3IiKSB7CiAgICAgICAgdGhpcy4kTWVzc2FnZS5pbmZvKCLmr4/pmpQ156eS5Yi35paw5LiA5qyh5pWw5o2u77yM6K+36ICQ5b+D562J5b6F5Zu+6KGo57uY5Yi2Iik7CiAgICAgIH0KICAgIH0sCiAgICBjaGFuZ2VQYWdlKHYpIHsKICAgICAgdGhpcy5zZWFyY2hGb3JtLnBhZ2VOdW1iZXIgPSB2OwogICAgICB0aGlzLmdldERhdGFMaXN0KCk7CiAgICAgIHRoaXMuY2xlYXJTZWxlY3RBbGwoKTsKICAgIH0sCiAgICBjaGFuZ2VQYWdlU2l6ZSh2KSB7CiAgICAgIHRoaXMuc2VhcmNoRm9ybS5wYWdlU2l6ZSA9IHY7CiAgICAgIHRoaXMuZ2V0RGF0YUxpc3QoKTsKICAgIH0sCiAgICBoYW5kbGVTZWFyY2goKSB7CiAgICAgIHRoaXMuc2VhcmNoRm9ybS5wYWdlTnVtYmVyID0gMTsKICAgICAgdGhpcy5zZWFyY2hGb3JtLnBhZ2VTaXplID0gMTA7CiAgICAgIHRoaXMuZ2V0RGF0YUxpc3QoKTsKICAgIH0sCiAgICBoYW5kbGVSZXNldCgpIHsKICAgICAgdGhpcy4kcmVmcy5zZWFyY2hGb3JtLnJlc2V0RmllbGRzKCk7CiAgICAgIHRoaXMuc2VhcmNoRm9ybS5wYWdlTnVtYmVyID0gMTsKICAgICAgdGhpcy5zZWFyY2hGb3JtLnBhZ2VTaXplID0gMTA7CiAgICAgIC8vIOmHjeaWsOWKoOi9veaVsOaNrgogICAgICB0aGlzLmdldERhdGFMaXN0KCk7CiAgICB9LAogICAgY2hhbmdlU29ydChlKSB7CiAgICAgIHRoaXMuc2VhcmNoRm9ybS5zb3J0ID0gZS5rZXk7CiAgICAgIHRoaXMuc2VhcmNoRm9ybS5vcmRlciA9IGUub3JkZXI7CiAgICAgIGlmIChlLm9yZGVyID09ICJub3JtYWwiKSB7CiAgICAgICAgdGhpcy5zZWFyY2hGb3JtLm9yZGVyID0gIiI7CiAgICAgIH0KICAgICAgdGhpcy5nZXREYXRhTGlzdCgpOwogICAgfSwKICAgIGNsZWFyU2VsZWN0QWxsKCkgewogICAgICB0aGlzLiRyZWZzLnRhYmxlLnNlbGVjdEFsbChmYWxzZSk7CiAgICB9LAogICAgY2hhbmdlU2VsZWN0KGUpIHsKICAgICAgdGhpcy5zZWxlY3RMaXN0ID0gZTsKICAgICAgdGhpcy5zZWxlY3RDb3VudCA9IGUubGVuZ3RoOwogICAgfSwKICAgIGdldERhdGFMaXN0KCkgewogICAgICB0aGlzLmxvYWRpbmcgPSB0cnVlOwogICAgICBnZXRSZWRpc0RhdGEodGhpcy5zZWFyY2hGb3JtKS50aGVuKHJlcyA9PiB7CiAgICAgICAgdGhpcy5sb2FkaW5nID0gZmFsc2U7CiAgICAgICAgaWYgKHJlcy5zdWNjZXNzKSB7CiAgICAgICAgICB0aGlzLmRhdGEgPSByZXMucmVzdWx0LmNvbnRlbnQ7CiAgICAgICAgICB0aGlzLnRvdGFsID0gcmVzLnJlc3VsdC50b3RhbEVsZW1lbnRzOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9LAogICAgaGFuZGxlU3VibWl0KCkgewogICAgICB0aGlzLiRyZWZzLmZvcm0udmFsaWRhdGUodmFsaWQgPT4gewogICAgICAgIGlmICh2YWxpZCkgewogICAgICAgICAgdGhpcy5zdWJtaXRMb2FkaW5nID0gdHJ1ZTsKICAgICAgICAgIC8vIOa3u+WKoOaIlue8lui+kQogICAgICAgICAgc2F2ZVJlZGlzKHRoaXMuZm9ybSkudGhlbihyZXMgPT4gewogICAgICAgICAgICB0aGlzLnN1Ym1pdExvYWRpbmcgPSBmYWxzZTsKICAgICAgICAgICAgaWYgKHJlcy5zdWNjZXNzKSB7CiAgICAgICAgICAgICAgdGhpcy4kTWVzc2FnZS5zdWNjZXNzKCLmk43kvZzmiJDlip8iKTsKICAgICAgICAgICAgICB0aGlzLmdldERhdGFMaXN0KCk7CiAgICAgICAgICAgICAgdGhpcy5tb2RhbFZpc2libGUgPSBmYWxzZTsKICAgICAgICAgICAgfQogICAgICAgICAgfSk7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0sCiAgICBhZGQoKSB7CiAgICAgIHRoaXMubW9kYWxUeXBlID0gMDsKICAgICAgdGhpcy5tb2RhbFRpdGxlID0gIua3u+WKoCI7CiAgICAgIHRoaXMuJHJlZnMuZm9ybS5yZXNldEZpZWxkcygpOwogICAgICBkZWxldGUgdGhpcy5mb3JtLmlkOwogICAgICB0aGlzLm1vZGFsVmlzaWJsZSA9IHRydWU7CiAgICB9LAogICAgZWRpdCh2KSB7CiAgICAgIHRoaXMubW9kYWxUeXBlID0gMTsKICAgICAgdGhpcy5tb2RhbFRpdGxlID0gIue8lui+kSI7CiAgICAgIHRoaXMuJHJlZnMuZm9ybS5yZXNldEZpZWxkcygpOwogICAgICAvLyDovazmjaJudWxs5Li6IiIKICAgICAgZm9yIChsZXQgYXR0ciBpbiB2KSB7CiAgICAgICAgaWYgKHZbYXR0cl0gPT0gbnVsbCkgewogICAgICAgICAgdlthdHRyXSA9ICIiOwogICAgICAgIH0KICAgICAgfQogICAgICBsZXQgc3RyID0gSlNPTi5zdHJpbmdpZnkodik7CiAgICAgIGxldCBkYXRhID0gSlNPTi5wYXJzZShzdHIpOwogICAgICB0aGlzLmZvcm0udmFsdWUgPSAi6K+75Y+W5LitLi4uIjsKICAgICAgZ2V0UmVkaXNCeUtleShkYXRhLmtleSkudGhlbihyZXMgPT4gewogICAgICAgIHRoaXMuZm9ybS52YWx1ZSA9ICIiOwogICAgICAgIGlmIChyZXMuc3VjY2VzcykgewogICAgICAgICAgZGF0YS52YWx1ZSA9IHJlcy5yZXN1bHQ7CiAgICAgICAgICB0aGlzLmZvcm0gPSBkYXRhOwogICAgICAgIH0KICAgICAgfSk7CiAgICAgIHRoaXMubW9kYWxWaXNpYmxlID0gdHJ1ZTsKICAgIH0sCiAgICBjbGVhcih2KSB7CiAgICAgIHRoaXMuJE1vZGFsLmNvbmZpcm0oewogICAgICAgIHRpdGxlOiAi6K+36LCo5oWO6L+b6KGM5q2k5pON5L2c77yBIiwKICAgICAgICBjb250ZW50OiAi5oKo56Gu6K6k6KaB5b275bqV5riF56m65Yig6Zmk5omA5pyJ5pWw5o2uPyIsCiAgICAgICAgbG9hZGluZzogdHJ1ZSwKICAgICAgICBvbk9rOiAoKSA9PiB7CiAgICAgICAgICAvLyDliKDpmaQKICAgICAgICAgIGRlbGV0ZUFsbFJlZGlzKCkudGhlbihyZXMgPT4gewogICAgICAgICAgICB0aGlzLiRNb2RhbC5yZW1vdmUoKTsKICAgICAgICAgICAgaWYgKHJlcy5zdWNjZXNzKSB7CiAgICAgICAgICAgICAgdGhpcy4kTWVzc2FnZS5zdWNjZXNzKCLmk43kvZzmiJDlip8iKTsKICAgICAgICAgICAgICB0aGlzLmdldERhdGFMaXN0KCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0pOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9LAogICAgcmVtb3ZlKHYpIHsKICAgICAgdGhpcy4kTW9kYWwuY29uZmlybSh7CiAgICAgICAgdGl0bGU6ICLnoa7orqTliKDpmaQiLAogICAgICAgIC8vIOiusOW+l+ehruiupOS/ruaUueatpOWkhAogICAgICAgIGNvbnRlbnQ6ICLmgqjnoa7orqTopoHliKDpmaQgIiArIHYua2V5ICsgIiA/IiwKICAgICAgICBsb2FkaW5nOiB0cnVlLAogICAgICAgIG9uT2s6ICgpID0+IHsKICAgICAgICAgIC8vIOWIoOmZpAogICAgICAgICAgZGVsZXRlUmVkaXMoeyBrZXlzOiB2LmtleSB9KS50aGVuKHJlcyA9PiB7CiAgICAgICAgICAgIHRoaXMuJE1vZGFsLnJlbW92ZSgpOwogICAgICAgICAgICBpZiAocmVzLnN1Y2Nlc3MpIHsKICAgICAgICAgICAgICB0aGlzLiRNZXNzYWdlLnN1Y2Nlc3MoIuaTjeS9nOaIkOWKnyIpOwogICAgICAgICAgICAgIHRoaXMuZ2V0RGF0YUxpc3QoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfSk7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0sCiAgICBkZWxBbGwoKSB7CiAgICAgIGlmICh0aGlzLnNlbGVjdENvdW50IDw9IDApIHsKICAgICAgICB0aGlzLiRNZXNzYWdlLndhcm5pbmcoIuaCqOi/mOacqumAieaLqeimgeWIoOmZpOeahOaVsOaNriIpOwogICAgICAgIHJldHVybjsKICAgICAgfQogICAgICB0aGlzLiRNb2RhbC5jb25maXJtKHsKICAgICAgICB0aXRsZTogIuehruiupOWIoOmZpCIsCiAgICAgICAgY29udGVudDogIuaCqOehruiupOimgeWIoOmZpOaJgOmAieeahCAiICsgdGhpcy5zZWxlY3RDb3VudCArICIg5p2h5pWw5o2uPyIsCiAgICAgICAgbG9hZGluZzogdHJ1ZSwKICAgICAgICBvbk9rOiAoKSA9PiB7CiAgICAgICAgICBsZXQga2V5cyA9ICIiOwogICAgICAgICAgdGhpcy5zZWxlY3RMaXN0LmZvckVhY2goZnVuY3Rpb24oZSkgewogICAgICAgICAgICBrZXlzICs9IGUua2V5ICsgIiwiOwogICAgICAgICAgfSk7CiAgICAgICAgICBrZXlzID0ga2V5cy5zdWJzdHJpbmcoMCwga2V5cy5sZW5ndGggLSAxKTsKICAgICAgICAgIC8vIOaJuemHj+WIoOmZpAogICAgICAgICAgZGVsZXRlUmVkaXMoeyBrZXlzOiBrZXlzIH0pLnRoZW4ocmVzID0+IHsKICAgICAgICAgICAgdGhpcy4kTW9kYWwucmVtb3ZlKCk7CiAgICAgICAgICAgIGlmIChyZXMuc3VjY2VzcykgewogICAgICAgICAgICAgIHRoaXMuJE1lc3NhZ2Uuc3VjY2Vzcygi5pON5L2c5oiQ5YqfIik7CiAgICAgICAgICAgICAgdGhpcy5jbGVhclNlbGVjdEFsbCgpOwogICAgICAgICAgICAgIHRoaXMuZ2V0RGF0YUxpc3QoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfSk7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0KICB9LAogIG1vdW50ZWQoKSB7CiAgICB0aGlzLmluaXQoKTsKICB9Cn07Cg=="},{"version":3,"sources":["redis.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwfile":"redis.vue","sourceRoot":"src/views/sys/redis","sourcesContent":["<template>\n  <div class=\"search\">\n    <Card>\n      <Tabs :animated=\"false\" @on-click=\"handleClickTab\">\n        <TabPane label=\"Redis管理\">\n          <Row v-show=\"openSearch\" @keydown.enter.native=\"handleSearch\">\n            <Form ref=\"searchForm\" :model=\"searchForm\" inline :label-width=\"40\">\n              <Form-item label=\"Key\" prop=\"key\">\n                <Input\n                  type=\"text\"\n                  v-model=\"searchForm.key\"\n                  placeholder=\"请输入Key\"\n                  clearable\n                  style=\"width: 200px\"\n                />\n              </Form-item>\n              <Form-item style=\"margin-left:-35px;\" class=\"br\">\n                <Button @click=\"handleSearch\" type=\"primary\" icon=\"ios-search\">搜索</Button>\n                <Button @click=\"handleReset\">重置</Button>\n              </Form-item>\n            </Form>\n          </Row>\n          <Row class=\"operation\">\n            <Button @click=\"add\" type=\"primary\" icon=\"md-add\">添加</Button>\n            <Button type=\"error\" @click=\"clear\" icon=\"md-trash\">清空所有</Button>\n            <Button @click=\"delAll\" icon=\"md-trash\">批量删除</Button>\n            <Button @click=\"getDataList\" icon=\"md-refresh\">刷新</Button>\n            <Button type=\"dashed\" @click=\"openSearch=!openSearch\">{{openSearch ? \"关闭搜索\" : \"开启搜索\"}}</Button>\n            <Button type=\"dashed\" @click=\"openTip=!openTip\">{{openTip ? \"关闭提示\" : \"开启提示\"}}</Button>\n          </Row>\n          <Row v-show=\"openTip\">\n            <Alert show-icon>\n              已选择\n              <span class=\"select-count\">{{selectCount}}</span> 项\n              <a class=\"select-clear\" @click=\"clearSelectAll\">清空</a>\n            </Alert>\n          </Row>\n          <Row>\n            <Table\n              :loading=\"loading\"\n              border\n              :columns=\"columns\"\n              :data=\"data\"\n              ref=\"table\"\n              sortable=\"custom\"\n              @on-sort-change=\"changeSort\"\n              @on-selection-change=\"changeSelect\"\n            ></Table>\n          </Row>\n          <Row type=\"flex\" justify=\"end\" class=\"page\">\n            <Page\n              :current=\"pageNumber\"\n              :total=\"total\"\n              :page-size=\"pageSize\"\n              @on-change=\"changePage\"\n              @on-page-size-change=\"changePageSize\"\n              :page-size-opts=\"[10,20,50]\"\n              size=\"small\"\n              show-total\n              show-elevator\n              show-sizer\n            ></Page>\n          </Row>\n        </TabPane>\n        <TabPane name=\"monitor\" label=\"Redis监控\">\n          <redis-monitor />\n        </TabPane>\n      </Tabs>\n    </Card>\n\n    <Modal :title=\"modalTitle\" v-model=\"modalVisible\" :mask-closable=\"false\" :width=\"500\">\n      <Form ref=\"form\" :model=\"form\" :label-width=\"70\" :rules=\"formValidate\">\n        <FormItem label=\"Key\" prop=\"key\">\n          <Input v-model=\"form.key\" style=\"width:100%\" />\n        </FormItem>\n        <FormItem label=\"Value\" prop=\"value\">\n          <Input v-model=\"form.value\" type=\"textarea\" :rows=\"5\" style=\"width:100%\" />\n        </FormItem>\n      </Form>\n      <div slot=\"footer\">\n        <Button type=\"text\" @click=\"modalVisible=false\">取消</Button>\n        <Button type=\"primary\" :loading=\"submitLoading\" @click=\"handleSubmit\">提交</Button>\n      </div>\n    </Modal>\n  </div>\n</template>\n\n<script>\nimport {\n  getRedisData,\n  saveRedis,\n  deleteRedis,\n  deleteAllRedis,\n  getRedisByKey\n} from \"@/api/index\";\nimport redisMonitor from \"./redisMonitor.vue\";\nexport default {\n  name: \"redis-notCache\",\n  components: {\n    redisMonitor\n  },\n  data() {\n    return {\n      openSearch: true,\n      openTip: true,\n      loading: true, // 表单加载状态\n      modalType: 0, // 添加或编辑标识\n      modalVisible: false, // 添加或编辑显示\n      modalTitle: \"\", // 添加或编辑标题\n      searchForm: {\n        // 搜索框初始化对象\n        pageNumber: 1, // 当前页数\n        pageSize: 10, // 页面大小\n        sort: \"createTime\", // 默认排序字段\n        order: \"desc\" // 默认排序方式\n      },\n      form: {\n        // 添加或编辑表单对象初始化数据\n        key: \"\",\n        value: \"\"\n      },\n      // 表单验证规则\n      formValidate: {\n        key: [{ required: true, message: \"不能为空\", trigger: \"blur\" }],\n        value: [{ required: true, message: \"不能为空\", trigger: \"blur\" }]\n      },\n      submitLoading: false, // 添加或编辑提交状态\n      selectList: [], // 多选数据\n      selectCount: 0, // 多选计数\n      columns: [\n        // 表头\n        {\n          type: \"selection\",\n          width: 60,\n          align: \"center\"\n        },\n        {\n          type: \"index\",\n          width: 60,\n          align: \"center\"\n        },\n        {\n          title: \"Key\",\n          key: \"key\",\n          minWidth: 100,\n          sortable: true\n        },\n        {\n          title: \"Value\",\n          key: \"value\",\n          minWidth: 300,\n          ellipsis: true\n        },\n        {\n          title: \"操作\",\n          key: \"action\",\n          align: \"center\",\n          width: 200,\n          render: (h, params) => {\n            return h(\"div\", [\n              h(\n                \"Button\",\n                {\n                  props: {\n                    type: \"primary\",\n                    size: \"small\",\n                    icon: \"ios-create-outline\"\n                  },\n                  style: {\n                    marginRight: \"5px\"\n                  },\n                  on: {\n                    click: () => {\n                      this.edit(params.row);\n                    }\n                  }\n                },\n                \"编辑\"\n              ),\n              h(\n                \"Button\",\n                {\n                  props: {\n                    type: \"error\",\n                    size: \"small\",\n                    icon: \"md-trash\"\n                  },\n                  on: {\n                    click: () => {\n                      this.remove(params.row);\n                    }\n                  }\n                },\n                \"删除\"\n              )\n            ]);\n          }\n        }\n      ],\n      data: [], // 表单数据\n      pageNumber: 1, // 当前页数\n      pageSize: 10, // 页面大小\n      total: 0 // 表单数据总数\n    };\n  },\n  methods: {\n    init() {\n      this.getDataList();\n    },\n    handleClickTab(name) {\n      if (name == \"monitor\") {\n        this.$Message.info(\"每隔5秒刷新一次数据，请耐心等待图表绘制\");\n      }\n    },\n    changePage(v) {\n      this.searchForm.pageNumber = v;\n      this.getDataList();\n      this.clearSelectAll();\n    },\n    changePageSize(v) {\n      this.searchForm.pageSize = v;\n      this.getDataList();\n    },\n    handleSearch() {\n      this.searchForm.pageNumber = 1;\n      this.searchForm.pageSize = 10;\n      this.getDataList();\n    },\n    handleReset() {\n      this.$refs.searchForm.resetFields();\n      this.searchForm.pageNumber = 1;\n      this.searchForm.pageSize = 10;\n      // 重新加载数据\n      this.getDataList();\n    },\n    changeSort(e) {\n      this.searchForm.sort = e.key;\n      this.searchForm.order = e.order;\n      if (e.order == \"normal\") {\n        this.searchForm.order = \"\";\n      }\n      this.getDataList();\n    },\n    clearSelectAll() {\n      this.$refs.table.selectAll(false);\n    },\n    changeSelect(e) {\n      this.selectList = e;\n      this.selectCount = e.length;\n    },\n    getDataList() {\n      this.loading = true;\n      getRedisData(this.searchForm).then(res => {\n        this.loading = false;\n        if (res.success) {\n          this.data = res.result.content;\n          this.total = res.result.totalElements;\n        }\n      });\n    },\n    handleSubmit() {\n      this.$refs.form.validate(valid => {\n        if (valid) {\n          this.submitLoading = true;\n          // 添加或编辑\n          saveRedis(this.form).then(res => {\n            this.submitLoading = false;\n            if (res.success) {\n              this.$Message.success(\"操作成功\");\n              this.getDataList();\n              this.modalVisible = false;\n            }\n          });\n        }\n      });\n    },\n    add() {\n      this.modalType = 0;\n      this.modalTitle = \"添加\";\n      this.$refs.form.resetFields();\n      delete this.form.id;\n      this.modalVisible = true;\n    },\n    edit(v) {\n      this.modalType = 1;\n      this.modalTitle = \"编辑\";\n      this.$refs.form.resetFields();\n      // 转换null为\"\"\n      for (let attr in v) {\n        if (v[attr] == null) {\n          v[attr] = \"\";\n        }\n      }\n      let str = JSON.stringify(v);\n      let data = JSON.parse(str);\n      this.form.value = \"读取中...\";\n      getRedisByKey(data.key).then(res => {\n        this.form.value = \"\";\n        if (res.success) {\n          data.value = res.result;\n          this.form = data;\n        }\n      });\n      this.modalVisible = true;\n    },\n    clear(v) {\n      this.$Modal.confirm({\n        title: \"请谨慎进行此操作！\",\n        content: \"您确认要彻底清空删除所有数据?\",\n        loading: true,\n        onOk: () => {\n          // 删除\n          deleteAllRedis().then(res => {\n            this.$Modal.remove();\n            if (res.success) {\n              this.$Message.success(\"操作成功\");\n              this.getDataList();\n            }\n          });\n        }\n      });\n    },\n    remove(v) {\n      this.$Modal.confirm({\n        title: \"确认删除\",\n        // 记得确认修改此处\n        content: \"您确认要删除 \" + v.key + \" ?\",\n        loading: true,\n        onOk: () => {\n          // 删除\n          deleteRedis({ keys: v.key }).then(res => {\n            this.$Modal.remove();\n            if (res.success) {\n              this.$Message.success(\"操作成功\");\n              this.getDataList();\n            }\n          });\n        }\n      });\n    },\n    delAll() {\n      if (this.selectCount <= 0) {\n        this.$Message.warning(\"您还未选择要删除的数据\");\n        return;\n      }\n      this.$Modal.confirm({\n        title: \"确认删除\",\n        content: \"您确认要删除所选的 \" + this.selectCount + \" 条数据?\",\n        loading: true,\n        onOk: () => {\n          let keys = \"\";\n          this.selectList.forEach(function(e) {\n            keys += e.key + \",\";\n          });\n          keys = keys.substring(0, keys.length - 1);\n          // 批量删除\n          deleteRedis({ keys: keys }).then(res => {\n            this.$Modal.remove();\n            if (res.success) {\n              this.$Message.success(\"操作成功\");\n              this.clearSelectAll();\n              this.getDataList();\n            }\n          });\n        }\n      });\n    }\n  },\n  mounted() {\n    this.init();\n  }\n};\n</script>\n<style lang=\"less\">\n@import \"../../../styles/table-common.less\";\n</style>"]}]}