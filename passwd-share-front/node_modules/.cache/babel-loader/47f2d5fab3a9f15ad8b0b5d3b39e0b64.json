{"remainingRequest":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/babel-loader/lib/index.js!/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/vue-awesome/components/Icon.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/vue-awesome/components/Icon.vue","mtime":499162500000},{"path":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZnVuY3Rpb24gX3RvQ29uc3VtYWJsZUFycmF5KGFycikgeyByZXR1cm4gX2FycmF5V2l0aG91dEhvbGVzKGFycikgfHwgX2l0ZXJhYmxlVG9BcnJheShhcnIpIHx8IF9ub25JdGVyYWJsZVNwcmVhZCgpOyB9CgpmdW5jdGlvbiBfbm9uSXRlcmFibGVTcHJlYWQoKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoIkludmFsaWQgYXR0ZW1wdCB0byBzcHJlYWQgbm9uLWl0ZXJhYmxlIGluc3RhbmNlIik7IH0KCmZ1bmN0aW9uIF9pdGVyYWJsZVRvQXJyYXkoaXRlcikgeyBpZiAoU3ltYm9sLml0ZXJhdG9yIGluIE9iamVjdChpdGVyKSB8fCBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoaXRlcikgPT09ICJbb2JqZWN0IEFyZ3VtZW50c10iKSByZXR1cm4gQXJyYXkuZnJvbShpdGVyKTsgfQoKZnVuY3Rpb24gX2FycmF5V2l0aG91dEhvbGVzKGFycikgeyBpZiAoQXJyYXkuaXNBcnJheShhcnIpKSB7IGZvciAodmFyIGkgPSAwLCBhcnIyID0gbmV3IEFycmF5KGFyci5sZW5ndGgpOyBpIDwgYXJyLmxlbmd0aDsgaSsrKSB7IGFycjJbaV0gPSBhcnJbaV07IH0gcmV0dXJuIGFycjI7IH0gfQoKZnVuY3Rpb24gX2RlZmluZVByb3BlcnR5KG9iaiwga2V5LCB2YWx1ZSkgeyBpZiAoa2V5IGluIG9iaikgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHsgdmFsdWU6IHZhbHVlLCBlbnVtZXJhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUsIHdyaXRhYmxlOiB0cnVlIH0pOyB9IGVsc2UgeyBvYmpba2V5XSA9IHZhbHVlOyB9IHJldHVybiBvYmo7IH0KCnZhciBpY29ucyA9IHt9OwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ2ZhLWljb24nLAogIHByb3BzOiB7CiAgICBuYW1lOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgdmFsaWRhdG9yOiBmdW5jdGlvbiB2YWxpZGF0b3IodmFsKSB7CiAgICAgICAgaWYgKHZhbCAmJiAhKHZhbCBpbiBpY29ucykpIHsKICAgICAgICAgIGNvbnNvbGUud2FybigiSW52YWxpZCBwcm9wOiBwcm9wIFwibmFtZVwiIGlzIHJlZmVycmluZyB0byBhbiB1bnJlZ2lzdGVyZWQgaWNvbiBcIiIuY29uY2F0KHZhbCwgIlwiLiIpICsgIlxuUGxlYXNlIG1ha2Ugc3VyZSB5b3UgaGF2ZSBpbXBvcnRlZCB0aGlzIGljb24gYmVmb3JlIHVzaW5nIGl0LiIpOwogICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgIH0KCiAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgIH0KICAgIH0sCiAgICB0aXRsZTogU3RyaW5nLAogICAgc2NhbGU6IFtOdW1iZXIsIFN0cmluZ10sCiAgICBzcGluOiBCb29sZWFuLAogICAgaW52ZXJzZTogQm9vbGVhbiwKICAgIHB1bHNlOiBCb29sZWFuLAogICAgZmxpcDogewogICAgICB2YWxpZGF0b3I6IGZ1bmN0aW9uIHZhbGlkYXRvcih2YWwpIHsKICAgICAgICByZXR1cm4gdmFsID09PSAnaG9yaXpvbnRhbCcgfHwgdmFsID09PSAndmVydGljYWwnOwogICAgICB9CiAgICB9LAogICAgbGFiZWw6IFN0cmluZywKICAgIHRhYmluZGV4OiBbTnVtYmVyLCBTdHJpbmddCiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgaWQ6IGdldElkKCksCiAgICAgIHg6IGZhbHNlLAogICAgICB5OiBmYWxzZSwKICAgICAgY2hpbGRyZW5XaWR0aDogMCwKICAgICAgY2hpbGRyZW5IZWlnaHQ6IDAsCiAgICAgIG91dGVyU2NhbGU6IDEKICAgIH07CiAgfSwKICBjb21wdXRlZDogewogICAgbm9ybWFsaXplZFNjYWxlOiBmdW5jdGlvbiBub3JtYWxpemVkU2NhbGUoKSB7CiAgICAgIHZhciBzY2FsZSA9IHRoaXMuc2NhbGU7CiAgICAgIHNjYWxlID0gdHlwZW9mIHNjYWxlID09PSAndW5kZWZpbmVkJyA/IDEgOiBOdW1iZXIoc2NhbGUpOwoKICAgICAgaWYgKGlzTmFOKHNjYWxlKSB8fCBzY2FsZSA8PSAwKSB7CiAgICAgICAgY29uc29sZS53YXJuKCJJbnZhbGlkIHByb3A6IHByb3AgXCJzY2FsZVwiIHNob3VsZCBiZSBhIG51bWJlciBvdmVyIDAuIiwgdGhpcyk7CiAgICAgICAgcmV0dXJuIHRoaXMub3V0ZXJTY2FsZTsKICAgICAgfQoKICAgICAgcmV0dXJuIHNjYWxlICogdGhpcy5vdXRlclNjYWxlOwogICAgfSwKICAgIGtsYXNzOiBmdW5jdGlvbiBrbGFzcygpIHsKICAgICAgcmV0dXJuIF9kZWZpbmVQcm9wZXJ0eSh7CiAgICAgICAgJ2ZhLWljb24nOiB0cnVlLAogICAgICAgICdmYS1zcGluJzogdGhpcy5zcGluLAogICAgICAgICdmYS1mbGlwLWhvcml6b250YWwnOiB0aGlzLmZsaXAgPT09ICdob3Jpem9udGFsJywKICAgICAgICAnZmEtZmxpcC12ZXJ0aWNhbCc6IHRoaXMuZmxpcCA9PT0gJ3ZlcnRpY2FsJywKICAgICAgICAnZmEtaW52ZXJzZSc6IHRoaXMuaW52ZXJzZSwKICAgICAgICAnZmEtcHVsc2UnOiB0aGlzLnB1bHNlCiAgICAgIH0sIHRoaXMuJG9wdGlvbnMubmFtZSwgdHJ1ZSk7CiAgICB9LAogICAgaWNvbjogZnVuY3Rpb24gaWNvbigpIHsKICAgICAgaWYgKHRoaXMubmFtZSkgewogICAgICAgIHJldHVybiBpY29uc1t0aGlzLm5hbWVdOwogICAgICB9CgogICAgICByZXR1cm4gbnVsbDsKICAgIH0sCiAgICBib3g6IGZ1bmN0aW9uIGJveCgpIHsKICAgICAgaWYgKHRoaXMuaWNvbikgewogICAgICAgIHJldHVybiAiMCAwICIuY29uY2F0KHRoaXMuaWNvbi53aWR0aCwgIiAiKS5jb25jYXQodGhpcy5pY29uLmhlaWdodCk7CiAgICAgIH0KCiAgICAgIHJldHVybiAiMCAwICIuY29uY2F0KHRoaXMud2lkdGgsICIgIikuY29uY2F0KHRoaXMuaGVpZ2h0KTsKICAgIH0sCiAgICByYXRpbzogZnVuY3Rpb24gcmF0aW8oKSB7CiAgICAgIGlmICghdGhpcy5pY29uKSB7CiAgICAgICAgcmV0dXJuIDE7CiAgICAgIH0KCiAgICAgIHZhciBfdGhpcyRpY29uID0gdGhpcy5pY29uLAogICAgICAgICAgd2lkdGggPSBfdGhpcyRpY29uLndpZHRoLAogICAgICAgICAgaGVpZ2h0ID0gX3RoaXMkaWNvbi5oZWlnaHQ7CiAgICAgIHJldHVybiBNYXRoLm1heCh3aWR0aCwgaGVpZ2h0KSAvIDE2OwogICAgfSwKICAgIHdpZHRoOiBmdW5jdGlvbiB3aWR0aCgpIHsKICAgICAgcmV0dXJuIHRoaXMuY2hpbGRyZW5XaWR0aCB8fCB0aGlzLmljb24gJiYgdGhpcy5pY29uLndpZHRoIC8gdGhpcy5yYXRpbyAqIHRoaXMubm9ybWFsaXplZFNjYWxlIHx8IDA7CiAgICB9LAogICAgaGVpZ2h0OiBmdW5jdGlvbiBoZWlnaHQoKSB7CiAgICAgIHJldHVybiB0aGlzLmNoaWxkcmVuSGVpZ2h0IHx8IHRoaXMuaWNvbiAmJiB0aGlzLmljb24uaGVpZ2h0IC8gdGhpcy5yYXRpbyAqIHRoaXMubm9ybWFsaXplZFNjYWxlIHx8IDA7CiAgICB9LAogICAgc3R5bGU6IGZ1bmN0aW9uIHN0eWxlKCkgewogICAgICBpZiAodGhpcy5ub3JtYWxpemVkU2NhbGUgPT09IDEpIHsKICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgIH0KCiAgICAgIHJldHVybiB7CiAgICAgICAgZm9udFNpemU6IHRoaXMubm9ybWFsaXplZFNjYWxlICsgJ2VtJwogICAgICB9OwogICAgfSwKICAgIHJhdzogZnVuY3Rpb24gcmF3KCkgewogICAgICAvLyBnZW5lcmF0ZSB1bmlxdWUgaWQgZm9yIGVhY2ggaWNvbidzIFNWRyBlbGVtZW50IHdpdGggSUQKICAgICAgaWYgKCF0aGlzLmljb24gfHwgIXRoaXMuaWNvbi5yYXcpIHsKICAgICAgICByZXR1cm4gbnVsbDsKICAgICAgfQoKICAgICAgdmFyIHJhdyA9IHRoaXMuaWNvbi5yYXc7CiAgICAgIHZhciBpZHMgPSB7fTsKICAgICAgcmF3ID0gcmF3LnJlcGxhY2UoL1xzKD86eG1sOik/aWQ9KFsiJ10/KShbXiInKVxzXSspXDEvZywgZnVuY3Rpb24gKG1hdGNoLCBxdW90ZSwgaWQpIHsKICAgICAgICB2YXIgdW5pcXVlSWQgPSBnZXRJZCgpOwogICAgICAgIGlkc1tpZF0gPSB1bmlxdWVJZDsKICAgICAgICByZXR1cm4gIiBpZD1cIiIuY29uY2F0KHVuaXF1ZUlkLCAiXCIiKTsKICAgICAgfSk7CiAgICAgIHJhdyA9IHJhdy5yZXBsYWNlKC8jKD86KFteJyIpXHNdKyl8eHBvaW50ZXJcKGlkXCgoWyciXT8pKFteJyldKylcMlwpXCkpL2csIGZ1bmN0aW9uIChtYXRjaCwgcmF3SWQsIF8sIHBvaW50ZXJJZCkgewogICAgICAgIHZhciBpZCA9IHJhd0lkIHx8IHBvaW50ZXJJZDsKCiAgICAgICAgaWYgKCFpZCB8fCAhaWRzW2lkXSkgewogICAgICAgICAgcmV0dXJuIG1hdGNoOwogICAgICAgIH0KCiAgICAgICAgcmV0dXJuICIjIi5jb25jYXQoaWRzW2lkXSk7CiAgICAgIH0pOwogICAgICByZXR1cm4gcmF3OwogICAgfSwKICAgIGZvY3VzYWJsZTogZnVuY3Rpb24gZm9jdXNhYmxlKCkgewogICAgICB2YXIgdGFiaW5kZXggPSB0aGlzLnRhYmluZGV4OwoKICAgICAgaWYgKHRhYmluZGV4ID09IG51bGwpIHsKICAgICAgICByZXR1cm4gJ2ZhbHNlJzsKICAgICAgfQoKICAgICAgdmFyIGluZGV4ID0gdHlwZW9mIHRhYmluZGV4ID09PSAnc3RyaW5nJyA/IHBhcnNlSW50KHRhYmluZGV4LCAxMCkgOiB0YWJpbmRleDsKCiAgICAgIGlmIChpbmRleCA+PSAwKSB7CiAgICAgICAgcmV0dXJuIG51bGw7CiAgICAgIH0KCiAgICAgIHJldHVybiAnZmFsc2UnOwogICAgfQogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHRoaXMudXBkYXRlU3RhY2soKTsKICB9LAogIHVwZGF0ZWQ6IGZ1bmN0aW9uIHVwZGF0ZWQoKSB7CiAgICB0aGlzLnVwZGF0ZVN0YWNrKCk7CiAgfSwKICBtZXRob2RzOiB7CiAgICB1cGRhdGVTdGFjazogZnVuY3Rpb24gdXBkYXRlU3RhY2soKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICBpZiAoIXRoaXMubmFtZSAmJiB0aGlzLm5hbWUgIT09IG51bGwgJiYgdGhpcy4kY2hpbGRyZW4ubGVuZ3RoID09PSAwKSB7CiAgICAgICAgY29uc29sZS53YXJuKCJJbnZhbGlkIHByb3A6IHByb3AgXCJuYW1lXCIgaXMgcmVxdWlyZWQuIik7CiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICBpZiAodGhpcy5pY29uKSB7CiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICB2YXIgd2lkdGggPSAwOwogICAgICB2YXIgaGVpZ2h0ID0gMDsKICAgICAgdGhpcy4kY2hpbGRyZW4uZm9yRWFjaChmdW5jdGlvbiAoY2hpbGQpIHsKICAgICAgICBjaGlsZC5vdXRlclNjYWxlID0gX3RoaXMubm9ybWFsaXplZFNjYWxlOwogICAgICAgIHdpZHRoID0gTWF0aC5tYXgod2lkdGgsIGNoaWxkLndpZHRoKTsKICAgICAgICBoZWlnaHQgPSBNYXRoLm1heChoZWlnaHQsIGNoaWxkLmhlaWdodCk7CiAgICAgIH0pOwogICAgICB0aGlzLmNoaWxkcmVuV2lkdGggPSB3aWR0aDsKICAgICAgdGhpcy5jaGlsZHJlbkhlaWdodCA9IGhlaWdodDsKICAgICAgdGhpcy4kY2hpbGRyZW4uZm9yRWFjaChmdW5jdGlvbiAoY2hpbGQpIHsKICAgICAgICBjaGlsZC54ID0gKHdpZHRoIC0gY2hpbGQud2lkdGgpIC8gMjsKICAgICAgICBjaGlsZC55ID0gKGhlaWdodCAtIGNoaWxkLmhlaWdodCkgLyAyOwogICAgICB9KTsKICAgIH0KICB9LAogIHJlbmRlcjogZnVuY3Rpb24gcmVuZGVyKGgpIHsKICAgIGlmICh0aGlzLm5hbWUgPT09IG51bGwpIHsKICAgICAgcmV0dXJuIGgoKTsKICAgIH0KCiAgICB2YXIgb3B0aW9ucyA9IHsKICAgICAgY2xhc3M6IHRoaXMua2xhc3MsCiAgICAgIHN0eWxlOiB0aGlzLnN0eWxlLAogICAgICBhdHRyczogewogICAgICAgIHJvbGU6IHRoaXMuJGF0dHJzLnJvbGUgfHwgKHRoaXMubGFiZWwgfHwgdGhpcy50aXRsZSA/ICdpbWcnIDogbnVsbCksCiAgICAgICAgJ2FyaWEtbGFiZWwnOiB0aGlzLmxhYmVsIHx8IG51bGwsCiAgICAgICAgJ2FyaWEtaGlkZGVuJzogU3RyaW5nKCEodGhpcy5sYWJlbCB8fCB0aGlzLnRpdGxlKSksCiAgICAgICAgdGFiaW5kZXg6IHRoaXMudGFiaW5kZXgsCiAgICAgICAgeDogdGhpcy54LAogICAgICAgIHk6IHRoaXMueSwKICAgICAgICB3aWR0aDogdGhpcy53aWR0aCwKICAgICAgICBoZWlnaHQ6IHRoaXMuaGVpZ2h0LAogICAgICAgIHZpZXdCb3g6IHRoaXMuYm94LAogICAgICAgIGZvY3VzYWJsZTogdGhpcy5mb2N1c2FibGUKICAgICAgfQogICAgfTsKICAgIHZhciB0aXRsZUlkID0gInZhdC0iLmNvbmNhdCh0aGlzLmlkKTsKCiAgICBpZiAodGhpcy50aXRsZSkgewogICAgICBvcHRpb25zLmF0dHJzWydhcmlhLWxhYmVsbGVkYnknXSA9IHRpdGxlSWQ7CiAgICB9CgogICAgaWYgKHRoaXMucmF3KSB7CiAgICAgIHZhciBodG1sID0gdGhpcy5yYXc7CgogICAgICBpZiAodGhpcy50aXRsZSkgewogICAgICAgIGh0bWwgPSAiPHRpdGxlIGlkPVwiIi5jb25jYXQodGl0bGVJZCwgIlwiPiIpLmNvbmNhdChlc2NhcGVIVE1MKHRoaXMudGl0bGUpLCAiPC90aXRsZT4iKS5jb25jYXQoaHRtbCk7CiAgICAgIH0KCiAgICAgIG9wdGlvbnMuZG9tUHJvcHMgPSB7CiAgICAgICAgaW5uZXJIVE1MOiBodG1sCiAgICAgIH07CiAgICB9CgogICAgdmFyIGNvbnRlbnQgPSB0aGlzLnRpdGxlID8gW2goJ3RpdGxlJywgewogICAgICBhdHRyczogewogICAgICAgIGlkOiB0aXRsZUlkCiAgICAgIH0KICAgIH0sIHRoaXMudGl0bGUpXSA6IFtdOwogICAgcmV0dXJuIGgoJ3N2ZycsIG9wdGlvbnMsIHRoaXMucmF3ID8gbnVsbCA6IGNvbnRlbnQuY29uY2F0KHRoaXMuJHNsb3RzLmRlZmF1bHQgfHwgW10uY29uY2F0KF90b0NvbnN1bWFibGVBcnJheSh0aGlzLmljb24ucGF0aHMubWFwKGZ1bmN0aW9uIChwYXRoLCBpKSB7CiAgICAgIHJldHVybiBoKCdwYXRoJywgewogICAgICAgIGF0dHJzOiBwYXRoLAogICAgICAgIGtleTogInBhdGgtIi5jb25jYXQoaSkKICAgICAgfSk7CiAgICB9KSksIF90b0NvbnN1bWFibGVBcnJheSh0aGlzLmljb24ucG9seWdvbnMubWFwKGZ1bmN0aW9uIChwb2x5Z29uLCBpKSB7CiAgICAgIHJldHVybiBoKCdwb2x5Z29uJywgewogICAgICAgIGF0dHJzOiBwb2x5Z29uLAogICAgICAgIGtleTogInBvbHlnb24tIi5jb25jYXQoaSkKICAgICAgfSk7CiAgICB9KSkpKSk7CiAgfSwKICByZWdpc3RlcjogZnVuY3Rpb24gcmVnaXN0ZXIoZGF0YSkgewogICAgZm9yICh2YXIgbmFtZSBpbiBkYXRhKSB7CiAgICAgIHZhciBpY29uID0gZGF0YVtuYW1lXTsKICAgICAgdmFyIF9pY29uJHBhdGhzID0gaWNvbi5wYXRocywKICAgICAgICAgIHBhdGhzID0gX2ljb24kcGF0aHMgPT09IHZvaWQgMCA/IFtdIDogX2ljb24kcGF0aHMsCiAgICAgICAgICBkID0gaWNvbi5kLAogICAgICAgICAgX2ljb24kcG9seWdvbnMgPSBpY29uLnBvbHlnb25zLAogICAgICAgICAgcG9seWdvbnMgPSBfaWNvbiRwb2x5Z29ucyA9PT0gdm9pZCAwID8gW10gOiBfaWNvbiRwb2x5Z29ucywKICAgICAgICAgIHBvaW50cyA9IGljb24ucG9pbnRzOwoKICAgICAgaWYgKGQpIHsKICAgICAgICBwYXRocy5wdXNoKHsKICAgICAgICAgIGQ6IGQKICAgICAgICB9KTsKICAgICAgfQoKICAgICAgaWYgKHBvaW50cykgewogICAgICAgIHBvbHlnb25zLnB1c2goewogICAgICAgICAgcG9pbnRzOiBwb2ludHMKICAgICAgICB9KTsKICAgICAgfQoKICAgICAgaWNvbnNbbmFtZV0gPSBhc3NpZ24oe30sIGljb24sIHsKICAgICAgICBwYXRoczogcGF0aHMsCiAgICAgICAgcG9seWdvbnM6IHBvbHlnb25zCiAgICAgIH0pOwogICAgfQogIH0sCiAgaWNvbnM6IGljb25zCn07CgpmdW5jdGlvbiBhc3NpZ24ob2JqKSB7CiAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIHNvdXJjZXMgPSBuZXcgQXJyYXkoX2xlbiA+IDEgPyBfbGVuIC0gMSA6IDApLCBfa2V5ID0gMTsgX2tleSA8IF9sZW47IF9rZXkrKykgewogICAgc291cmNlc1tfa2V5IC0gMV0gPSBhcmd1bWVudHNbX2tleV07CiAgfQoKICBzb3VyY2VzLmZvckVhY2goZnVuY3Rpb24gKHNvdXJjZSkgewogICAgZm9yICh2YXIga2V5IGluIHNvdXJjZSkgewogICAgICBpZiAoc291cmNlLmhhc093blByb3BlcnR5KGtleSkpIHsKICAgICAgICBvYmpba2V5XSA9IHNvdXJjZVtrZXldOwogICAgICB9CiAgICB9CiAgfSk7CiAgcmV0dXJuIG9iajsKfQoKdmFyIGN1cnNvciA9IDB4ZDQ5Mzc7CgpmdW5jdGlvbiBnZXRJZCgpIHsKICByZXR1cm4gInZhLSIuY29uY2F0KChjdXJzb3IrKykudG9TdHJpbmcoMTYpKTsKfQoKdmFyIEVTQ0FQRV9NQVAgPSB7CiAgJzwnOiAnJmx0OycsCiAgJz4nOiAnJmd0OycsCiAgJyInOiAnJnF1b3Q7JywKICAnJic6ICcmYW1wOycKfTsKCmZ1bmN0aW9uIGVzY2FwZUhUTUwoaHRtbCkgewogIHJldHVybiBodG1sLnJlcGxhY2UoL1s8PiImXS9nLCBmdW5jdGlvbiAoYykgewogICAgcmV0dXJuIEVTQ0FQRV9NQVBbY10gfHwgYzsKICB9KTsKfQ=="},{"version":3,"sources":["Icon.vue"],"names":[],"mappings":";;;;;;;;;;AACA,IAAA,KAAA,GAAA,EAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,SADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,SAFA,qBAEA,GAFA,EAEA;AACA,YAAA,GAAA,IAAA,EAAA,GAAA,IAAA,KAAA,CAAA,EAAA;AACA,UAAA,OAAA,CAAA,IAAA,CACA,6EAAA,GAAA,4EADA;AAIA,iBAAA,KAAA;AACA;;AACA,eAAA,IAAA;AACA;AAXA,KADA;AAcA,IAAA,KAAA,EAAA,MAdA;AAeA,IAAA,KAAA,EAAA,CAAA,MAAA,EAAA,MAAA,CAfA;AAgBA,IAAA,IAAA,EAAA,OAhBA;AAiBA,IAAA,OAAA,EAAA,OAjBA;AAkBA,IAAA,KAAA,EAAA,OAlBA;AAmBA,IAAA,IAAA,EAAA;AACA,MAAA,SADA,qBACA,GADA,EACA;AACA,eAAA,GAAA,KAAA,YAAA,IAAA,GAAA,KAAA,UAAA;AACA;AAHA,KAnBA;AAwBA,IAAA,KAAA,EAAA,MAxBA;AAyBA,IAAA,QAAA,EAAA,CAAA,MAAA,EAAA,MAAA;AAzBA,GAFA;AA6BA,EAAA,IA7BA,kBA6BA;AACA,WAAA;AACA,MAAA,EAAA,EAAA,KAAA,EADA;AAEA,MAAA,CAAA,EAAA,KAFA;AAGA,MAAA,CAAA,EAAA,KAHA;AAIA,MAAA,aAAA,EAAA,CAJA;AAKA,MAAA,cAAA,EAAA,CALA;AAMA,MAAA,UAAA,EAAA;AANA,KAAA;AAQA,GAtCA;AAuCA,EAAA,QAAA,EAAA;AACA,IAAA,eADA,6BACA;AACA,UAAA,KAAA,GAAA,KAAA,KAAA;AACA,MAAA,KAAA,GAAA,OAAA,KAAA,KAAA,WAAA,GAAA,CAAA,GAAA,MAAA,CAAA,KAAA,CAAA;;AACA,UAAA,KAAA,CAAA,KAAA,CAAA,IAAA,KAAA,IAAA,CAAA,EAAA;AACA,QAAA,OAAA,CAAA,IAAA,4DAEA,IAFA;AAIA,eAAA,KAAA,UAAA;AACA;;AACA,aAAA,KAAA,GAAA,KAAA,UAAA;AACA,KAZA;AAaA,IAAA,KAbA,mBAaA;AACA;AACA,mBAAA,IADA;AAEA,mBAAA,KAAA,IAFA;AAGA,8BAAA,KAAA,IAAA,KAAA,YAHA;AAIA,4BAAA,KAAA,IAAA,KAAA,UAJA;AAKA,sBAAA,KAAA,OALA;AAMA,oBAAA,KAAA;AANA,SAOA,KAAA,QAAA,CAAA,IAPA,EAOA,IAPA;AASA,KAvBA;AAwBA,IAAA,IAxBA,kBAwBA;AACA,UAAA,KAAA,IAAA,EAAA;AACA,eAAA,KAAA,CAAA,KAAA,IAAA,CAAA;AACA;;AACA,aAAA,IAAA;AACA,KA7BA;AA8BA,IAAA,GA9BA,iBA8BA;AACA,UAAA,KAAA,IAAA,EAAA;AACA,6BAAA,KAAA,IAAA,CAAA,KAAA,cAAA,KAAA,IAAA,CAAA,MAAA;AACA;;AACA,2BAAA,KAAA,KAAA,cAAA,KAAA,MAAA;AACA,KAnCA;AAoCA,IAAA,KApCA,mBAoCA;AACA,UAAA,CAAA,KAAA,IAAA,EAAA;AACA,eAAA,CAAA;AACA;;AAHA,uBAIA,KAAA,IAJA;AAAA,UAIA,KAJA,cAIA,KAJA;AAAA,UAIA,MAJA,cAIA,MAJA;AAKA,aAAA,IAAA,CAAA,GAAA,CAAA,KAAA,EAAA,MAAA,IAAA,EAAA;AACA,KA1CA;AA2CA,IAAA,KA3CA,mBA2CA;AACA,aACA,KAAA,aAAA,IACA,KAAA,IAAA,IAAA,KAAA,IAAA,CAAA,KAAA,GAAA,KAAA,KAAA,GAAA,KAAA,eADA,IAEA,CAHA;AAKA,KAjDA;AAkDA,IAAA,MAlDA,oBAkDA;AACA,aACA,KAAA,cAAA,IACA,KAAA,IAAA,IAAA,KAAA,IAAA,CAAA,MAAA,GAAA,KAAA,KAAA,GAAA,KAAA,eADA,IAEA,CAHA;AAKA,KAxDA;AAyDA,IAAA,KAzDA,mBAyDA;AACA,UAAA,KAAA,eAAA,KAAA,CAAA,EAAA;AACA,eAAA,KAAA;AACA;;AACA,aAAA;AACA,QAAA,QAAA,EAAA,KAAA,eAAA,GAAA;AADA,OAAA;AAGA,KAhEA;AAiEA,IAAA,GAjEA,iBAiEA;AACA;AACA,UAAA,CAAA,KAAA,IAAA,IAAA,CAAA,KAAA,IAAA,CAAA,GAAA,EAAA;AACA,eAAA,IAAA;AACA;;AACA,UAAA,GAAA,GAAA,KAAA,IAAA,CAAA,GAAA;AACA,UAAA,GAAA,GAAA,EAAA;AACA,MAAA,GAAA,GAAA,GAAA,CAAA,OAAA,CACA,qCADA,EAEA,UAAA,KAAA,EAAA,KAAA,EAAA,EAAA,EAAA;AACA,YAAA,QAAA,GAAA,KAAA,EAAA;AACA,QAAA,GAAA,CAAA,EAAA,CAAA,GAAA,QAAA;AACA,+BAAA,QAAA;AACA,OANA,CAAA;AAQA,MAAA,GAAA,GAAA,GAAA,CAAA,OAAA,CACA,uDADA,EAEA,UAAA,KAAA,EAAA,KAAA,EAAA,CAAA,EAAA,SAAA,EAAA;AACA,YAAA,EAAA,GAAA,KAAA,IAAA,SAAA;;AACA,YAAA,CAAA,EAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,EAAA;AACA,iBAAA,KAAA;AACA;;AAEA,0BAAA,GAAA,CAAA,EAAA,CAAA;AACA,OATA,CAAA;AAYA,aAAA,GAAA;AACA,KA7FA;AA8FA,IAAA,SA9FA,uBA8FA;AAAA,UACA,QADA,GACA,IADA,CACA,QADA;;AAEA,UAAA,QAAA,IAAA,IAAA,EAAA;AACA,eAAA,OAAA;AACA;;AACA,UAAA,KAAA,GACA,OAAA,QAAA,KAAA,QAAA,GAAA,QAAA,CAAA,QAAA,EAAA,EAAA,CAAA,GAAA,QADA;;AAEA,UAAA,KAAA,IAAA,CAAA,EAAA;AACA,eAAA,IAAA;AACA;;AACA,aAAA,OAAA;AACA;AAzGA,GAvCA;AAkJA,EAAA,OAlJA,qBAkJA;AACA,SAAA,WAAA;AACA,GApJA;AAqJA,EAAA,OArJA,qBAqJA;AACA,SAAA,WAAA;AACA,GAvJA;AAwJA,EAAA,OAAA,EAAA;AACA,IAAA,WADA,yBACA;AAAA;;AACA,UAAA,CAAA,KAAA,IAAA,IAAA,KAAA,IAAA,KAAA,IAAA,IAAA,KAAA,SAAA,CAAA,MAAA,KAAA,CAAA,EAAA;AACA,QAAA,OAAA,CAAA,IAAA;AACA;AACA;;AAEA,UAAA,KAAA,IAAA,EAAA;AACA;AACA;;AAEA,UAAA,KAAA,GAAA,CAAA;AACA,UAAA,MAAA,GAAA,CAAA;AACA,WAAA,SAAA,CAAA,OAAA,CAAA,UAAA,KAAA,EAAA;AACA,QAAA,KAAA,CAAA,UAAA,GAAA,KAAA,CAAA,eAAA;AAEA,QAAA,KAAA,GAAA,IAAA,CAAA,GAAA,CAAA,KAAA,EAAA,KAAA,CAAA,KAAA,CAAA;AACA,QAAA,MAAA,GAAA,IAAA,CAAA,GAAA,CAAA,MAAA,EAAA,KAAA,CAAA,MAAA,CAAA;AACA,OALA;AAMA,WAAA,aAAA,GAAA,KAAA;AACA,WAAA,cAAA,GAAA,MAAA;AACA,WAAA,SAAA,CAAA,OAAA,CAAA,UAAA,KAAA,EAAA;AACA,QAAA,KAAA,CAAA,CAAA,GAAA,CAAA,KAAA,GAAA,KAAA,CAAA,KAAA,IAAA,CAAA;AACA,QAAA,KAAA,CAAA,CAAA,GAAA,CAAA,MAAA,GAAA,KAAA,CAAA,MAAA,IAAA,CAAA;AACA,OAHA;AAIA;AAzBA,GAxJA;AAmLA,EAAA,MAnLA,kBAmLA,CAnLA,EAmLA;AACA,QAAA,KAAA,IAAA,KAAA,IAAA,EAAA;AACA,aAAA,CAAA,EAAA;AACA;;AAEA,QAAA,OAAA,GAAA;AACA,MAAA,KAAA,EAAA,KAAA,KADA;AAEA,MAAA,KAAA,EAAA,KAAA,KAFA;AAGA,MAAA,KAAA,EAAA;AACA,QAAA,IAAA,EAAA,KAAA,MAAA,CAAA,IAAA,KAAA,KAAA,KAAA,IAAA,KAAA,KAAA,GAAA,KAAA,GAAA,IAAA,CADA;AAEA,sBAAA,KAAA,KAAA,IAAA,IAFA;AAGA,uBAAA,MAAA,CAAA,EAAA,KAAA,KAAA,IAAA,KAAA,KAAA,CAAA,CAHA;AAIA,QAAA,QAAA,EAAA,KAAA,QAJA;AAKA,QAAA,CAAA,EAAA,KAAA,CALA;AAMA,QAAA,CAAA,EAAA,KAAA,CANA;AAOA,QAAA,KAAA,EAAA,KAAA,KAPA;AAQA,QAAA,MAAA,EAAA,KAAA,MARA;AASA,QAAA,OAAA,EAAA,KAAA,GATA;AAUA,QAAA,SAAA,EAAA,KAAA;AAVA;AAHA,KAAA;AAiBA,QAAA,OAAA,iBAAA,KAAA,EAAA,CAAA;;AACA,QAAA,KAAA,KAAA,EAAA;AACA,MAAA,OAAA,CAAA,KAAA,CAAA,iBAAA,IAAA,OAAA;AACA;;AAEA,QAAA,KAAA,GAAA,EAAA;AACA,UAAA,IAAA,GAAA,KAAA,GAAA;;AAEA,UAAA,KAAA,KAAA,EAAA;AACA,QAAA,IAAA,yBAAA,OAAA,gBAAA,UAAA,CAAA,KAAA,KAAA,CAAA,qBAAA,IAAA,CAAA;AACA;;AAEA,MAAA,OAAA,CAAA,QAAA,GAAA;AACA,QAAA,SAAA,EAAA;AADA,OAAA;AAGA;;AAEA,QAAA,OAAA,GAAA,KAAA,KAAA,GACA,CAAA,CAAA,CAAA,OAAA,EAAA;AAAA,MAAA,KAAA,EAAA;AAAA,QAAA,EAAA,EAAA;AAAA;AAAA,KAAA,EAAA,KAAA,KAAA,CAAA,CADA,GAEA,EAFA;AAIA,WAAA,CAAA,CACA,KADA,EAEA,OAFA,EAGA,KAAA,GAAA,GACA,IADA,GAEA,OAAA,CAAA,MAAA,CACA,KAAA,MAAA,CAAA,OAAA,iCACA,KAAA,IAAA,CAAA,KAAA,CAAA,GAAA,CAAA,UAAA,IAAA,EAAA,CAAA;AAAA,aACA,CAAA,CAAA,MAAA,EAAA;AACA,QAAA,KAAA,EAAA,IADA;AAEA,QAAA,GAAA,iBAAA,CAAA;AAFA,OAAA,CADA;AAAA,KAAA,CADA,sBAOA,KAAA,IAAA,CAAA,QAAA,CAAA,GAAA,CAAA,UAAA,OAAA,EAAA,CAAA;AAAA,aACA,CAAA,CAAA,SAAA,EAAA;AACA,QAAA,KAAA,EAAA,OADA;AAEA,QAAA,GAAA,oBAAA,CAAA;AAFA,OAAA,CADA;AAAA,KAAA,CAPA,EADA,CALA,CAAA;AAsBA,GApPA;AAqPA,EAAA,QArPA,oBAqPA,IArPA,EAqPA;AACA,SAAA,IAAA,IAAA,IAAA,IAAA,EAAA;AACA,UAAA,IAAA,GAAA,IAAA,CAAA,IAAA,CAAA;AADA,wBAEA,IAFA,CAEA,KAFA;AAAA,UAEA,KAFA,4BAEA,EAFA;AAAA,UAEA,CAFA,GAEA,IAFA,CAEA,CAFA;AAAA,2BAEA,IAFA,CAEA,QAFA;AAAA,UAEA,QAFA,+BAEA,EAFA;AAAA,UAEA,MAFA,GAEA,IAFA,CAEA,MAFA;;AAIA,UAAA,CAAA,EAAA;AACA,QAAA,KAAA,CAAA,IAAA,CAAA;AAAA,UAAA,CAAA,EAAA;AAAA,SAAA;AACA;;AAEA,UAAA,MAAA,EAAA;AACA,QAAA,QAAA,CAAA,IAAA,CAAA;AAAA,UAAA,MAAA,EAAA;AAAA,SAAA;AACA;;AAEA,MAAA,KAAA,CAAA,IAAA,CAAA,GAAA,MAAA,CAAA,EAAA,EAAA,IAAA,EAAA;AACA,QAAA,KAAA,EAAA,KADA;AAEA,QAAA,QAAA,EAAA;AAFA,OAAA,CAAA;AAIA;AACA,GAvQA;AAwQA,EAAA,KAAA,EAAA;AAxQA,CAAA;;AA2QA,SAAA,MAAA,CAAA,GAAA,EAAA;AAAA,oCAAA,OAAA;AAAA,IAAA,OAAA;AAAA;;AACA,EAAA,OAAA,CAAA,OAAA,CAAA,UAAA,MAAA,EAAA;AACA,SAAA,IAAA,GAAA,IAAA,MAAA,EAAA;AACA,UAAA,MAAA,CAAA,cAAA,CAAA,GAAA,CAAA,EAAA;AACA,QAAA,GAAA,CAAA,GAAA,CAAA,GAAA,MAAA,CAAA,GAAA,CAAA;AACA;AACA;AACA,GANA;AAQA,SAAA,GAAA;AACA;;AAEA,IAAA,MAAA,GAAA,OAAA;;AACA,SAAA,KAAA,GAAA;AACA,sBAAA,CAAA,MAAA,EAAA,EAAA,QAAA,CAAA,EAAA,CAAA;AACA;;AAEA,IAAA,UAAA,GAAA;AACA,OAAA,MADA;AAEA,OAAA,MAFA;AAGA,OAAA,QAHA;AAIA,OAAA;AAJA,CAAA;;AAOA,SAAA,UAAA,CAAA,IAAA,EAAA;AACA,SAAA,IAAA,CAAA,OAAA,CAAA,SAAA,EAAA,UAAA,CAAA;AAAA,WAAA,UAAA,CAAA,CAAA,CAAA,IAAA,CAAA;AAAA,GAAA,CAAA;AACA","sourcesContent":["<script>\nlet icons = {}\n\nexport default {\n  name: 'fa-icon',\n  props: {\n    name: {\n      type: String,\n      validator (val) {\n        if (val && !(val in icons)) {\n          console.warn(\n            `Invalid prop: prop \"name\" is referring to an unregistered icon \"${val}\".` +\n              `\\nPlease make sure you have imported this icon before using it.`\n          )\n          return false\n        }\n        return true\n      }\n    },\n    title: String,\n    scale: [Number, String],\n    spin: Boolean,\n    inverse: Boolean,\n    pulse: Boolean,\n    flip: {\n      validator (val) {\n        return val === 'horizontal' || val === 'vertical'\n      }\n    },\n    label: String,\n    tabindex: [Number, String]\n  },\n  data () {\n    return {\n      id: getId(),\n      x: false,\n      y: false,\n      childrenWidth: 0,\n      childrenHeight: 0,\n      outerScale: 1\n    }\n  },\n  computed: {\n    normalizedScale () {\n      let scale = this.scale\n      scale = typeof scale === 'undefined' ? 1 : Number(scale)\n      if (isNaN(scale) || scale <= 0) {\n        console.warn(\n          `Invalid prop: prop \"scale\" should be a number over 0.`,\n          this\n        )\n        return this.outerScale\n      }\n      return scale * this.outerScale\n    },\n    klass () {\n      return {\n        'fa-icon': true,\n        'fa-spin': this.spin,\n        'fa-flip-horizontal': this.flip === 'horizontal',\n        'fa-flip-vertical': this.flip === 'vertical',\n        'fa-inverse': this.inverse,\n        'fa-pulse': this.pulse,\n        [this.$options.name]: true\n      }\n    },\n    icon () {\n      if (this.name) {\n        return icons[this.name]\n      }\n      return null\n    },\n    box () {\n      if (this.icon) {\n        return `0 0 ${this.icon.width} ${this.icon.height}`\n      }\n      return `0 0 ${this.width} ${this.height}`\n    },\n    ratio () {\n      if (!this.icon) {\n        return 1\n      }\n      let { width, height } = this.icon\n      return Math.max(width, height) / 16\n    },\n    width () {\n      return (\n        this.childrenWidth ||\n        (this.icon && (this.icon.width / this.ratio) * this.normalizedScale) ||\n        0\n      )\n    },\n    height () {\n      return (\n        this.childrenHeight ||\n        (this.icon && (this.icon.height / this.ratio) * this.normalizedScale) ||\n        0\n      )\n    },\n    style () {\n      if (this.normalizedScale === 1) {\n        return false\n      }\n      return {\n        fontSize: this.normalizedScale + 'em'\n      }\n    },\n    raw () {\n      // generate unique id for each icon's SVG element with ID\n      if (!this.icon || !this.icon.raw) {\n        return null\n      }\n      let raw = this.icon.raw\n      let ids = {}\n      raw = raw.replace(\n        /\\s(?:xml:)?id=([\"']?)([^\"')\\s]+)\\1/g,\n        (match, quote, id) => {\n          let uniqueId = getId()\n          ids[id] = uniqueId\n          return ` id=\"${uniqueId}\"`\n        }\n      )\n      raw = raw.replace(\n        /#(?:([^'\")\\s]+)|xpointer\\(id\\((['\"]?)([^')]+)\\2\\)\\))/g,\n        (match, rawId, _, pointerId) => {\n          let id = rawId || pointerId\n          if (!id || !ids[id]) {\n            return match\n          }\n\n          return `#${ids[id]}`\n        }\n      )\n\n      return raw\n    },\n    focusable () {\n      let { tabindex } = this\n      if (tabindex == null) {\n        return 'false'\n      }\n      let index =\n        typeof tabindex === 'string' ? parseInt(tabindex, 10) : tabindex\n      if (index >= 0) {\n        return null\n      }\n      return 'false'\n    }\n  },\n  mounted () {\n    this.updateStack()\n  },\n  updated () {\n    this.updateStack()\n  },\n  methods: {\n    updateStack () {\n      if (!this.name && this.name !== null && this.$children.length === 0) {\n        console.warn(`Invalid prop: prop \"name\" is required.`)\n        return\n      }\n\n      if (this.icon) {\n        return\n      }\n\n      let width = 0\n      let height = 0\n      this.$children.forEach(child => {\n        child.outerScale = this.normalizedScale\n\n        width = Math.max(width, child.width)\n        height = Math.max(height, child.height)\n      })\n      this.childrenWidth = width\n      this.childrenHeight = height\n      this.$children.forEach(child => {\n        child.x = (width - child.width) / 2\n        child.y = (height - child.height) / 2\n      })\n    }\n  },\n  render (h) {\n    if (this.name === null) {\n      return h()\n    }\n\n    let options = {\n      class: this.klass,\n      style: this.style,\n      attrs: {\n        role: this.$attrs.role || (this.label || this.title ? 'img' : null),\n        'aria-label': this.label || null,\n        'aria-hidden': String(!(this.label || this.title)),\n        tabindex: this.tabindex,\n        x: this.x,\n        y: this.y,\n        width: this.width,\n        height: this.height,\n        viewBox: this.box,\n        focusable: this.focusable\n      }\n    }\n\n    let titleId = `vat-${this.id}`\n    if (this.title) {\n      options.attrs['aria-labelledby'] = titleId\n    }\n\n    if (this.raw) {\n      let html = this.raw\n\n      if (this.title) {\n        html = `<title id=\"${titleId}\">${escapeHTML(this.title)}</title>${html}`\n      }\n\n      options.domProps = {\n        innerHTML: html\n      }\n    }\n\n    let content = this.title\n      ? [h('title', { attrs: { id: titleId } }, this.title)]\n      : []\n\n    return h(\n      'svg',\n      options,\n      this.raw\n        ? null\n        : content.concat(\n          this.$slots.default || [\n            ...this.icon.paths.map((path, i) =>\n              h('path', {\n                attrs: path,\n                key: `path-${i}`\n              })\n            ),\n            ...this.icon.polygons.map((polygon, i) =>\n              h('polygon', {\n                attrs: polygon,\n                key: `polygon-${i}`\n              })\n            )\n          ]\n        )\n    )\n  },\n  register (data) {\n    for (let name in data) {\n      let icon = data[name]\n      let { paths = [], d, polygons = [], points } = icon\n\n      if (d) {\n        paths.push({ d })\n      }\n\n      if (points) {\n        polygons.push({ points })\n      }\n\n      icons[name] = assign({}, icon, {\n        paths,\n        polygons\n      })\n    }\n  },\n  icons\n}\n\nfunction assign (obj, ...sources) {\n  sources.forEach(source => {\n    for (let key in source) {\n      if (source.hasOwnProperty(key)) {\n        obj[key] = source[key]\n      }\n    }\n  })\n\n  return obj\n}\n\nlet cursor = 0xd4937\nfunction getId () {\n  return `va-${(cursor++).toString(16)}`\n}\n\nconst ESCAPE_MAP = {\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  '&': '&amp;'\n}\n\nfunction escapeHTML (html) {\n  return html.replace(/[<>\"&]/g, c => ESCAPE_MAP[c] || c)\n}\n</script>\n\n<style>\n.fa-icon {\n  display: inline-block;\n  fill: currentColor;\n}\n\n.fa-flip-horizontal {\n  transform: scale(-1, 1);\n}\n\n.fa-flip-vertical {\n  transform: scale(1, -1);\n}\n\n.fa-spin {\n  animation: fa-spin 1s 0s infinite linear;\n}\n\n.fa-inverse {\n  color: #fff;\n}\n\n.fa-pulse {\n  animation: fa-spin 1s infinite steps(8);\n}\n\n@keyframes fa-spin {\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n</style>\n"],"sourceRoot":"node_modules/vue-awesome/components"}]}