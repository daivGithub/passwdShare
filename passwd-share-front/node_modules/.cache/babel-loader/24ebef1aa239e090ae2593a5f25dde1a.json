{"remainingRequest":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/babel-loader/lib/index.js!/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/src/views/activiti/process-manage/processManage.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/src/views/activiti/process-manage/processManage.vue","mtime":1577168504902},{"path":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["processManage.vue"],"names":[],"mappings":"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","sourcesContent":["<style lang=\"less\">\n@import \"../../../styles/table-common.less\";\n@import \"./processManage.less\";\n</style>\n<template>\n  <div class=\"search\">\n    <Card>\n      <Row v-show=\"openSearch\" @keydown.enter.native=\"handleSearch\">\n        <Form ref=\"searchForm\" :model=\"searchForm\" inline :label-width=\"70\">\n          <Form-item label=\"流程名称\" prop=\"name\">\n            <Input\n              type=\"text\"\n              v-model=\"searchForm.name\"\n              placeholder=\"请输入名称\"\n              clearable\n              style=\"width: 200px\"\n            />\n          </Form-item>\n          <Form-item label=\"标识Key\" prop=\"processKey\">\n            <Input\n              type=\"text\"\n              v-model=\"searchForm.processKey\"\n              placeholder=\"请输入标识\"\n              clearable\n              style=\"width: 200px\"\n            />\n          </Form-item>\n          <Form-item label=\"部署时间\">\n            <DatePicker\n              v-model=\"selectDate\"\n              type=\"daterange\"\n              format=\"yyyy-MM-dd\"\n              clearable\n              @on-change=\"selectDateRange\"\n              placeholder=\"选择起始时间\"\n              style=\"width: 200px\"\n            ></DatePicker>\n          </Form-item>\n          <Form-item style=\"margin-left:-35px;\" class=\"br\">\n            <Button @click=\"handleSearch\" type=\"primary\" icon=\"ios-search\">搜索</Button>\n            <Button @click=\"handleReset\">重置</Button>\n          </Form-item>\n        </Form>\n      </Row>\n      <Row class=\"operation\">\n        <Button @click=\"deploy\" type=\"primary\" icon=\"md-cloud-upload\">部署流程文件</Button>\n        <Button @click=\"delAll\" icon=\"md-trash\">批量删除</Button>\n        <Button @click=\"getDataList\" icon=\"md-refresh\">刷新</Button>\n        <i-switch\n          size=\"large\"\n          v-model=\"searchForm.showLatest\"\n          @on-change=\"getDataList\"\n          style=\"margin:0 5px\"\n        >\n          <span slot=\"open\">最新</span>\n          <span slot=\"close\">全部</span>\n        </i-switch>\n        <Button type=\"dashed\" @click=\"openSearch=!openSearch\">{{openSearch ? \"关闭搜索\" : \"开启搜索\"}}</Button>\n        <Button type=\"dashed\" @click=\"openTip=!openTip\">{{openTip ? \"关闭提示\" : \"开启提示\"}}</Button>\n      </Row>\n      <Row v-show=\"openTip\">\n        <Alert show-icon>\n          已选择\n          <span class=\"select-count\">{{selectCount}}</span> 项\n          <a class=\"select-clear\" @click=\"clearSelectAll\">清空</a>\n          <span style=\"margin-left:20px\">说明：当有多个相同标识的流程时，默认仅显示其最新版本</span>\n        </Alert>\n      </Row>\n      <Row>\n        <Table\n          :loading=\"loading\"\n          border\n          :columns=\"columns\"\n          :data=\"data\"\n          sortable=\"custom\"\n          @on-sort-change=\"changeSort\"\n          @on-selection-change=\"showSelect\"\n          ref=\"table\"\n        ></Table>\n      </Row>\n      <Row type=\"flex\" justify=\"end\" class=\"page\">\n        <Page\n          :current=\"searchForm.pageNumber\"\n          :total=\"total\"\n          :page-size=\"searchForm.pageSize\"\n          @on-change=\"changePage\"\n          @on-page-size-change=\"changePageSize\"\n          :page-size-opts=\"[10,20,50]\"\n          size=\"small\"\n          show-total\n          show-elevator\n          show-sizer\n        ></Page>\n      </Row>\n    </Card>\n\n    <!-- 部署流程文件 -->\n    <Modal title=\"部署流程文件\" footer-hide v-model=\"modalVisible\" :mask-closable=\"false\" :width=\"500\">\n      <Upload\n        :action=\"deployByFileUrl\"\n        :headers=\"accessToken\"\n        :on-success=\"handleSuccess\"\n        :on-error=\"handleError\"\n        :format=\"['zip','bar','bpmn','xml']\"\n        :max-size=\"5120\"\n        :on-format-error=\"handleFormatError\"\n        :on-exceeded-size=\"handleMaxSize\"\n        type=\"drag\"\n        ref=\"up\"\n      >\n        <div style=\"padding: 20px 0\">\n          <Icon type=\"ios-cloud-upload\" size=\"52\" style=\"color: #3399ff\"></Icon>\n          <p>点击这里或将文件拖拽到这里上传</p>请选择BPMN文件，仅支持zip、bpmn20.xml、bar、bpmn格式文件\n        </div>\n      </Upload>\n    </Modal>\n    <!-- 编辑分类或备注 -->\n    <Modal title=\"编辑流程信息\" v-model=\"editModalVisible\" :mask-closable=\"false\" :width=\"500\">\n      <Form ref=\"form\" :model=\"form\" :label-width=\"110\" :rules=\"formValidate\">\n        <FormItem label=\"流程分类\">\n          <div style=\"display:flex;\">\n            <Input\n              v-model=\"categoryTitle\"\n              readonly\n              clearable\n              @on-clear=\"clearSelectCat\"\n              style=\"margin-right:10px;\"\n            />\n            <Poptip trigger=\"click\" placement=\"right\" title=\"选择类别\" width=\"250\">\n              <Button icon=\"md-list\">选择分类</Button>\n              <div slot=\"content\">\n                <Input\n                  v-model=\"searchKey\"\n                  suffix=\"ios-search\"\n                  @on-change=\"searchCat\"\n                  placeholder=\"输入分类名搜索\"\n                  clearable\n                />\n                <div class=\"tree-list\">\n                  <Tree\n                    :data=\"dataCat\"\n                    :load-data=\"loadDataTree\"\n                    :render=\"renderContent\"\n                    @on-select-change=\"selectTree\"\n                  ></Tree>\n                  <Spin size=\"large\" fix v-if=\"catLoading\"></Spin>\n                </div>\n              </div>\n            </Poptip>\n          </div>\n        </FormItem>\n        <FormItem label=\"关联表单路由\" prop=\"routeName\">\n          <Select v-model=\"form.routeName\" placeholder=\"请选择关联业务表单前端路由名\" clearable>\n            <Option v-for=\"(item, i) in dictForm\" :key=\"i\" :value=\"item.value\" :label=\"item.title\">\n              <span style=\"margin-right:10px;\">{{ item.title }}</span>\n              <span style=\"color:#ccc;\">{{ item.value }}</span>\n            </Option>\n          </Select>\n        </FormItem>\n        <FormItem label=\"关联业务表\" prop=\"businessTable\">\n          <Select v-model=\"form.businessTable\" placeholder=\"请选择关联数据库业务表\" clearable>\n            <Option v-for=\"(item, i) in dictTable\" :key=\"i\" :value=\"item.value\" :label=\"item.title\">\n              <span style=\"margin-right:10px;\">{{ item.title }}</span>\n              <span style=\"color:#ccc;\">{{ item.value }}</span>\n            </Option>\n          </Select>\n        </FormItem>\n        <FormItem label=\"备注描述\" prop=\"description\">\n          <Input v-model=\"form.description\" />\n        </FormItem>\n      </Form>\n      <div slot=\"footer\">\n        <Button type=\"text\" @click=\"editModalVisible=false\">取消</Button>\n        <Button type=\"primary\" :loading=\"submitLoading\" @click=\"handelSubmitEdit\">提交</Button>\n      </div>\n    </Modal>\n    <!-- 图片预览 -->\n    <Modal :title=\"viewTitle\" v-model=\"viewImage\" draggable width=\"800\">\n      <img :src=\"diagramUrl\" alt=\"无效的图片链接\" style=\"width: 100%;margin: 0 auto;display: block;\" />\n      <div slot=\"footer\">\n        <Button @click=\"viewImage=false\" style=\"margin-right:5px\">关闭</Button>\n        <Button :to=\"diagramUrl\" target=\"_blank\" type=\"primary\">下载</Button>\n      </div>\n    </Modal>\n  </div>\n</template>\n\n<script>\nimport {\n  getProcessDataList,\n  updateInfo,\n  updateStatus,\n  deployByFile,\n  exportResource,\n  convertToModel,\n  deleteProcess,\n  initActCategory,\n  loadActCategory,\n  searchActCategory\n} from \"@/api/activiti\";\nimport { getDictDataByType } from \"@/api/index\";\n\nexport default {\n  name: \"process-manage\",\n\n  data() {\n    return {\n      openSearch: true,\n      openTip: true,\n      accessToken: {},\n      deployByFileUrl: \"\",\n      loading: true, // 表单加载状态\n      selectCount: 0, // 多选计数\n      selectList: [], // 多选数据\n      viewImage: false,\n      viewTitle: \"流程图片预览\",\n      diagramUrl: \"\",\n      searchForm: {\n        // 搜索框对应data对象\n        showLatest: true,\n        name: \"\",\n        processKey: \"\",\n        status: \"\",\n        pageNumber: 1, // 当前页数\n        pageSize: 10, // 页面大小\n        sort: \"createTime\", // 默认排序字段\n        order: \"desc\", // 默认排序方式\n        startDate: \"\", // 起始时间\n        endDate: \"\" // 终止时间\n      },\n      selectDate: null, // 选择日期绑定modal\n      modalVisible: false,\n      editModalVisible: false,\n      dataCat: [],\n      catLoading: false,\n      searchKey: \"\",\n      form: {\n        routeName: \"\",\n        businessTable: \"\",\n        description: \"\"\n      },\n      formValidate: {\n        routeName: [{ required: true, message: \"不能为空\", trigger: \"blur\" }],\n        businessTable: [\n          { required: true, message: \"不能为空\", trigger: \"blur\" }\n        ]\n      },\n      categoryTitle: \"\",\n      submitLoading: false, // 添加或编辑提交状态\n      columns: [\n        // 表头\n        {\n          type: \"selection\",\n          width: 60,\n          align: \"center\"\n        },\n        {\n          type: \"index\",\n          width: 60,\n          align: \"center\"\n        },\n        {\n          title: \"名称\",\n          key: \"name\",\n          minWidth: 150,\n          sortable: true\n        },\n        {\n          title: \"标识Key\",\n          key: \"processKey\",\n          width: 130,\n          sortable: true\n        },\n        {\n          title: \"版本\",\n          key: \"version\",\n          width: 90,\n          align: \"center\",\n          sortable: true,\n          render: (h, params) => {\n            let re = \"\";\n            if (params.row.version) {\n              re = \"v.\" + params.row.version;\n            }\n            return h(\"div\", re);\n          }\n        },\n        {\n          title: \"流程图片\",\n          key: \"diagramName\",\n          width: 160,\n          sortable: true,\n          render: (h, params) => {\n            return h(\"div\", [\n              h(\n                \"a\",\n                {\n                  on: {\n                    click: () => {\n                      this.showResource(1, params.row);\n                    }\n                  }\n                },\n                params.row.diagramName\n              )\n            ]);\n          }\n        },\n        {\n          title: \"流程XML\",\n          key: \"xmlName\",\n          width: 160,\n          sortable: true,\n          render: (h, params) => {\n            return h(\"div\", [\n              h(\n                \"a\",\n                {\n                  on: {\n                    click: () => {\n                      this.showResource(0, params.row);\n                    }\n                  }\n                },\n                params.row.xmlName\n              )\n            ]);\n          }\n        },\n        {\n          title: \"关联表单路由名\",\n          key: \"routeName\",\n          width: 160,\n          sortable: true,\n          render: (h, params) => {\n            let re = \"\";\n            this.dictForm.forEach(e => {\n              if (e.value == params.row.routeName) {\n                re = `${e.title} (${e.value})`;\n              }\n            });\n            return h(\"div\", re);\n          }\n        },\n        {\n          title: \"数据库业务表\",\n          key: \"businessTable\",\n          width: 170,\n          sortable: true,\n          render: (h, params) => {\n            let re = \"\";\n            this.dictTable.forEach(e => {\n              if (e.value == params.row.businessTable) {\n                re = `${e.title} (${e.value})`;\n              }\n            });\n            return h(\"div\", re);\n          }\n        },\n        {\n          title: \"所属分类\",\n          key: \"categoryTitle\",\n          width: 130,\n          sortable: true\n        },\n        {\n          title: \"状态\",\n          key: \"status\",\n          align: \"center\",\n          width: 130,\n          render: (h, params) => {\n            if (params.row.status == 1) {\n              return h(\"div\", [\n                h(\"Badge\", {\n                  props: {\n                    status: \"success\",\n                    text: \"已激活\"\n                  }\n                })\n              ]);\n            } else if (params.row.status == 0) {\n              return h(\"div\", [\n                h(\"Badge\", {\n                  props: {\n                    status: \"error\",\n                    text: \"已挂起\"\n                  }\n                })\n              ]);\n            }\n          },\n          filters: [\n            {\n              label: \"已激活\",\n              value: 1\n            },\n            {\n              label: \"已挂起\",\n              value: 0\n            }\n          ],\n          filterMultiple: false,\n          filterMethod(value, row) {\n            if (value == 0) {\n              return row.status == 0;\n            } else if (value == 1) {\n              return row.status == 1;\n            }\n          }\n        },\n        {\n          title: \"备注描述\",\n          key: \"description\",\n          width: 150,\n          sortable: true\n        },\n        {\n          title: \"部署时间\",\n          key: \"createTime\",\n          width: 180,\n          sortable: true,\n          sortType: \"desc\"\n        },\n        {\n          title: \"更新时间\",\n          key: \"updateTime\",\n          width: 180,\n          sortable: true\n        },\n        {\n          title: \"操作\",\n          key: \"action\",\n          width: 365,\n          align: \"center\",\n          fixed: \"right\",\n          render: (h, params) => {\n            let suspendOrActive = \"\";\n            if (params.row.status == 0) {\n              // 挂起可激活\n              suspendOrActive = h(\n                \"Button\",\n                {\n                  props: {\n                    type: \"success\",\n                    size: \"small\",\n                    icon: \"md-play\"\n                  },\n                  style: {\n                    marginRight: \"5px\"\n                  },\n                  on: {\n                    click: () => {\n                      this.editStatus(1, params.row);\n                    }\n                  }\n                },\n                \"激活\"\n              );\n            } else {\n              // 激活可挂起\n              suspendOrActive = h(\n                \"Button\",\n                {\n                  props: {\n                    type: \"warning\",\n                    size: \"small\",\n                    icon: \"md-pause\"\n                  },\n                  style: {\n                    marginRight: \"5px\"\n                  },\n                  on: {\n                    click: () => {\n                      this.editStatus(0, params.row);\n                    }\n                  }\n                },\n                \"挂起\"\n              );\n            }\n            return h(\"div\", [\n              suspendOrActive,\n              h(\n                \"Button\",\n                {\n                  props: {\n                    type: \"primary\",\n                    size: \"small\",\n                    icon: \"logo-buffer\"\n                  },\n                  style: {\n                    marginRight: \"5px\"\n                  },\n                  on: {\n                    click: () => {\n                      this.editNode(params.row);\n                    }\n                  }\n                },\n                \"节点设置\"\n              ),\n              h(\n                \"Button\",\n                {\n                  props: {\n                    size: \"small\"\n                  },\n                  style: {\n                    marginRight: \"5px\"\n                  },\n                  on: {\n                    click: () => {\n                      this.edit(params.row);\n                    }\n                  }\n                },\n                \"编辑\"\n              ),\n              h(\n                \"Button\",\n                {\n                  props: {\n                    type: \"info\",\n                    size: \"small\"\n                  },\n                  style: {\n                    marginRight: \"5px\"\n                  },\n                  on: {\n                    click: () => {\n                      this.convert(params.row);\n                    }\n                  }\n                },\n                \"转模型\"\n              ),\n              h(\n                \"Button\",\n                {\n                  props: {\n                    type: \"error\",\n                    size: \"small\"\n                  },\n                  on: {\n                    click: () => {\n                      this.remove(params.row);\n                    }\n                  }\n                },\n                \"删除\"\n              )\n            ]);\n          }\n        }\n      ],\n      data: [], // 表单数据\n      total: 0, // 表单数据总数\n      dictTable: [],\n      dictForm: []\n    };\n  },\n  methods: {\n    init() {\n      this.accessToken = {\n        accessToken: this.getStore(\"accessToken\")\n      };\n      this.deployByFileUrl = deployByFile;\n      this.getDataList();\n      this.initCategoryTreeData();\n      this.getDictDataType();\n    },\n    getDictDataType() {\n      getDictDataByType(\"business_table\").then(res => {\n        if (res.success) {\n          this.dictTable = res.result;\n        }\n      });\n      getDictDataByType(\"business_form\").then(res => {\n        if (res.success) {\n          this.dictForm = res.result;\n        }\n      });\n    },\n    renderContent(h, { root, node, data }) {\n      let icon = \"\";\n      if (data.type == \"0\") {\n        icon = \"md-folder-open\";\n      } else if (data.type == \"1\") {\n        icon = \"ios-bookmark-outline\";\n      }\n      return h(\n        \"span\",\n        {\n          style: {\n            display: \"inline-block\",\n            cursor: \"pointer\"\n          },\n          on: {\n            click: () => {\n              this.selectTree(data);\n            }\n          }\n        },\n        [\n          h(\"span\", [\n            h(\"Icon\", {\n              props: {\n                type: icon,\n                size: \"16\"\n              },\n              style: {\n                \"margin-right\": \"8px\",\n                \"margin-bottom\": \"3px\"\n              }\n            }),\n            h(\"span\", data.title)\n          ])\n        ]\n      );\n    },\n    initCategoryTreeData() {\n      initActCategory().then(res => {\n        if (res.success) {\n          res.result.forEach(function(e) {\n            if (e.isParent) {\n              e.loading = false;\n              e.children = [];\n            }\n            if (e.status == -1) {\n              e.title = \"[已禁用] \" + e.title;\n              e.disabled = true;\n            }\n          });\n          this.dataCat = res.result;\n        }\n      });\n    },\n    loadDataTree(item, callback) {\n      loadActCategory(item.id).then(res => {\n        if (res.success) {\n          res.result.forEach(function(e) {\n            if (e.isParent) {\n              e.loading = false;\n              e.children = [];\n            }\n            if (e.status == -1) {\n              e.title = \"[已禁用] \" + e.title;\n              e.disabled = true;\n            }\n          });\n          callback(res.result);\n        }\n      });\n    },\n    searchCat() {\n      // 搜索部门\n      if (this.searchKey) {\n        this.catLoading = true;\n        searchActCategory({ title: this.searchKey }).then(res => {\n          this.catLoading = false;\n          if (res.success) {\n            res.result.forEach(function(e) {\n              if (e.status == -1) {\n                e.title = \"[已禁用] \" + e.title;\n                e.disabled = true;\n              }\n            });\n            this.dataCat = res.result;\n          }\n        });\n      } else {\n        this.initCategoryTreeData();\n      }\n    },\n    selectTree(v) {\n      if (v) {\n        // 转换null为\"\"\n        for (let attr in v) {\n          if (v[attr] == null) {\n            v[attr] = \"\";\n          }\n        }\n        let str = JSON.stringify(v);\n        let data = JSON.parse(str);\n        if (data.type == 0) {\n          this.$Message.warning(\"请选择一个类别\");\n          return;\n        }\n        this.form.categoryId = data.id;\n        this.categoryTitle = data.title;\n      }\n    },\n    clearSelectCat() {\n      this.form.categoryId = \"\";\n      this.categoryTitle = \"\";\n    },\n    changePage(v) {\n      this.searchForm.pageNumber = v;\n      this.getDataList();\n      this.clearSelectAll();\n    },\n    changePageSize(v) {\n      this.searchForm.pageSize = v;\n      this.getDataList();\n    },\n    selectDateRange(v) {\n      if (v) {\n        this.searchForm.startDate = v[0];\n        this.searchForm.endDate = v[1];\n      }\n    },\n    getDataList() {\n      this.loading = true;\n      getProcessDataList(this.searchForm).then(res => {\n        this.loading = false;\n        if (res.success) {\n          this.data = res.result.content;\n          this.total = res.result.totalElements;\n        }\n      });\n    },\n    handleSearch() {\n      this.searchForm.pageNumber = 1;\n      this.searchForm.pageSize = 10;\n      this.getDataList();\n    },\n    handleReset() {\n      this.$refs.searchForm.resetFields();\n      this.searchForm.pageNumber = 1;\n      this.searchForm.pageSize = 10;\n      this.selectDate = null;\n      this.searchForm.startDate = \"\";\n      this.searchForm.endDate = \"\";\n      // 重新加载数据\n      this.getDataList();\n    },\n    changeSort(e) {\n      this.searchForm.sort = e.key;\n      this.searchForm.order = e.order;\n      if (e.order == \"normal\") {\n        this.searchForm.order = \"\";\n      }\n      this.getDataList();\n    },\n    deploy(v) {\n      this.modalVisible = true;\n    },\n    handleFormatError(file) {\n      this.$Notice.warning({\n        title: \"不支持的文件格式\",\n        desc:\n          \"所选文件‘ \" +\n          file.name +\n          \" ’格式不正确, 请选择 .zip .bar .bpmn .bpmn20.xml格式文件\"\n      });\n    },\n    handleMaxSize(file) {\n      this.$Notice.warning({\n        title: \"文件大小过大\",\n        desc: \"所选文件‘ \" + file.name + \" ’大小过大, 不得超过 5M.\"\n      });\n    },\n    handleSuccess(res, file) {\n      if (res.success) {\n        this.$Message.success(\"部署成功，请继续编辑完善流程信息\");\n        this.modalVisible = false;\n        this.getDataList();\n      } else {\n        this.$Message.error(res.message);\n      }\n    },\n    handleError(error, file, fileList) {\n      this.$Message.error(error.toString());\n    },\n    edit(v) {\n      this.$refs.form.resetFields();\n      // 转换null为\"\"\n      for (let attr in v) {\n        if (v[attr] == null) {\n          v[attr] = \"\";\n        }\n      }\n      let str = JSON.stringify(v);\n      let data = JSON.parse(str);\n      this.form = data;\n      this.categoryTitle = data.categoryTitle;\n      this.editModalVisible = true;\n    },\n    editNode(v) {\n      let query = { id: v.id, name: v.name, backRoute: this.$route.name };\n      this.$router.push({\n        name: \"process_node_edit\",\n        query: query\n      });\n    },\n    handelSubmitEdit() {\n      this.$refs.form.validate(valid => {\n        if (valid) {\n          this.submitLoading = true;\n          updateInfo(this.form).then(res => {\n            this.submitLoading = false;\n            if (res.success) {\n              this.$Message.success(\"操作成功\");\n              this.getDataList();\n              this.editModalVisible = false;\n            }\n          });\n        }\n      });\n    },\n    editStatus(status, v) {\n      let operation = \"\";\n      if (status == 0) {\n        operation = \"暂停挂起\";\n      } else {\n        operation = \"激活运行\";\n      }\n      this.$Modal.confirm({\n        title: \"确认\" + operation,\n        content: `您确认要${operation}流程${v.name}?`,\n        loading: true,\n        onOk: () => {\n          let params = {\n            status: status,\n            id: v.id\n          };\n          updateStatus(params).then(res => {\n            this.$Modal.remove();\n            if (res.success) {\n              this.$Message.success(\"操作成功\");\n              this.getDataList();\n            }\n          });\n        }\n      });\n    },\n    convert(v) {\n      let that = this;\n      this.$Modal.confirm({\n        title: \"确认转化\",\n        content: \"您确认要转化流程 \" + v.name + \" 为模型?\",\n        loading: true,\n        onOk: () => {\n          convertToModel(v.id).then(res => {\n            this.$Modal.remove();\n            if (res.success) {\n              setTimeout(function() {\n                that.showJump();\n              }, 300);\n            }\n          });\n        }\n      });\n    },\n    showJump() {\n      this.$Modal.confirm({\n        title: \"转化成功\",\n        content: \"是否立即跳转查看该模型?\",\n        onOk: () => {\n          this.$router.push({\n            name: \"model-manage\"\n          });\n        }\n      });\n    },\n    showResource(type, v) {\n      if (type == 0) {\n        window.open(\n          `${exportResource}?id=${\n            v.id\n          }&type=${type}&accessToken=${this.getStore(\"accessToken\")}`\n        );\n      } else if (type == 1) {\n        this.viewTitle = \"流程图片预览(\" + v.diagramName + \")\";\n        this.diagramUrl = `${exportResource}?id=${\n          v.id\n        }&type=${type}&accessToken=${this.getStore(\"accessToken\")}`;\n        this.viewImage = true;\n      }\n    },\n    remove(v) {\n      this.$Modal.confirm({\n        title: \"确认删除\",\n        content: \"您确认要删除流程 \" + v.name + \" ?\",\n        loading: true,\n        onOk: () => {\n          deleteProcess(v.id).then(res => {\n            this.$Modal.remove();\n            if (res.success) {\n              this.$Message.success(\"操作成功\");\n              this.getDataList();\n            }\n          });\n        }\n      });\n    },\n    showSelect(e) {\n      this.selectList = e;\n      this.selectCount = e.length;\n    },\n    clearSelectAll() {\n      this.$refs.table.selectAll(false);\n    },\n    delAll() {\n      if (this.selectCount <= 0) {\n        this.$Message.warning(\"您还未选择要删除的数据\");\n        return;\n      }\n      this.$Modal.confirm({\n        title: \"确认删除\",\n        content: \"您确认要删除所选的 \" + this.selectCount + \" 条数据?\",\n        loading: true,\n        onOk: () => {\n          let ids = \"\";\n          this.selectList.forEach(function(e) {\n            ids += e.id + \",\";\n          });\n          ids = ids.substring(0, ids.length - 1);\n          deleteProcess(ids).then(res => {\n            this.$Modal.remove();\n            if (res.success) {\n              this.$Message.success(\"操作成功\");\n              this.clearSelectAll();\n              this.getDataList();\n            }\n          });\n        }\n      });\n    }\n  },\n  mounted() {\n    this.init();\n  },\n  watch: {\n    // 监听路由变化\n    $route(to, from) {\n      if (to.name == \"process-manage\") {\n        this.getDataList();\n      }\n    }\n  }\n};\n</script>"],"sourceRoot":"src/views/activiti/process-manage"}]}