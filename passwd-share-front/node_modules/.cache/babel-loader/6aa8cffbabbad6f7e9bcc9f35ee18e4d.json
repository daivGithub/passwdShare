{"remainingRequest":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/babel-loader/lib/index.js!/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/src/views/share-charts/dashboard1/components/map.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/src/views/share-charts/dashboard1/components/map.vue","mtime":1577168504920},{"path":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IGVjaGFydHMgZnJvbSAiZWNoYXJ0cyI7CmltcG9ydCBwcm9ncmVzc0l0ZW0gZnJvbSAiLi9wcm9ncmVzcyI7CmltcG9ydCBnZW9EYXRhIGZyb20gIi4uLy4uL21hcC1kYXRhL2dldC1nZW9ncmFwaHktdmFsdWUuanMiOwppbXBvcnQgY2l0eURhdGEgZnJvbSAiLi4vLi4vbWFwLWRhdGEvZ2V0LWNpdHktdmFsdWUuanMiOwoKdmFyIGNoaW5hSnNvbiA9IHJlcXVpcmUoIi4uLy4uL21hcC1kYXRhL2NoaW5hLmpzb24iKTsKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiY2FyZC1tYXAiLAogIGNvbXBvbmVudHM6IHsKICAgIHByb2dyZXNzSXRlbTogcHJvZ3Jlc3NJdGVtCiAgfSwKICBwcm9wczoge30sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7fTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGNvbnZlcnREYXRhOiBmdW5jdGlvbiBjb252ZXJ0RGF0YShkYXRhKSB7CiAgICAgIHZhciByZXMgPSBbXTsKICAgICAgdmFyIGxlbiA9IGRhdGEubGVuZ3RoOwoKICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW47IGkrKykgewogICAgICAgIHZhciBnZW9Db29yZCA9IGdlb0RhdGFbZGF0YVtpXS5uYW1lXTsKCiAgICAgICAgaWYgKGdlb0Nvb3JkKSB7CiAgICAgICAgICByZXMucHVzaCh7CiAgICAgICAgICAgIG5hbWU6IGRhdGFbaV0ubmFtZSwKICAgICAgICAgICAgdmFsdWU6IGdlb0Nvb3JkLmNvbmNhdChkYXRhW2ldLnZhbHVlKQogICAgICAgICAgfSk7CiAgICAgICAgfQogICAgICB9CgogICAgICByZXR1cm4gcmVzOwogICAgfSwKICAgIGluaXQ6IGZ1bmN0aW9uIGluaXQoKSB7CiAgICAgIHZhciBtYXAgPSBlY2hhcnRzLmluaXQoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoIm1hcCIpKTsKICAgICAgZWNoYXJ0cy5yZWdpc3Rlck1hcCgiY2hpbmEiLCBjaGluYUpzb24pOwogICAgICBtYXAuc2V0T3B0aW9uKHsKICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6ICIjRkZGIiwKICAgICAgICB0b29sYm94OiB7CiAgICAgICAgICBzaG93OiB0cnVlLAogICAgICAgICAgbGVmdDogImxlZnQiLAogICAgICAgICAgdG9wOiAidG9wIiwKICAgICAgICAgIGZlYXR1cmU6IHsKICAgICAgICAgICAgZGF0YVZpZXc6IHsKICAgICAgICAgICAgICByZWFkT25seTogZmFsc2UKICAgICAgICAgICAgfSwKICAgICAgICAgICAgcmVzdG9yZToge30sCiAgICAgICAgICAgIHNhdmVBc0ltYWdlOiB7fQogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgZ2VvOiB7CiAgICAgICAgICBtYXA6ICJjaGluYSIsCiAgICAgICAgICBsYWJlbDogewogICAgICAgICAgICBlbXBoYXNpczogewogICAgICAgICAgICAgIHNob3c6IGZhbHNlCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICBpdGVtU3R5bGU6IHsKICAgICAgICAgICAgbm9ybWFsOiB7CiAgICAgICAgICAgICAgYXJlYUNvbG9yOiAiI0VGRUZFRiIsCiAgICAgICAgICAgICAgYm9yZGVyQ29sb3I6ICIjQ0NDIgogICAgICAgICAgICB9LAogICAgICAgICAgICBlbXBoYXNpczogewogICAgICAgICAgICAgIGFyZWFDb2xvcjogIiNFNUU1RTUiCiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIGdyaWQ6IHsKICAgICAgICAgIHRvcDogMCwKICAgICAgICAgIGxlZnQ6IDAsCiAgICAgICAgICByaWdodDogMCwKICAgICAgICAgIGJvdHRvbTogMCwKICAgICAgICAgIGNvbnRhaW5MYWJlbDogdHJ1ZQogICAgICAgIH0sCiAgICAgICAgc2VyaWVzOiBbewogICAgICAgICAgdHlwZTogInNjYXR0ZXIiLAogICAgICAgICAgY29vcmRpbmF0ZVN5c3RlbTogImdlbyIsCiAgICAgICAgICBkYXRhOiB0aGlzLmNvbnZlcnREYXRhKGNpdHlEYXRhKSwKICAgICAgICAgIHN5bWJvbFNpemU6IGZ1bmN0aW9uIHN5bWJvbFNpemUodmFsKSB7CiAgICAgICAgICAgIHJldHVybiB2YWxbMl0gLyAxMDsKICAgICAgICAgIH0sCiAgICAgICAgICBsYWJlbDogewogICAgICAgICAgICBub3JtYWw6IHsKICAgICAgICAgICAgICBmb3JtYXR0ZXI6ICJ7Yn0iLAogICAgICAgICAgICAgIHBvc2l0aW9uOiAicmlnaHQiLAogICAgICAgICAgICAgIHNob3c6IGZhbHNlCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIGVtcGhhc2lzOiB7CiAgICAgICAgICAgICAgc2hvdzogdHJ1ZQogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgaXRlbVN0eWxlOiB7CiAgICAgICAgICAgIG5vcm1hbDogewogICAgICAgICAgICAgIGNvbG9yOiAiIzYzYTNmOSIKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH1dCiAgICAgIH0pOwogICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigicmVzaXplIiwgZnVuY3Rpb24gKCkgewogICAgICAgIG1hcC5yZXNpemUoKTsKICAgICAgfSk7CiAgICB9CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdGhpcy5pbml0KCk7CiAgfQp9Ow=="},{"version":3,"sources":["map.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"card-map\">\n    <Card>\n      <p slot=\"title\" class=\"card-title\">访问统计</p>\n      <Row>\n        <Col span=\"16\">\n          <div style=\"height:350px;\" id=\"map\"></div>\n        </Col>\n        <Col span=\"8\">\n          <Row type=\"flex\" justify=\"center\" align=\"middle\" class=\"right\">\n            <div class=\"content\">\n              <progressItem value=\"1,12,540\" title=\"北京\" :data=\"72\" color=\"#5089de\" />\n              <progressItem value=\"51,480\" title=\"上海\" :data=\"39\" color=\"#23b397\" />\n              <progressItem value=\"45,760 \" title=\"深圳\" :data=\"61\" color=\"#56c2d6\" />\n              <progressItem value=\"98,512\" title=\"广州\" :data=\"52\" color=\"#f8cc6b\" />\n              <progressItem value=\"2,154\" title=\"成都\" :data=\"28\" color=\"#f0643b\" />\n            </div>\n          </Row>\n        </Col>\n      </Row>\n    </Card>\n  </div>\n</template>\n\n<script>\nimport echarts from \"echarts\";\nimport progressItem from \"./progress\";\nimport geoData from \"../../map-data/get-geography-value.js\";\nimport cityData from \"../../map-data/get-city-value.js\";\nvar chinaJson = require(\"../../map-data/china.json\");\nexport default {\n  name: \"card-map\",\n  components: {\n    progressItem\n  },\n  props: {},\n  data() {\n    return {};\n  },\n  methods: {\n    convertData(data) {\n      let res = [];\n      let len = data.length;\n      for (var i = 0; i < len; i++) {\n        var geoCoord = geoData[data[i].name];\n        if (geoCoord) {\n          res.push({\n            name: data[i].name,\n            value: geoCoord.concat(data[i].value)\n          });\n        }\n      }\n      return res;\n    },\n    init() {\n      var map = echarts.init(document.getElementById(\"map\"));\n      echarts.registerMap(\"china\", chinaJson);\n      map.setOption({\n        backgroundColor: \"#FFF\",\n        toolbox: {\n          show: true,\n          left: \"left\",\n          top: \"top\",\n          feature: {\n            dataView: { readOnly: false },\n            restore: {},\n            saveAsImage: {}\n          }\n        },\n        geo: {\n          map: \"china\",\n          label: {\n            emphasis: {\n              show: false\n            }\n          },\n          itemStyle: {\n            normal: {\n              areaColor: \"#EFEFEF\",\n              borderColor: \"#CCC\"\n            },\n            emphasis: {\n              areaColor: \"#E5E5E5\"\n            }\n          }\n        },\n        grid: {\n          top: 0,\n          left: 0,\n          right: 0,\n          bottom: 0,\n          containLabel: true\n        },\n        series: [\n          {\n            type: \"scatter\",\n            coordinateSystem: \"geo\",\n            data: this.convertData(cityData),\n            symbolSize: function(val) {\n              return val[2] / 10;\n            },\n            label: {\n              normal: {\n                formatter: \"{b}\",\n                position: \"right\",\n                show: false\n              },\n              emphasis: {\n                show: true\n              }\n            },\n            itemStyle: {\n              normal: {\n                color: \"#63a3f9\"\n              }\n            }\n          }\n        ]\n      });\n\n      window.addEventListener(\"resize\", function() {\n        map.resize();\n      });\n    }\n  },\n  mounted() {\n    this.init();\n  }\n};\n</script>\n<style lang=\"less\">\n.card-map {\n  .ivu-card-head {\n    border-bottom: none !important;\n  }\n  .card-title {\n    color: #67757c;\n  }\n  .right {\n    height: 350px;\n    .content {\n      height: 290px;\n      width: 100%;\n      margin-right: 10px;\n    }\n  }\n}\n</style>"],"sourceRoot":"src/views/share-charts/dashboard1/components"}]}