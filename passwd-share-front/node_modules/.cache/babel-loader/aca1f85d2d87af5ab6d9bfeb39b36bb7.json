{"remainingRequest":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/babel-loader/lib/index.js!/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/src/views/message/message.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/src/views/message/message.vue","mtime":1577168504907},{"path":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["message.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsGA,OAAA,OAAA,MAAA,WAAA;AACA,SACA,kBADA,EAEA,eAFA,EAGA,iBAHA,QAIA,aAJA;AAKA,eAAA;AACA,EAAA,IAAA,EAAA,eADA;AAEA,EAAA,IAFA,kBAEA;AAAA;;AACA,QAAA,aAAA,GAAA,SAAA,aAAA,CAAA,CAAA,EAAA,MAAA,EAAA;AACA,aAAA,CAAA,CACA,QADA,EAEA;AACA,QAAA,KAAA,EAAA;AACA,UAAA,IAAA,EAAA,YADA;AAEA,UAAA,IAAA,EAAA;AAFA,SADA;AAKA,QAAA,EAAA,EAAA;AACA,UAAA,KAAA,EAAA,iBAAA;AACA;AACA,gBAAA,CAAA,GAAA,MAAA,CAAA,GAAA,CAFA,CAGA;;AACA,iBAAA,IAAA,IAAA,IAAA,CAAA,EAAA;AACA,kBAAA,CAAA,CAAA,IAAA,CAAA,IAAA,IAAA,EAAA;AACA,gBAAA,CAAA,CAAA,IAAA,CAAA,GAAA,EAAA;AACA;AACA;;AACA,gBAAA,GAAA,GAAA,IAAA,CAAA,SAAA,CAAA,CAAA,CAAA;AACA,gBAAA,IAAA,GAAA,IAAA,CAAA,KAAA,CAAA,GAAA,CAAA;AACA,YAAA,IAAA,CAAA,MAAA,GAAA,CAAA;AACA,YAAA,KAAA,CAAA,OAAA,GAAA,IAAA;AACA,YAAA,eAAA,CAAA,IAAA,CAAA,CAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,cAAA,KAAA,CAAA,OAAA,GAAA,KAAA;;AACA,kBAAA,GAAA,CAAA,OAAA,EAAA;AACA,gBAAA,KAAA,CAAA,QAAA,CAAA,OAAA,CAAA,MAAA;;AACA,gBAAA,KAAA,CAAA,WAAA,IAAA,CAAA;AACA,gBAAA,KAAA,CAAA,YAAA,IAAA,CAAA;;AACA,gBAAA,KAAA,CAAA,MAAA,CAAA,MAAA,CAAA,iBAAA,EAAA,KAAA,CAAA,WAAA;;AACA,gBAAA,KAAA,CAAA,cAAA;AACA;AACA,aATA;AAUA;AAxBA;AALA,OAFA,EAkCA,MAlCA,CAAA;AAoCA,KArCA;;AAsCA,QAAA,YAAA,GAAA,SAAA,YAAA,CAAA,CAAA,EAAA,MAAA,EAAA;AACA,aAAA,CAAA,CACA,QADA,EAEA;AACA,QAAA,KAAA,EAAA;AACA,UAAA,IAAA,EAAA,UADA;AAEA,UAAA,IAAA,EAAA,OAFA;AAGA,UAAA,IAAA,EAAA;AAHA,SADA;AAMA,QAAA,EAAA,EAAA;AACA,UAAA,KAAA,EAAA,iBAAA;AACA;AACA,gBAAA,CAAA,GAAA,MAAA,CAAA,GAAA,CAFA,CAGA;;AACA,iBAAA,IAAA,IAAA,IAAA,CAAA,EAAA;AACA,kBAAA,CAAA,CAAA,IAAA,CAAA,IAAA,IAAA,EAAA;AACA,gBAAA,CAAA,CAAA,IAAA,CAAA,GAAA,EAAA;AACA;AACA;;AACA,gBAAA,GAAA,GAAA,IAAA,CAAA,SAAA,CAAA,CAAA,CAAA;AACA,gBAAA,IAAA,GAAA,IAAA,CAAA,KAAA,CAAA,GAAA,CAAA;AACA,YAAA,IAAA,CAAA,MAAA,GAAA,CAAA;AACA,YAAA,KAAA,CAAA,OAAA,GAAA,IAAA;AACA,YAAA,eAAA,CAAA,IAAA,CAAA,CAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,cAAA,KAAA,CAAA,OAAA,GAAA,KAAA;;AACA,kBAAA,GAAA,CAAA,OAAA,EAAA;AACA,gBAAA,KAAA,CAAA,QAAA,CAAA,OAAA,CAAA,MAAA;;AACA,gBAAA,KAAA,CAAA,YAAA,IAAA,CAAA;AACA,gBAAA,KAAA,CAAA,eAAA,IAAA,CAAA;;AACA,gBAAA,KAAA,CAAA,cAAA;AACA;AACA,aARA;AASA;AAvBA;AANA,OAFA,EAkCA,IAlCA,CAAA;AAoCA,KArCA;;AAsCA,QAAA,UAAA,GAAA,SAAA,UAAA,CAAA,CAAA,EAAA,MAAA,EAAA;AACA,aAAA,CAAA,CACA,QADA,EAEA;AACA,QAAA,KAAA,EAAA;AACA,UAAA,IAAA,EAAA,SADA;AAEA,UAAA,IAAA,EAAA;AAFA,SADA;AAKA,QAAA,KAAA,EAAA;AACA,UAAA,MAAA,EAAA;AADA,SALA;AAQA,QAAA,EAAA,EAAA;AACA,UAAA,KAAA,EAAA,iBAAA;AACA;AACA,gBAAA,CAAA,GAAA,MAAA,CAAA,GAAA,CAFA,CAGA;;AACA,iBAAA,IAAA,IAAA,IAAA,CAAA,EAAA;AACA,kBAAA,CAAA,CAAA,IAAA,CAAA,IAAA,IAAA,EAAA;AACA,gBAAA,CAAA,CAAA,IAAA,CAAA,GAAA,EAAA;AACA;AACA;;AACA,gBAAA,GAAA,GAAA,IAAA,CAAA,SAAA,CAAA,CAAA,CAAA;AACA,gBAAA,IAAA,GAAA,IAAA,CAAA,KAAA,CAAA,GAAA,CAAA;AACA,YAAA,IAAA,CAAA,MAAA,GAAA,CAAA;AACA,YAAA,KAAA,CAAA,OAAA,GAAA,IAAA;AACA,YAAA,eAAA,CAAA,IAAA,CAAA,CAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,cAAA,KAAA,CAAA,OAAA,GAAA,KAAA;;AACA,kBAAA,GAAA,CAAA,OAAA,EAAA;AACA,gBAAA,KAAA,CAAA,QAAA,CAAA,OAAA,CAAA,MAAA;;AACA,gBAAA,KAAA,CAAA,eAAA,IAAA,CAAA;AACA,gBAAA,KAAA,CAAA,YAAA,IAAA,CAAA;;AACA,gBAAA,KAAA,CAAA,cAAA;AACA;AACA,aARA;AASA;AAvBA;AARA,OAFA,EAoCA,IApCA,CAAA;AAsCA,KAvCA;;AAwCA,QAAA,aAAA,GAAA,SAAA,aAAA,CAAA,CAAA,EAAA,MAAA,EAAA;AACA,aAAA,CAAA,CACA,QADA,EAEA;AACA,QAAA,KAAA,EAAA;AACA,UAAA,IAAA,EAAA,UADA;AAEA,UAAA,IAAA,EAAA,OAFA;AAGA,UAAA,IAAA,EAAA;AAHA,SADA;AAMA,QAAA,EAAA,EAAA;AACA,UAAA,KAAA,EAAA,iBAAA;AACA;AACA,gBAAA,CAAA,GAAA,MAAA,CAAA,GAAA;AACA,YAAA,KAAA,CAAA,OAAA,GAAA,IAAA;AACA,YAAA,iBAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,cAAA,KAAA,CAAA,OAAA,GAAA,KAAA;;AACA,kBAAA,GAAA,CAAA,OAAA,EAAA;AACA,gBAAA,KAAA,CAAA,QAAA,CAAA,OAAA,CAAA,MAAA;;AACA,gBAAA,KAAA,CAAA,eAAA,IAAA,CAAA;;AACA,gBAAA,KAAA,CAAA,cAAA;AACA;AACA,aAPA;AAQA;AAbA;AANA,OAFA,EAwBA,MAxBA,CAAA;AA0BA,KA3BA;;AA4BA,WAAA;AACA,MAAA,OAAA,EAAA,IADA;AAEA,MAAA,MAAA,EAAA;AACA,QAAA,MAAA,EAAA,IAAA,CAAA,KAAA,CAAA,OAAA,CAAA,GAAA,CAAA,UAAA,CAAA,EAAA,EADA;AAEA,QAAA,MAAA,EAAA,CAFA;AAGA,QAAA,UAAA,EAAA,CAHA;AAGA;AACA,QAAA,QAAA,EAAA,EAJA;AAIA;AACA,QAAA,IAAA,EAAA,YALA;AAKA;AACA,QAAA,KAAA,EAAA,MANA,CAMA;;AANA,OAFA;AAUA,MAAA,KAAA,EAAA,CAVA;AAWA,MAAA,WAAA,EAAA,CAXA;AAYA,MAAA,SAAA,EAAA,CAZA;AAaA,MAAA,WAAA,EAAA,CAbA;AAcA,MAAA,cAAA,EAAA,EAdA;AAeA,MAAA,aAAA,EAAA,EAfA;AAgBA,MAAA,cAAA,EAAA,EAhBA;AAiBA,MAAA,cAAA,EAAA,EAjBA;AAkBA,MAAA,kBAAA,EAAA,QAlBA;AAmBA,MAAA,gBAAA,EAAA,IAnBA;AAoBA,MAAA,WAAA,EAAA,CApBA;AAqBA,MAAA,YAAA,EAAA,CArBA;AAsBA,MAAA,eAAA,EAAA,CAtBA;AAuBA,MAAA,UAAA,EAAA,QAvBA;AAwBA,MAAA,GAAA,EAAA;AACA,QAAA,KAAA,EAAA,EADA;AAEA,QAAA,IAAA,EAAA,EAFA;AAGA,QAAA,OAAA,EAAA;AAHA,OAxBA;AA6BA,MAAA,eAAA,EAAA,KAAA,MAAA,CAAA,KAAA,CAAA,IAAA,CAAA,WA7BA;AA8BA,MAAA,eAAA,EAAA,CACA;AACA,QAAA,IAAA,EAAA,OADA;AAEA,QAAA,KAAA,EAAA,EAFA;AAGA,QAAA,KAAA,EAAA;AAHA,OADA,EAMA;AACA,QAAA,KAAA,EAAA,GADA;AAEA,QAAA,GAAA,EAAA,OAFA;AAGA,QAAA,KAAA,EAAA,MAHA;AAIA,QAAA,QAAA,EAAA,IAJA;AAKA,QAAA,MAAA,EAAA,gBAAA,CAAA,EAAA,MAAA,EAAA;AACA,iBAAA,CAAA,CAAA,MAAA,EAAA,CACA,CAAA,CACA,GADA,EAEA;AACA,YAAA,KAAA,EAAA;AACA,cAAA,MAAA,EAAA;AADA,aADA;AAIA,YAAA,EAAA,EAAA;AACA,cAAA,KAAA,EAAA,iBAAA;AACA,gBAAA,KAAA,CAAA,gBAAA,GAAA,KAAA;AACA,gBAAA,KAAA,CAAA,GAAA,CAAA,KAAA,GAAA,MAAA,CAAA,GAAA,CAAA,KAAA;AACA,gBAAA,KAAA,CAAA,GAAA,CAAA,IAAA,GAAA,MAAA,CAAA,GAAA,CAAA,UAAA;;AACA,gBAAA,KAAA,CAAA,UAAA,CAAA,MAAA,CAAA,GAAA;AACA;AANA;AAJA,WAFA,EAeA,MAAA,MAAA,CAAA,GAAA,CAAA,IAAA,GAAA,IAAA,GAAA,MAAA,CAAA,GAAA,CAAA,KAfA,CADA,CAAA,CAAA;AAmBA;AAzBA,OANA,EAiCA;AACA,QAAA,KAAA,EAAA,GADA;AAEA,QAAA,GAAA,EAAA,MAFA;AAGA,QAAA,KAAA,EAAA,QAHA;AAIA,QAAA,KAAA,EAAA,GAJA;AAKA,QAAA,MAAA,EAAA,gBAAA,CAAA,EAAA,MAAA,EAAA;AACA,iBAAA,CAAA,CAAA,MAAA,EAAA,CACA,CAAA,CAAA,MAAA,EAAA;AACA,YAAA,KAAA,EAAA;AACA,cAAA,IAAA,EAAA,SADA;AAEA,cAAA,IAAA,EAAA;AAFA,aADA;AAKA,YAAA,KAAA,EAAA;AACA,cAAA,MAAA,EAAA;AADA;AALA,WAAA,CADA,EAUA,CAAA,CAAA,MAAA,EAAA,MAAA,CAAA,GAAA,CAAA,UAAA,CAVA,CAAA,CAAA;AAYA;AAlBA,OAjCA,EAqDA;AACA,QAAA,KAAA,EAAA,GADA;AAEA,QAAA,GAAA,EAAA,QAFA;AAGA,QAAA,KAAA,EAAA,QAHA;AAIA,QAAA,KAAA,EAAA,GAJA;AAKA,QAAA,MAAA,EAAA,gBAAA,CAAA,EAAA,MAAA,EAAA;AACA,cAAA,KAAA,CAAA,kBAAA,IAAA,QAAA,EAAA;AACA,mBAAA,CAAA,CAAA,KAAA,EAAA,CAAA,aAAA,CAAA,CAAA,EAAA,MAAA,CAAA,CAAA,CAAA;AACA,WAFA,MAEA,IAAA,KAAA,CAAA,kBAAA,IAAA,SAAA,EAAA;AACA,mBAAA,CAAA,CAAA,KAAA,EAAA,CAAA,YAAA,CAAA,CAAA,EAAA,MAAA,CAAA,CAAA,CAAA;AACA,WAFA,MAEA;AACA,mBAAA,CAAA,CAAA,KAAA,EAAA,CACA,UAAA,CAAA,CAAA,EAAA,MAAA,CADA,EAEA,aAAA,CAAA,CAAA,EAAA,MAAA,CAFA,CAAA,CAAA;AAIA;AACA;AAhBA,OArDA;AA9BA,KAAA;AAuGA,GA1PA;AA2PA,EAAA,OAAA,EAAA;AACA,IAAA,UADA,sBACA,CADA,EACA;AACA,WAAA,MAAA,CAAA,UAAA,GAAA,CAAA;AACA,WAAA,cAAA;AACA,KAJA;AAKA,IAAA,cALA,0BAKA,CALA,EAKA;AACA,WAAA,MAAA,CAAA,QAAA,GAAA,CAAA;AACA,WAAA,cAAA;AACA,KARA;AASA,IAAA,cATA,4BASA;AAAA;;AACA,UAAA,MAAA,GAAA,CAAA;AACA,UAAA,IAAA,GAAA,KAAA,kBAAA;;AACA,UAAA,IAAA,IAAA,QAAA,EAAA;AACA,QAAA,MAAA,GAAA,CAAA;AACA,OAFA,MAEA,IAAA,IAAA,IAAA,SAAA,EAAA;AACA,QAAA,MAAA,GAAA,CAAA;AACA,OAFA,MAEA;AACA,QAAA,MAAA,GAAA,CAAA;AACA;;AACA,WAAA,MAAA,CAAA,MAAA,GAAA,MAAA;AACA,WAAA,OAAA,GAAA,IAAA;AACA,MAAA,kBAAA,CAAA,KAAA,MAAA,CAAA,CAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,QAAA,MAAA,CAAA,OAAA,GAAA,KAAA;;AACA,YAAA,GAAA,CAAA,OAAA,EAAA;AACA,UAAA,MAAA,CAAA,cAAA,GAAA,GAAA,CAAA,MAAA,CAAA,OAAA;AACA,UAAA,MAAA,CAAA,KAAA,GAAA,GAAA,CAAA,MAAA,CAAA,aAAA;AACA;AACA,OANA;AAOA,KA5BA;AA6BA,IAAA,WA7BA,yBA6BA;AAAA;;AACA,WAAA,MAAA,CAAA,MAAA,GAAA,CAAA;AACA,MAAA,kBAAA,CAAA,KAAA,MAAA,CAAA,CAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,YAAA,GAAA,CAAA,OAAA,EAAA;AACA,UAAA,MAAA,CAAA,WAAA,GAAA,GAAA,CAAA,MAAA,CAAA,aAAA;;AACA,UAAA,MAAA,CAAA,eAAA;AACA;AACA,OALA;AAMA,KArCA;AAsCA,IAAA,eAtCA,6BAsCA;AAAA;;AACA,WAAA,MAAA,CAAA,MAAA,GAAA,CAAA;AACA,MAAA,kBAAA,CAAA,KAAA,MAAA,CAAA,CAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,YAAA,GAAA,CAAA,OAAA,EAAA;AACA,UAAA,MAAA,CAAA,YAAA,GAAA,GAAA,CAAA,MAAA,CAAA,aAAA;;AACA,UAAA,MAAA,CAAA,iBAAA;AACA;AACA,OALA;AAMA,KA9CA;AA+CA,IAAA,iBA/CA,+BA+CA;AAAA;;AACA,WAAA,MAAA,CAAA,MAAA,GAAA,CAAA;AACA,MAAA,kBAAA,CAAA,KAAA,MAAA,CAAA,CAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,YAAA,GAAA,CAAA,OAAA,EAAA;AACA,UAAA,MAAA,CAAA,eAAA,GAAA,GAAA,CAAA,MAAA,CAAA,aAAA;;AACA,UAAA,MAAA,CAAA,iBAAA,CAAA,QAAA;AACA;AACA,OALA;AAMA,KAvDA;AAwDA,IAAA,WAxDA,uBAwDA,MAxDA,EAwDA;AAAA;;AACA,MAAA,eAAA,GAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,YAAA,GAAA,CAAA,OAAA,EAAA;AACA,UAAA,MAAA,CAAA,QAAA,CAAA,OAAA,CAAA,MAAA;AACA;AACA,OAJA;AAKA,KA9DA;AA+DA,IAAA,aA/DA,yBA+DA,EA/DA,EA+DA;AAAA;;AACA,MAAA,iBAAA,CAAA,EAAA,CAAA,CAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,YAAA,GAAA,CAAA,OAAA,EAAA;AACA,UAAA,MAAA,CAAA,QAAA,CAAA,OAAA,CAAA,MAAA;AACA;AACA,OAJA;AAKA,KArEA;AAsEA,IAAA,gBAtEA,8BAsEA;AACA,WAAA,gBAAA,GAAA,IAAA;AACA,KAxEA;AAyEA,IAAA,iBAzEA,6BAyEA,IAzEA,EAyEA;AACA,UAAA,KAAA,kBAAA,KAAA,IAAA,EAAA;AACA,aAAA,gBAAA,GAAA,IAAA;AACA;;AACA,WAAA,kBAAA,GAAA,IAAA;;AACA,UAAA,IAAA,IAAA,QAAA,EAAA;AACA,aAAA,UAAA,GAAA,QAAA;AACA,OAFA,MAEA,IAAA,IAAA,IAAA,SAAA,EAAA;AACA,aAAA,UAAA,GAAA,QAAA;AACA,OAFA,MAEA;AACA,aAAA,UAAA,GAAA,QAAA;AACA;;AACA,WAAA,MAAA,CAAA,UAAA,GAAA,CAAA;AACA,WAAA,cAAA;AACA,KAvFA;AAwFA,IAAA,UAxFA,sBAwFA,CAxFA,EAwFA;AACA,WAAA,GAAA,CAAA,OAAA,GAAA,CAAA,CAAA,OAAA;AACA;AA1FA,GA3PA;AAuVA,EAAA,OAvVA,qBAuVA;AACA,SAAA,WAAA;AACA,GAzVA;AA0VA,EAAA,KAAA,EAAA;AACA;AACA,IAAA,MAFA,kBAEA,EAFA,EAEA,IAFA,EAEA;AACA,UAAA,EAAA,CAAA,IAAA,IAAA,eAAA,EAAA;AACA,aAAA,WAAA;AACA;AACA;AANA;AA1VA,CAAA","sourcesContent":["<style lang=\"less\">\n@import \"./message.less\";\n</style>\n\n<template>\n  <div class=\"message-main-con\">\n    <div class=\"message-mainlist-con\">\n      <div>\n        <Button @click=\"setCurrentMesType('unread')\" size=\"large\" long type=\"text\">\n          <div class=\"mes-wrap\">\n            <transition name=\"mes-current-type-btn\">\n              <Icon v-show=\"currentMessageType == 'unread'\" type=\"md-checkmark\"></Icon>\n            </transition>\n            <span class=\"mes-type-btn-text\">未读消息</span>\n            <Badge\n              class=\"message-count-badge-outer\"\n              class-name=\"message-count-badge-red\"\n              :count=\"unreadCount\"\n            ></Badge>\n          </div>\n        </Button>\n      </div>\n      <div>\n        <Button @click=\"setCurrentMesType('hasread')\" size=\"large\" long type=\"text\">\n          <div class=\"mes-wrap\">\n            <transition name=\"mes-current-type-btn\">\n              <Icon v-show=\"currentMessageType == 'hasread'\" type=\"md-checkmark\"></Icon>\n            </transition>\n            <span class=\"mes-type-btn-text\">已读消息</span>\n            <Badge\n              class=\"message-count-badge-outer\"\n              class-name=\"message-count-badge\"\n              :count=\"hasreadCount\"\n            ></Badge>\n          </div>\n        </Button>\n      </div>\n      <div>\n        <Button @click=\"setCurrentMesType('recyclebin')\" size=\"large\" long type=\"text\">\n          <div class=\"mes-wrap\">\n            <transition name=\"mes-current-type-btn\">\n              <Icon v-show=\"currentMessageType == 'recyclebin'\" type=\"md-checkmark\"></Icon>\n            </transition>\n            <span class=\"mes-type-btn-text\">回收站</span>\n            <Badge\n              class=\"message-count-badge-outer\"\n              class-name=\"message-count-badge\"\n              :count=\"recyclebinCount\"\n            ></Badge>\n          </div>\n        </Button>\n      </div>\n    </div>\n    <div class=\"message-content-con\">\n      <transition name=\"view-message\">\n        <div v-if=\"showMesTitleList\" class=\"message-title-list-con\">\n          <Table\n            ref=\"messageList\"\n            :loading=\"loading\"\n            :columns=\"mesTitleColumns\"\n            :data=\"currentMesList\"\n            :no-data-text=\"noDataText\"\n          ></Table>\n          <Page\n            :current=\"params.pageNumber\"\n            :total=\"total\"\n            :page-size=\"params.pageSize\"\n            @on-change=\"changePage\"\n            @on-page-size-change=\"changePageSize\"\n            :page-size-opts=\"[5,10]\"\n            size=\"small\"\n            show-total\n            show-elevator\n            show-sizer\n            class=\"page-fix\"\n          ></Page>\n        </div>\n      </transition>\n      <transition name=\"back-message-list\">\n        <div v-if=\"!showMesTitleList\" class=\"message-view-content-con\">\n          <div class=\"message-content-top-bar\">\n            <span class=\"mes-back-btn-con\">\n              <Button type=\"text\" @click=\"backMesTitleList\">\n                <Icon type=\"ios-arrow-back\"></Icon>&nbsp;&nbsp;返回\n              </Button>\n            </span>\n            <h3 class=\"mes-title\">{{ mes.title }}</h3>\n          </div>\n          <p class=\"mes-time-con\">\n            <Icon type=\"android-time\"></Icon>\n            &nbsp;&nbsp;{{ mes.time }}\n          </p>\n          <div class=\"message-content-body\">\n            <p class=\"message-content\" v-html=\"mes.content\">{{ mes.content }}</p>\n          </div>\n        </div>\n      </transition>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Cookies from \"js-cookie\";\nimport {\n  getMessageSendData,\n  editMessageSend,\n  deleteMessageSend\n} from \"@/api/index\";\nexport default {\n  name: \"message_index\",\n  data() {\n    const markAsreadBtn = (h, params) => {\n      return h(\n        \"Button\",\n        {\n          props: {\n            icon: \"md-eye-off\",\n            size: \"small\"\n          },\n          on: {\n            click: () => {\n              // 标记已读\n              let v = params.row;\n              // 转换null为\"\"\n              for (let attr in v) {\n                if (v[attr] == null) {\n                  v[attr] = \"\";\n                }\n              }\n              let str = JSON.stringify(v);\n              let data = JSON.parse(str);\n              data.status = 1;\n              this.loading = true;\n              editMessageSend(data).then(res => {\n                this.loading = false;\n                if (res.success) {\n                  this.$Message.success(\"操作成功\");\n                  this.unreadCount -= 1;\n                  this.hasreadCount += 1;\n                  this.$store.commit(\"setMessageCount\", this.unreadCount);\n                  this.refreshMessage();\n                }\n              });\n            }\n          }\n        },\n        \"标为已读\"\n      );\n    };\n    const deleteMesBtn = (h, params) => {\n      return h(\n        \"Button\",\n        {\n          props: {\n            icon: \"md-trash\",\n            size: \"small\",\n            type: \"error\"\n          },\n          on: {\n            click: () => {\n              // 移除\n              let v = params.row;\n              // 转换null为\"\"\n              for (let attr in v) {\n                if (v[attr] == null) {\n                  v[attr] = \"\";\n                }\n              }\n              let str = JSON.stringify(v);\n              let data = JSON.parse(str);\n              data.status = 2;\n              this.loading = true;\n              editMessageSend(data).then(res => {\n                this.loading = false;\n                if (res.success) {\n                  this.$Message.success(\"操作成功\");\n                  this.hasreadCount -= 1;\n                  this.recyclebinCount += 1;\n                  this.refreshMessage();\n                }\n              });\n            }\n          }\n        },\n        \"删除\"\n      );\n    };\n    const restoreBtn = (h, params) => {\n      return h(\n        \"Button\",\n        {\n          props: {\n            icon: \"md-redo\",\n            size: \"small\"\n          },\n          style: {\n            margin: \"0 5px 0 0\"\n          },\n          on: {\n            click: () => {\n              // 还原\n              let v = params.row;\n              // 转换null为\"\"\n              for (let attr in v) {\n                if (v[attr] == null) {\n                  v[attr] = \"\";\n                }\n              }\n              let str = JSON.stringify(v);\n              let data = JSON.parse(str);\n              data.status = 1;\n              this.loading = true;\n              editMessageSend(data).then(res => {\n                this.loading = false;\n                if (res.success) {\n                  this.$Message.success(\"操作成功\");\n                  this.recyclebinCount -= 1;\n                  this.hasreadCount += 1;\n                  this.refreshMessage();\n                }\n              });\n            }\n          }\n        },\n        \"还原\"\n      );\n    };\n    const deleteRealBtn = (h, params) => {\n      return h(\n        \"Button\",\n        {\n          props: {\n            icon: \"md-trash\",\n            size: \"small\",\n            type: \"error\"\n          },\n          on: {\n            click: () => {\n              // 彻底删除\n              let v = params.row;\n              this.loading = true;\n              deleteMessageSend(v.id).then(res => {\n                this.loading = false;\n                if (res.success) {\n                  this.$Message.success(\"操作成功\");\n                  this.recyclebinCount -= 1;\n                  this.refreshMessage();\n                }\n              });\n            }\n          }\n        },\n        \"彻底删除\"\n      );\n    };\n    return {\n      loading: true,\n      params: {\n        userId: JSON.parse(Cookies.get(\"userInfo\")).id,\n        status: 0,\n        pageNumber: 1, // 当前页数\n        pageSize: 10, // 页面大小\n        sort: \"createTime\", // 默认排序字段\n        order: \"desc\" // 默认排序方式\n      },\n      total: 0,\n      totalUnread: 0,\n      totalRead: 0,\n      totalRemove: 0,\n      currentMesList: [],\n      unreadMesList: [],\n      hasreadMesList: [],\n      recyclebinList: [],\n      currentMessageType: \"unread\",\n      showMesTitleList: true,\n      unreadCount: 0,\n      hasreadCount: 0,\n      recyclebinCount: 0,\n      noDataText: \"暂无未读消息\",\n      mes: {\n        title: \"\",\n        time: \"\",\n        content: \"\"\n      },\n      dictMessageType: this.$store.state.dict.messageType,\n      mesTitleColumns: [\n        {\n          type: \"index\",\n          width: 50,\n          align: \"center\"\n        },\n        {\n          title: \" \",\n          key: \"title\",\n          align: \"left\",\n          ellipsis: true,\n          render: (h, params) => {\n            return h(\"span\", [\n              h(\n                \"a\",\n                {\n                  style: {\n                    margin: \"0 30px 0 0\"\n                  },\n                  on: {\n                    click: () => {\n                      this.showMesTitleList = false;\n                      this.mes.title = params.row.title;\n                      this.mes.time = params.row.createTime;\n                      this.getContent(params.row);\n                    }\n                  }\n                },\n                \"【\" + params.row.type + \"】 \" + params.row.title\n              )\n            ]);\n          }\n        },\n        {\n          title: \" \",\n          key: \"time\",\n          align: \"center\",\n          width: 190,\n          render: (h, params) => {\n            return h(\"span\", [\n              h(\"Icon\", {\n                props: {\n                  type: \"md-time\",\n                  size: 16\n                },\n                style: {\n                  margin: \"0 5px 3px 0\"\n                }\n              }),\n              h(\"span\", params.row.createTime)\n            ]);\n          }\n        },\n        {\n          title: \" \",\n          key: \"asread\",\n          align: \"center\",\n          width: 210,\n          render: (h, params) => {\n            if (this.currentMessageType == \"unread\") {\n              return h(\"div\", [markAsreadBtn(h, params)]);\n            } else if (this.currentMessageType == \"hasread\") {\n              return h(\"div\", [deleteMesBtn(h, params)]);\n            } else {\n              return h(\"div\", [\n                restoreBtn(h, params),\n                deleteRealBtn(h, params)\n              ]);\n            }\n          }\n        }\n      ]\n    };\n  },\n  methods: {\n    changePage(v) {\n      this.params.pageNumber = v;\n      this.refreshMessage();\n    },\n    changePageSize(v) {\n      this.params.pageSize = v;\n      this.refreshMessage();\n    },\n    refreshMessage() {\n      let status = 0;\n      let type = this.currentMessageType;\n      if (type == \"unread\") {\n        status = 0;\n      } else if (type == \"hasread\") {\n        status = 1;\n      } else {\n        status = 2;\n      }\n      this.params.status = status;\n      this.loading = true;\n      getMessageSendData(this.params).then(res => {\n        this.loading = false;\n        if (res.success) {\n          this.currentMesList = res.result.content;\n          this.total = res.result.totalElements;\n        }\n      });\n    },\n    initMessage() {\n      this.params.status = 0;\n      getMessageSendData(this.params).then(res => {\n        if (res.success) {\n          this.unreadCount = res.result.totalElements;\n          this.initReadMessage();\n        }\n      });\n    },\n    initReadMessage() {\n      this.params.status = 1;\n      getMessageSendData(this.params).then(res => {\n        if (res.success) {\n          this.hasreadCount = res.result.totalElements;\n          this.initRemoveMessage();\n        }\n      });\n    },\n    initRemoveMessage() {\n      this.params.status = 2;\n      getMessageSendData(this.params).then(res => {\n        if (res.success) {\n          this.recyclebinCount = res.result.totalElements;\n          this.setCurrentMesType(\"unread\");\n        }\n      });\n    },\n    editMessage(status) {\n      editMessageSend().then(res => {\n        if (res.success) {\n          this.$Message.success(\"操作成功\");\n        }\n      });\n    },\n    deleteMessage(id) {\n      deleteMessageSend(id).then(res => {\n        if (res.success) {\n          this.$Message.success(\"删除成功\");\n        }\n      });\n    },\n    backMesTitleList() {\n      this.showMesTitleList = true;\n    },\n    setCurrentMesType(type) {\n      if (this.currentMessageType !== type) {\n        this.showMesTitleList = true;\n      }\n      this.currentMessageType = type;\n      if (type == \"unread\") {\n        this.noDataText = \"暂无未读消息\";\n      } else if (type == \"hasread\") {\n        this.noDataText = \"暂无已读消息\";\n      } else {\n        this.noDataText = \"回收站无消息\";\n      }\n      this.params.pageNumber = 1;\n      this.refreshMessage();\n    },\n    getContent(v) {\n      this.mes.content = v.content;\n    }\n  },\n  mounted() {\n    this.initMessage();\n  },\n  watch: {\n    // 监听路由变化通过id获取数据\n    $route(to, from) {\n      if (to.name == \"message_index\") {\n        this.initMessage();\n      }\n    }\n  }\n};\n</script>\n\n"],"sourceRoot":"src/views/message"}]}