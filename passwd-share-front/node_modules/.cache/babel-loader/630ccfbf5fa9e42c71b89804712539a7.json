{"remainingRequest":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/babel-loader/lib/index.js!/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/src/views/activiti/process-manage/processNodeEdit.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/src/views/activiti/process-manage/processNodeEdit.vue","mtime":1579164402589},{"path":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["processNodeEdit.vue"],"names":[],"mappings":"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","sourcesContent":["<style lang=\"less\">\n@import \"../../../styles/tree-common.less\";\n@import \"./processManage.less\";\n</style>\n<template>\n  <div class=\"search\">\n    <Card>\n      <p slot=\"title\">{{processName}} 流程节点设置</p>\n      <Row type=\"flex\" justify=\"start\">\n        <Col span=\"6\">\n          <Alert show-icon>\n            当前选择编辑：\n            <span class=\"select-title\">{{editTitle}}</span>\n            <a class=\"select-clear\" v-if=\"form.id\" @click=\"cancelEdit\">取消选择</a>\n          </Alert>\n          <div class=\"tree-bar\">\n            <Tree ref=\"tree\" :data=\"data\" :render=\"renderContent\" @on-select-change=\"selectTree\"></Tree>\n            <Spin size=\"large\" fix v-if=\"loading\"></Spin>\n          </div>\n        </Col>\n        <Col span=\"10\">\n          <Alert\n            type=\"warning\"\n            show-icon\n            style=\"margin-left: 1vw\"\n          >温馨提示：若流程运行至未分配审批人员的审批节点时，流程将自动中断取消</Alert>\n          <Form\n            ref=\"form\"\n            :model=\"form\"\n            :label-width=\"90\"\n            :rules=\"formValidate\"\n            style=\"position:relative\"\n          >\n            <FormItem label=\"节点名称\" prop=\"title\">{{form.title}}</FormItem>\n            <Form-item label=\"节点类型\" prop=\"type\">\n              <Select v-model=\"form.type\" disabled placeholder>\n                <Option\n                  v-for=\"(item, i) in dictNodeType\"\n                  :key=\"i\"\n                  :value=\"item.value\"\n                >{{item.title}}</Option>\n              </Select>\n            </Form-item>\n            <div v-show=\"form.type==1\">\n              <FormItem label=\"可审批人员\">\n                <Checkbox v-model=\"chooseRole\" @on-change=\"clickRole\">\n                  <Icon type=\"md-people\" size=\"14\" style=\"margin:0 2px 2px 0\"></Icon>\n                  <span>根据角色选择</span>\n                </Checkbox>\n                <Checkbox v-model=\"chooseDepartment\" @on-change=\"clickDepartment\">\n                  <Icon type=\"ios-people\" style=\"margin:0 2px 2px 0\"></Icon>\n                  <span>部门负责人</span>\n                </Checkbox>\n                <Checkbox v-model=\"chooseUser\" @on-change=\"clickUser\">\n                  <Icon type=\"md-person\" style=\"margin:0 2px 2px 0\"></Icon>\n                  <span>直接选择人员</span>\n                </Checkbox>\n                <Checkbox v-model=\"form.chooseDepHeader\">\n                  <Icon type=\"md-person\" style=\"margin:0 2px 2px 0\"></Icon>\n                  <span>发起人或上一审批人的部门负责人</span>\n                  <Tooltip\n                    content=\"自动获取发起人或上一审批人员的部门负责人\"\n                    placement=\"right\"\n                    transfer\n                    max-width=\"280\"\n                    style=\"display: inline-block !important;\"\n                  >\n                    <Icon\n                      type=\"md-help-circle\"\n                      size=\"20\"\n                      color=\"#c5c5c5\"\n                      style=\"margin-left:10px;cursor:pointer;\"\n                    />\n                  </Tooltip>\n                </Checkbox>\n              </FormItem>\n              <FormItem label=\"选择角色\" v-if=\"chooseRole\">\n                <Select v-model=\"form.roles\" multiple>\n                  <Option\n                    v-for=\"item in roleList\"\n                    :value=\"item.id\"\n                    :key=\"item.id\"\n                    :label=\"item.name\"\n                  >\n                    <span style=\"margin-right:10px;\">{{ item.name }}</span>\n                    <span style=\"color:#ccc;\">{{ item.description }}</span>\n                  </Option>\n                </Select>\n              </FormItem>\n              <div v-show=\"chooseDepartment\">\n                <FormItem label=\"选择部门\">\n                  <department-tree-choose\n                    multiple\n                    width=\"250px\"\n                    @on-change=\"handleSelectDepTree\"\n                    ref=\"depTree\"\n                  ></department-tree-choose>\n                </FormItem>\n              </div>\n              <div v-show=\"chooseUser\">\n                <FormItem label=\"选择用户\">\n                  <user-choose @on-change=\"handleSelectUser\" ref=\"user\"></user-choose>\n                </FormItem>\n              </div>\n            </div>\n            <Form-item class=\"br\">\n              <Button\n                type=\"primary\"\n                :loading=\"submitLoading\"\n                @click=\"handelSubmit\"\n                icon=\"ios-create-outline\"\n                :disabled=\"form.type!=1\"\n              >保存并提交</Button>\n              <Button @click=\"closeCurrentPage\">关闭</Button>\n            </Form-item>\n            <Spin size=\"large\" fix v-if=\"nodeLoading\"></Spin>\n          </Form>\n        </Col>\n      </Row>\n    </Card>\n  </div>\n</template>\n\n<script>\nimport { getProcessNode, editNodeUser } from \"@/api/activiti\";\nimport { getAllRoleList, getDictDataByType } from \"@/api/index\";\nimport userChoose from \"@/views/my-components/share/user-choose\";\nimport departmentTreeChoose from \"@/views/my-components/share/department-tree-choose\";\nexport default {\n  name: \"process_node_edit\",\n  components: {\n    userChoose,\n    departmentTreeChoose\n  },\n  data() {\n    return {\n      loading: false, // 表单加载状态\n      nodeLoading: false,\n      data: [],\n      editTitle: \"\",\n      selectUsers: [],\n      userModalVisible: false,\n      modalTitle: \"\", // 添加或编辑标题\n      form: {\n        // 添加或编辑表单对象初始化数据\n        title: \"\",\n        content: \"\",\n        type: null,\n        roles: [],\n        departmentIds: [],\n        chooseDepHeader: false\n      },\n      roleList: [],\n      formValidate: {\n        // 表单验证规则\n      },\n      submitLoading: false, // 添加或编辑提交状态\n      chooseRole: false,\n      chooseUser: false,\n      chooseDepartment: false,\n      dictNodeType: [],\n      backRoute: \"\",\n      processName: \"\",\n      processId: \"\"\n    };\n  },\n  methods: {\n    init() {\n      this.getDictDataType();\n      this.getRoleList();\n      this.backRoute = this.$route.query.backRoute;\n      this.processId = this.$route.query.id;\n      this.processName = this.$route.query.name;\n    },\n    getDictDataType() {\n      getDictDataByType(\"process_node_type\").then(res => {\n        if (res.success) {\n          this.dictNodeType = res.result;\n          this.getData();\n        }\n      });\n    },\n    getRoleList() {\n      getAllRoleList().then(res => {\n        if (res.success) {\n          this.roleList = res.result;\n        }\n      });\n    },\n    getData() {\n      this.loading = true;\n      getProcessNode(this.processId).then(res => {\n        this.loading = false;\n        if (res.success) {\n          // 转换null为\"\"\n          let v = res.result;\n          for (let attr in v) {\n            if (v[attr] == null) {\n              v[attr] = \"\";\n            }\n          }\n          let str = JSON.stringify(v);\n          let data = JSON.parse(str);\n          data.forEach(e => {\n            this.dictNodeType.forEach(t => {\n              t.value = Number(t.value);\n              if (!e.title && e.type == t.value) {\n                e.title = t.title;\n              }\n            });\n          });\n          this.data = data;\n        }\n      });\n    },\n    renderContent(h, { root, node, data }) {\n      let color = \"\",\n        word = \"\";\n      if (data.type == 0) {\n        color = \"#47cb89\";\n        word = \"开\";\n      } else if (data.type == 1) {\n        color = \"#2db7f5\";\n        word = \"审\";\n      } else if (data.type == 2) {\n        word = \"结\";\n      } else {\n        color = \"#f90\";\n        word = \"其他\";\n      }\n      return h(\n        \"span\",\n        {\n          style: {\n            display: \"inline-block\",\n            cursor: \"pointer\"\n          },\n          on: {\n            click: () => {\n              this.selectTree(data);\n            }\n          }\n        },\n        [\n          h(\"span\", [\n            h(\n              \"Avatar\",\n              {\n                props: {\n                  size: \"small\"\n                },\n                style: {\n                  background: color,\n                  \"margin-right\": \"5px\"\n                }\n              },\n              word\n            ),\n            h(\n              \"span\",\n              {\n                class: {\n                  \"ivu-tree-title\": true,\n                  \"ivu-tree-title-selected\": data.id == this.form.id\n                }\n              },\n              data.title\n            )\n          ])\n        ]\n      );\n    },\n    selectTree(v) {\n      if (v && v.id != this.form.id) {\n        // 转换null为\"\"\n        for (let attr in v) {\n          if (v[attr] == null) {\n            v[attr] = \"\";\n          }\n        }\n        let str = JSON.stringify(v);\n        let data = JSON.parse(str);\n        this.selectUsers = data.users;\n        this.editTitle = data.title;\n        // 回显用户\n        if (data.users && data.users.length > 0) {\n          this.chooseUser = true;\n          this.$refs.user.setData(data.users);\n        } else {\n          this.chooseUser = false;\n          this.$refs.user.setData([]);\n        }\n        // 回显角色\n        if (data.roles && data.roles.length > 0) {\n          this.chooseRole = true;\n          let roleIds = [];\n          data.roles.forEach(e => {\n            roleIds.push(e.id);\n          });\n          data.roles = roleIds;\n        } else {\n          this.chooseRole = false;\n        }\n        // 回显部门\n        if (data.departments && data.departments.length > 0) {\n          this.chooseDepartment = true;\n          let departmentIds = [],\n            title = \"\";\n          data.departments.forEach(e => {\n            departmentIds.push(e.id);\n            if (title == \"\") {\n              title = e.title;\n            } else {\n              title = title + \"、\" + e.title;\n            }\n          });\n          this.$refs.depTree.setData(departmentIds, title);\n          data.departmentIds = departmentIds;\n        } else {\n          this.chooseDepartment = false;\n          this.$refs.depTree.setData([], \"\");\n        }\n        console.log(data);\n        this.form = data;\n      } else {\n        this.cancelEdit();\n      }\n    },\n    cancelEdit() {\n      let data = this.$refs.tree.getSelectedNodes()[0];\n      if (data) {\n        data.selected = false;\n      }\n      this.$refs.form.resetFields();\n      this.form.id = \"\";\n      delete this.form.id;\n      this.editTitle = \"\";\n    },\n    handelSubmit() {\n      this.$refs.form.validate(valid => {\n        if (valid) {\n          this.submitLoading = true;\n          // 用户id数据\n          let ids = [];\n          this.selectUsers.forEach(e => {\n            ids += e.id + \",\";\n          });\n          if (ids.length > 0) {\n            ids = ids.substring(0, ids.length - 1);\n          }\n          this.form.nodeId = this.form.id;\n          if (this.chooseUser) {\n            this.form.userIds = ids;\n          } else {\n            this.form.userIds = [];\n          }\n          if (this.chooseRole) {\n            this.form.roleIds = this.form.roles;\n          } else {\n            this.form.roleIds = [];\n          }\n          if (!this.chooseDepartment) {\n            this.form.departmentIds = [];\n          }\n          editNodeUser(this.form).then(res => {\n            this.submitLoading = false;\n            if (res.success) {\n              this.$Message.success(\"操作成功\");\n              this.getData();\n            }\n          });\n        }\n      });\n    },\n    clickRole(v) {\n      this.chooseRole = v;\n    },\n    clickUser(v) {\n      this.chooseUser = v;\n    },\n    clickDepartment(v) {\n      this.chooseDepartment = v;\n    },\n    handleSelectUser(v) {\n      this.selectUsers = v;\n    },\n    handleSelectDepTree(v) {\n      this.form.departmentIds = v;\n    },\n    // 关闭当前页面\n    closeCurrentPage() {\n      this.$store.commit(\"removeTag\", \"process_node_edit\");\n      localStorage.pageOpenedList = JSON.stringify(\n        this.$store.state.app.pageOpenedList\n      );\n      this.$router.push({\n        name: this.backRoute\n      });\n    }\n  },\n  mounted() {\n    this.init();\n  },\n  watch: {\n    // 监听路由变化\n    $route(to, from) {\n      if (to.name == \"process_node_edit\") {\n        this.init();\n      }\n    }\n  }\n};\n</script>\n"],"sourceRoot":"src/views/activiti/process-manage"}]}