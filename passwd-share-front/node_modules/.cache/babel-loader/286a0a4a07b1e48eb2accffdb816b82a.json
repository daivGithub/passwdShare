{"remainingRequest":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/babel-loader/lib/index.js!/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/src/views/my-components/tree-table/Table/utils/mixins.js","dependencies":[{"path":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/src/views/my-components/tree-table/Table/utils/mixins.js","mtime":1568598632668},{"path":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZXhwb3J0IGRlZmF1bHQgewogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBwcmVmaXhDbHM6ICd6ay10YWJsZScKICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICB2YWxpZGF0ZVR5cGU6IGZ1bmN0aW9uIHZhbGlkYXRlVHlwZSh0eXBlLCB2YWxpZFR5cGVzLCBmdW5jTmFtZSkgewogICAgICB2YXIgaXNSZXR1cm4gPSBhcmd1bWVudHMubGVuZ3RoID4gMyAmJiBhcmd1bWVudHNbM10gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1szXSA6IHRydWU7CiAgICAgIGlmICh2YWxpZFR5cGVzLmluZGV4T2YodHlwZSkgPCAwKSB0aHJvdyBuZXcgRXJyb3IoIiIuY29uY2F0KGZ1bmNOYW1lLCAiJ3MgdHlwZSBtdXN0IGlzICIpLmNvbmNhdCh2YWxpZFR5cGVzLmpvaW4oJyBvciAnKSwgIi4iKSk7CgogICAgICBpZiAoaXNSZXR1cm4pIHsKICAgICAgICB2YXIgY2VydGFpblR5cGUgPSB7fTsKICAgICAgICB2YWxpZFR5cGVzLmZvckVhY2goZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICAgIGNlcnRhaW5UeXBlW2l0ZW1dID0gaXRlbSA9PT0gdHlwZTsKICAgICAgICB9KTsKICAgICAgICByZXR1cm4gY2VydGFpblR5cGU7CiAgICAgIH0KCiAgICAgIHJldHVybiB0cnVlOwogICAgfSwKICAgIGlzRXhwYW5kQ2VsbDogZnVuY3Rpb24gaXNFeHBhbmRDZWxsKHRhYmxlLCBjb2x1bW5JbmRleCkgewogICAgICByZXR1cm4gdGFibGUuZXhwYW5kVHlwZSAmJiAodGFibGUuc2hvd0luZGV4ICYmIGNvbHVtbkluZGV4ID09PSAxIHx8ICF0YWJsZS5zaG93SW5kZXggJiYgY29sdW1uSW5kZXggPT09IDApOwogICAgfSwKICAgIGlzU2VsZWN0aW9uQ2VsbDogZnVuY3Rpb24gaXNTZWxlY3Rpb25DZWxsKHRhYmxlLCBjb2x1bW5JbmRleCkgewogICAgICByZXR1cm4gdGFibGUuc2VsZWN0YWJsZSAmJiAodGFibGUuc2hvd0luZGV4ICYmIHRhYmxlLmV4cGFuZFR5cGUgJiYgY29sdW1uSW5kZXggPT09IDIgfHwgIXRhYmxlLnNob3dJbmRleCAmJiB0YWJsZS5leHBhbmRUeXBlICYmIGNvbHVtbkluZGV4ID09PSAxIHx8IHRhYmxlLnNob3dJbmRleCAmJiAhdGFibGUuZXhwYW5kVHlwZSAmJiBjb2x1bW5JbmRleCA9PT0gMSB8fCAhdGFibGUuc2hvd0luZGV4ICYmICF0YWJsZS5leHBhbmRUeXBlICYmIGNvbHVtbkluZGV4ID09PSAwKTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/src/views/my-components/tree-table/Table/utils/mixins.js"],"names":["data","prefixCls","methods","validateType","type","validTypes","funcName","isReturn","indexOf","Error","join","certainType","forEach","item","isExpandCell","table","columnIndex","expandType","showIndex","isSelectionCell","selectable"],"mappings":"AAAA,eAAe;AACbA,EAAAA,IADa,kBACN;AACL,WAAO;AACLC,MAAAA,SAAS,EAAE;AADN,KAAP;AAGD,GALY;AAMbC,EAAAA,OAAO,EAAE;AACPC,IAAAA,YADO,wBACMC,IADN,EACYC,UADZ,EACwBC,QADxB,EACmD;AAAA,UAAjBC,QAAiB,uEAAN,IAAM;AACxD,UAAIF,UAAU,CAACG,OAAX,CAAmBJ,IAAnB,IAA2B,CAA/B,EAAkC,MAAM,IAAIK,KAAJ,WAAaH,QAAb,6BAAwCD,UAAU,CAACK,IAAX,CAAgB,MAAhB,CAAxC,OAAN;;AAClC,UAAIH,QAAJ,EAAc;AACZ,YAAMI,WAAW,GAAG,EAApB;AACAN,QAAAA,UAAU,CAACO,OAAX,CAAmB,UAACC,IAAD,EAAU;AAC3BF,UAAAA,WAAW,CAACE,IAAD,CAAX,GAAoBA,IAAI,KAAKT,IAA7B;AACD,SAFD;AAGA,eAAOO,WAAP;AACD;;AACD,aAAO,IAAP;AACD,KAXM;AAYPG,IAAAA,YAZO,wBAYMC,KAZN,EAYaC,WAZb,EAY0B;AAC/B,aAAOD,KAAK,CAACE,UAAN,KACJF,KAAK,CAACG,SAAN,IAAmBF,WAAW,KAAK,CAApC,IACC,CAACD,KAAK,CAACG,SAAP,IAAoBF,WAAW,KAAK,CAFhC,CAAP;AAID,KAjBM;AAkBPG,IAAAA,eAlBO,2BAkBSJ,KAlBT,EAkBgBC,WAlBhB,EAkB6B;AAClC,aAAOD,KAAK,CAACK,UAAN,KACJL,KAAK,CAACG,SAAN,IAAmBH,KAAK,CAACE,UAAzB,IAAuCD,WAAW,KAAK,CAAxD,IACC,CAACD,KAAK,CAACG,SAAP,IAAoBH,KAAK,CAACE,UAA1B,IAAwCD,WAAW,KAAK,CADzD,IAECD,KAAK,CAACG,SAAN,IAAmB,CAACH,KAAK,CAACE,UAA1B,IAAwCD,WAAW,KAAK,CAFzD,IAGC,CAACD,KAAK,CAACG,SAAP,IAAoB,CAACH,KAAK,CAACE,UAA3B,IAAyCD,WAAW,KAAK,CAJrD,CAAP;AAMD;AAzBM;AANI,CAAf","sourcesContent":["export default {\n  data() {\n    return {\n      prefixCls: 'zk-table',\n    };\n  },\n  methods: {\n    validateType(type, validTypes, funcName, isReturn = true) {\n      if (validTypes.indexOf(type) < 0) throw new Error(`${funcName}'s type must is ${validTypes.join(' or ')}.`);\n      if (isReturn) {\n        const certainType = {};\n        validTypes.forEach((item) => {\n          certainType[item] = item === type;\n        });\n        return certainType;\n      }\n      return true;\n    },\n    isExpandCell(table, columnIndex) {\n      return table.expandType && (\n        (table.showIndex && columnIndex === 1) ||\n        (!table.showIndex && columnIndex === 0)\n      );\n    },\n    isSelectionCell(table, columnIndex) {\n      return table.selectable && (\n        (table.showIndex && table.expandType && columnIndex === 2) ||\n        (!table.showIndex && table.expandType && columnIndex === 1) ||\n        (table.showIndex && !table.expandType && columnIndex === 1) ||\n        (!table.showIndex && !table.expandType && columnIndex === 0)\n      );\n    },\n  },\n};\n"]}]}