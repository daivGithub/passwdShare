{"remainingRequest":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/babel-loader/lib/index.js!/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/src/views/activiti/done-manage/doneManage.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/src/views/activiti/done-manage/doneManage.vue","mtime":1577168504900},{"path":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["doneManage.vue"],"names":[],"mappings":"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","sourcesContent":["<style lang=\"less\">\n@import \"../../../styles/table-common.less\";\n@import \"./doneManage.less\";\n</style>\n<template>\n  <div class=\"search\">\n    <Card>\n      <Row v-show=\"openSearch\" @keydown.enter.native=\"handleSearch\">\n        <Form ref=\"searchForm\" :model=\"searchForm\" inline :label-width=\"70\">\n          <Form-item label=\"任务名称\" prop=\"name\">\n            <Input\n              type=\"text\"\n              v-model=\"searchForm.name\"\n              placeholder=\"请输入\"\n              clearable\n              style=\"width: 200px\"\n            />\n          </Form-item>\n          <Form-item style=\"margin-left:-35px;\" class=\"br\">\n            <Button @click=\"handleSearch\" type=\"primary\" icon=\"ios-search\">搜索</Button>\n            <Button @click=\"handleReset\">重置</Button>\n          </Form-item>\n        </Form>\n      </Row>\n      <Row class=\"operation\">\n        <Button @click=\"delAll\" icon=\"md-trash\">批量删除</Button>\n        <Button @click=\"getDataList\" icon=\"md-refresh\">刷新</Button>\n        <Button type=\"dashed\" @click=\"openSearch=!openSearch\">{{openSearch ? \"关闭搜索\" : \"开启搜索\"}}</Button>\n        <Button type=\"dashed\" @click=\"openTip=!openTip\">{{openTip ? \"关闭提示\" : \"开启提示\"}}</Button>\n      </Row>\n      <Row v-show=\"openTip\">\n        <Alert show-icon>\n          已选择\n          <span class=\"select-count\">{{selectCount}}</span> 项\n          <a class=\"select-clear\" @click=\"clearSelectAll\">清空</a>\n        </Alert>\n      </Row>\n      <Row>\n        <Table\n          :loading=\"loading\"\n          border\n          :columns=\"columns\"\n          sortable=\"custom\"\n          :data=\"data\"\n          @on-sort-change=\"changeSort\"\n          @on-selection-change=\"showSelect\"\n          ref=\"table\"\n        ></Table>\n      </Row>\n      <Row type=\"flex\" justify=\"end\" class=\"page\">\n        <Page\n          :current=\"searchForm.pageNumber\"\n          :total=\"total\"\n          :page-size=\"searchForm.pageSize\"\n          @on-change=\"changePage\"\n          @on-page-size-change=\"changePageSize\"\n          :page-size-opts=\"[10,20,50]\"\n          size=\"small\"\n          show-total\n          show-elevator\n          show-sizer\n        ></Page>\n      </Row>\n    </Card>\n\n    <Modal :title=\"modalTitle\" v-model=\"modalVisible\" :mask-closable=\"false\" :width=\"500\">\n      <Form ref=\"form\" :model=\"form\" :label-width=\"70\" :rules=\"formValidate\">\n        <FormItem label=\"删除原因\" prop=\"reason\">\n          <Input type=\"textarea\" v-model=\"form.reason\" :rows=\"4\" />\n        </FormItem>\n      </Form>\n      <div slot=\"footer\">\n        <Button type=\"text\" @click=\"handelCancel\">取消</Button>\n        <Button type=\"primary\" :loading=\"submitLoading\" @click=\"handelSubmit\">提交</Button>\n      </div>\n    </Modal>\n  </div>\n</template>\n\n<script>\nimport { doneList, updateInsStatus, deleteHistoricTask } from \"@/api/activiti\";\nimport util from \"@/libs/util\";\nexport default {\n  name: \"done-manage\",\n  data() {\n    return {\n      openSearch: true,\n      openTip: true,\n      loading: true, // 表单加载状态\n      selectCount: 0, // 多选计数\n      selectList: [], // 多选数据\n      searchForm: {\n        // 搜索框对应data对象\n        name: \"\",\n        pageNumber: 1, // 当前页数\n        pageSize: 10, // 页面大小\n        sort: \"createTime\", // 默认排序字段\n        order: \"desc\" // 默认排序方式\n      },\n      modalType: 0, // 添加或编辑标识\n      modalVisible: false, // 添加或编辑显示\n      modalTitle: \"\", // 添加或编辑标题\n      form: {\n        // 添加或编辑表单对象初始化数据\n        reason: \"\"\n      },\n      formValidate: {\n        // 表单验证规则\n      },\n      submitLoading: false, // 添加或编辑提交状态\n      columns: [\n        // 表头\n        {\n          type: \"selection\",\n          width: 60,\n          align: \"center\"\n        },\n        {\n          type: \"index\",\n          width: 60,\n          align: \"center\"\n        },\n        {\n          title: \"任务名称\",\n          key: \"name\",\n          minWidth: 160\n        },\n        {\n          title: \"所属流程\",\n          key: \"processName\",\n          width: 150\n        },\n        {\n          title: \"委托代办人\",\n          key: \"owner\",\n          width: 130\n        },\n        {\n          title: \"流程发起人\",\n          key: \"applyer\",\n          width: 130\n        },\n        {\n          title: \"优先级\",\n          key: \"priority\",\n          width: 100,\n          sortable: true,\n          render: (h, params) => {\n            let text = \"\";\n            this.dictPriority.forEach(e => {\n              if (e.value == params.row.priority) {\n                text = e.title;\n              }\n            });\n            return h(\"div\", text);\n          }\n        },\n        {\n          title: \"审批操作\",\n          key: \"deleteReason\",\n          align: \"center\",\n          width: 130\n        },\n        {\n          title: \"审批意见\",\n          key: \"comment\",\n          align: \"center\",\n          width: 130\n        },\n        {\n          title: \"耗时\",\n          key: \"duration\",\n          align: \"center\",\n          width: 130,\n          sortable: true,\n          render: (h, params) => {\n            return h(\"div\", util.millsToTime(params.row.duration));\n          }\n        },\n        {\n          title: \"创建时间\",\n          key: \"createTime\",\n          width: 180,\n          sortType: \"desc\",\n          sortable: true\n        },\n        {\n          title: \"操作\",\n          key: \"action\",\n          align: \"center\",\n          width: 240,\n          fixed: \"right\",\n          render: (h, params) => {\n            return h(\"div\", [\n              h(\n                \"Button\",\n                {\n                  props: {\n                    type: \"primary\",\n                    size: \"small\"\n                  },\n                  style: {\n                    marginRight: \"5px\"\n                  },\n                  on: {\n                    click: () => {\n                      this.detail(params.row);\n                    }\n                  }\n                },\n                \"表单数据\"\n              ),\n              h(\n                \"Button\",\n                {\n                  props: {\n                    size: \"small\"\n                  },\n                  style: {\n                    marginRight: \"5px\"\n                  },\n                  on: {\n                    click: () => {\n                      this.history(params.row);\n                    }\n                  }\n                },\n                \"审批历史\"\n              ),\n              h(\n                \"Button\",\n                {\n                  props: {\n                    type: \"error\",\n                    size: \"small\"\n                  },\n                  on: {\n                    click: () => {\n                      this.remove(params.row);\n                    }\n                  }\n                },\n                \"删除\"\n              )\n            ]);\n          }\n        }\n      ],\n      data: [], // 表单数据\n      total: 0, // 表单数据总数\n      deleteId: \"\",\n      dictPriority: this.$store.state.dict.priority\n    };\n  },\n  methods: {\n    init() {\n      this.getDataList();\n    },\n    changeSort(e) {\n      this.searchForm.sort = e.key;\n      this.searchForm.order = e.order;\n      if (e.order == \"normal\") {\n        this.searchForm.order = \"\";\n      }\n      this.getDataList();\n    },\n    changePage(v) {\n      this.searchForm.pageNumber = v;\n      this.getDataList();\n      this.clearSelectAll();\n    },\n    changePageSize(v) {\n      this.searchForm.pageSize = v;\n      this.getDataList();\n    },\n    getDataList() {\n      this.loading = true;\n      doneList(this.searchForm).then(res => {\n        this.loading = false;\n        if (res.success) {\n          this.data = res.result.content;\n          this.total = res.result.totalElements;\n        }\n      });\n    },\n    handleSearch() {\n      this.searchForm.pageNumber = 1;\n      this.searchForm.pageSize = 10;\n      this.getDataList();\n    },\n    handleReset() {\n      this.$refs.searchForm.resetFields();\n      this.searchForm.pageNumber = 1;\n      this.searchForm.pageSize = 10;\n      // 重新加载数据\n      this.getDataList();\n    },\n    showSelect(e) {\n      this.selectList = e;\n      this.selectCount = e.length;\n    },\n    clearSelectAll() {\n      this.$refs.table.selectAll(false);\n    },\n    handelCancel() {\n      this.modalVisible = false;\n    },\n    handelSubmit() {\n      this.$refs.form.validate(valid => {\n        if (valid) {\n          this.submitLoading = true;\n          if (this.modalType == 0) {\n            deleteProcessIns(this.deleteId).then(res => {\n              this.submitLoading = false;\n              if (res.success) {\n                this.$Message.success(\"操作成功\");\n                this.modalVisible = false;\n                this.getDataList();\n              }\n            });\n          } else if (this.modalType == 1) {\n            let ids = \"\";\n            this.selectList.forEach(function(e) {\n              ids += e.id + \",\";\n            });\n            ids = ids.substring(0, ids.length - 1);\n            // 批量删除\n            deleteProcessIns(ids).then(res => {\n              this.submitLoading = false;\n              if (res.success) {\n                this.$Message.success(\"操作成功\");\n                this.modalVisible = false;\n                this.clearSelectAll();\n                this.getDataList();\n              }\n            });\n          }\n        }\n      });\n    },\n    editStatus(status, v) {\n      let operation = \"\";\n      if (status == 0) {\n        operation = \"暂停挂起\";\n      } else {\n        operation = \"激活运行\";\n      }\n      this.$Modal.confirm({\n        title: \"确认\" + operation,\n        content: `您确认要${operation}流程实例${v.name}?`,\n        loading: true,\n        onOk: () => {\n          let params = {\n            status: status,\n            id: v.id\n          };\n          updateInsStatus(params).then(res => {\n            this.$Modal.remove();\n            if (res.success) {\n              this.$Message.success(\"操作成功\");\n              this.getDataList();\n            }\n          });\n        }\n      });\n    },\n    detail(v) {\n      let query = {\n        id: v.tableId,\n        type: 3,\n        backRoute: this.$route.name\n      };\n      this.$router.push({\n        name: v.routeName,\n        query: query\n      });\n    },\n    history(v) {\n      let query = { id: v.procInstId, backRoute: this.$route.name };\n      this.$router.push({\n        name: \"historic_detail\",\n        query: query\n      });\n    },\n    remove(v) {\n      this.$Modal.confirm({\n        title: \"确认删除\",\n        // 记得确认修改此处\n        content: \"您确认要删除 \" + v.name + \" ?\",\n        loading: true,\n        onOk: () => {\n          deleteHistoricTask(v.id).then(res => {\n            this.$Modal.remove();\n            if (res.success) {\n              this.$Message.success(\"操作成功\");\n              this.getDataList();\n            }\n          });\n        }\n      });\n    },\n    delAll() {\n      if (this.selectCount <= 0) {\n        this.$Message.warning(\"您还未选择要删除的数据\");\n        return;\n      }\n      this.modalTitle = \"确认要删除所选的 \" + this.selectCount + \" 条数据\";\n      this.$Modal.confirm({\n        title: \"确认删除\",\n        content: \"您确认要删除所选的 \" + this.selectCount + \" 条数据?\",\n        loading: true,\n        onOk: () => {\n          let ids = \"\";\n          this.selectList.forEach(function(e) {\n            ids += e.id + \",\";\n          });\n          ids = ids.substring(0, ids.length - 1);\n          // 批量删除\n          deleteHistoricTask(ids).then(res => {\n            this.$Modal.remove();\n            if (res.success) {\n              this.$Message.success(\"操作成功\");\n              this.clearSelectAll();\n              this.getDataList();\n            }\n          });\n        }\n      });\n    }\n  },\n  mounted() {\n    this.init();\n  },\n  watch: {\n    // 监听路由变化\n    $route(to, from) {\n      if (to.name == \"done-manage\") {\n        this.getDataList();\n      }\n    }\n  }\n};\n</script>"],"sourceRoot":"src/views/activiti/done-manage"}]}