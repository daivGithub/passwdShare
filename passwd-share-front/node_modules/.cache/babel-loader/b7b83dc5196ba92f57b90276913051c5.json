{"remainingRequest":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/babel-loader/lib/index.js!/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/src/libs/validate.js","dependencies":[{"path":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/src/libs/validate.js","mtime":1562030992322},{"path":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:LyoqCiAqIOWvhueggeagvOW8j+mqjOivgQogKiBAcGFyYW0gcnVsZSDpqozor4Hop4TliJnvvIjkuI3lsJHkuo425L2N77yJCiAqIEBwYXJhbSB2YWx1ZSDpnIDopoHpqozor4HnmoTlgLwKICogQHBhcmFtIGNhbGxiYWNrIOWbnuiwg+WHveaVsAogKi8KZXhwb3J0IHZhciB2YWxpZGF0ZVBhc3N3b3JkID0gZnVuY3Rpb24gdmFsaWRhdGVQYXNzd29yZChydWxlLCB2YWx1ZSwgY2FsbGJhY2spIHsKICBpZiAodmFsdWUubGVuZ3RoIDwgNikgewogICAgY2FsbGJhY2sobmV3IEVycm9yKCflr4bnoIHplb/luqbkuI3lvpflsI/kuo425L2NJykpOwogIH0gZWxzZSB7CiAgICBjYWxsYmFjaygpOwogIH0KfTsKLyoqCiAqIOaJi+acuuWPt+eggeagvOW8j+mqjOivgQogKiBAcGFyYW0gcnVsZSDpqozor4Hop4TliJkKICogQHBhcmFtIHZhbHVlIOmcgOimgemqjOivgeeahOWAvAogKiBAcGFyYW0gY2FsbGJhY2sg5Zue6LCD5Ye95pWwCiAqLwoKZXhwb3J0IHZhciB2YWxpZGF0ZU1vYmlsZSA9IGZ1bmN0aW9uIHZhbGlkYXRlTW9iaWxlKHJ1bGUsIHZhbHVlLCBjYWxsYmFjaykgewogIHZhciByZWcgPSAvXlsxXVszLDQsNSw2LDcsOF1bMC05XXs5fSQvOwoKICBpZiAoIXJlZy50ZXN0KHZhbHVlKSkgewogICAgY2FsbGJhY2sobmV3IEVycm9yKCfmiYvmnLrlj7fmoLzlvI/plJnor68nKSk7CiAgfSBlbHNlIHsKICAgIGNhbGxiYWNrKCk7CiAgfQp9OwovKioKICog6Lqr5Lu96K+B5Y+356CB5qC85byP6aqM6K+BCiAqIEBwYXJhbSBydWxlIOmqjOivgeinhOWIme+8iOaYr+WQpua7oei2szE45L2N77yJCiAqIEBwYXJhbSB2YWx1ZSDpnIDopoHpqozor4HnmoTlgLwKICogQHBhcmFtIGNhbGxiYWNrIOWbnuiwg+WHveaVsAogKi8KCmV4cG9ydCB2YXIgdmFsaWRhdGVJRENhcmQgPSBmdW5jdGlvbiB2YWxpZGF0ZUlEQ2FyZChydWxlLCB2YWx1ZSwgY2FsbGJhY2spIHsKICB2YXIgcmVnID0gL15bMS05XVxkezV9KDE4fDE5fChbMjNdXGQpKVxkezJ9KCgwWzEtOV0pfCgxMHwxMXwxMikpKChbMC0yXVsxLTldKXwxMHwyMHwzMHwzMSlcZHszfVswLTlYeF0kLzsKCiAgaWYgKCFyZWcudGVzdCh2YWx1ZSkpIHsKICAgIGNhbGxiYWNrKG5ldyBFcnJvcign6Lqr5Lu96K+B5Y+356CB5qC85byP6ZSZ6K+vJykpOwogIH0gZWxzZSB7CiAgICBjYWxsYmFjaygpOwogIH0KfTs="},{"version":3,"sources":["/Users/daiv/files/GitProjects/passwdShare/passwd-share-front/src/libs/validate.js"],"names":["validatePassword","rule","value","callback","length","Error","validateMobile","reg","test","validateIDCard"],"mappings":"AAAA;;;;;;AAMA,OAAO,IAAMA,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,IAAD,EAAOC,KAAP,EAAcC,QAAd,EAA2B;AACzD,MAAID,KAAK,CAACE,MAAN,GAAe,CAAnB,EAAsB;AACpBD,IAAAA,QAAQ,CAAC,IAAIE,KAAJ,CAAU,YAAV,CAAD,CAAR;AACD,GAFD,MAEO;AACLF,IAAAA,QAAQ;AACT;AACF,CANM;AAQP;;;;;;;AAMA,OAAO,IAAMG,cAAc,GAAG,SAAjBA,cAAiB,CAACL,IAAD,EAAOC,KAAP,EAAcC,QAAd,EAA2B;AACvD,MAAII,GAAG,GAAG,4BAAV;;AACA,MAAI,CAACA,GAAG,CAACC,IAAJ,CAASN,KAAT,CAAL,EAAsB;AACpBC,IAAAA,QAAQ,CAAC,IAAIE,KAAJ,CAAU,SAAV,CAAD,CAAR;AACD,GAFD,MAEO;AACLF,IAAAA,QAAQ;AACT;AACF,CAPM;AASP;;;;;;;AAMA,OAAO,IAAMM,cAAc,GAAG,SAAjBA,cAAiB,CAACR,IAAD,EAAOC,KAAP,EAAcC,QAAd,EAA2B;AACvD,MAAMI,GAAG,GAAG,8FAAZ;;AACA,MAAI,CAACA,GAAG,CAACC,IAAJ,CAASN,KAAT,CAAL,EAAsB;AACpBC,IAAAA,QAAQ,CAAC,IAAIE,KAAJ,CAAU,WAAV,CAAD,CAAR;AACD,GAFD,MAEO;AACLF,IAAAA,QAAQ;AACT;AACF,CAPM","sourcesContent":["/**\n * 密码格式验证\n * @param rule 验证规则（不少于6位）\n * @param value 需要验证的值\n * @param callback 回调函数\n */\nexport const validatePassword = (rule, value, callback) => {\n  if (value.length < 6) {\n    callback(new Error('密码长度不得小于6位'));\n  } else {\n    callback();\n  }\n};\n\n/**\n * 手机号码格式验证\n * @param rule 验证规则\n * @param value 需要验证的值\n * @param callback 回调函数\n */\nexport const validateMobile = (rule, value, callback) => {\n  var reg = /^[1][3,4,5,6,7,8][0-9]{9}$/;\n  if (!reg.test(value)) {\n    callback(new Error('手机号格式错误'));\n  } else {\n    callback();\n  }\n};\n\n/**\n * 身份证号码格式验证\n * @param rule 验证规则（是否满足18位）\n * @param value 需要验证的值\n * @param callback 回调函数\n */\nexport const validateIDCard = (rule, value, callback) => {\n  const reg = /^[1-9]\\d{5}(18|19|([23]\\d))\\d{2}((0[1-9])|(10|11|12))(([0-2][1-9])|10|20|30|31)\\d{3}[0-9Xx]$/;\n  if (!reg.test(value)) {\n    callback(new Error('身份证号码格式错误'));\n  } else {\n    callback();\n  }\n};"]}]}